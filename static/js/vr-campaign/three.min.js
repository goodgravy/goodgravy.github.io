// File:src/Three.js
// browserify support
// GL STATE CONSTANTS
// SHADOWING TYPES
// MATERIAL CONSTANTS
// side
// shading
// colors
// blending modes
// custom blending equations
// (numbers start from 100 not to clash with other
//  mappings to OpenGL constants defined in Texture.js)
// custom blending destination factors
// custom blending source factors
//THREE.ZeroFactor = 200;
//THREE.OneFactor = 201;
//THREE.SrcAlphaFactor = 204;
//THREE.OneMinusSrcAlphaFactor = 205;
//THREE.DstAlphaFactor = 206;
//THREE.OneMinusDstAlphaFactor = 207;
// TEXTURE CONSTANTS
// Mapping modes
// Wrapping modes
// Filters
// Data types
// Pixel types
//THREE.UnsignedByteType = 1009;
// Pixel formats
// Compressed texture formats
// Potential future PVRTC compressed texture formats
// File:src/math/Color.js
// File:src/math/Quaternion.js
// File:src/math/Vector2.js
// File:src/math/Vector3.js
// File:src/math/Vector4.js
// File:src/math/Euler.js
// File:src/math/Line3.js
// File:src/math/Box2.js
// File:src/math/Box3.js
// File:src/math/Matrix3.js
// File:src/math/Matrix4.js
// File:src/math/Ray.js
// File:src/math/Sphere.js
// File:src/math/Frustum.js
// File:src/math/Plane.js
// File:src/math/Math.js
// File:src/math/Spline.js
// File:src/math/Triangle.js
// static/instance method to calculate barycoordinates
// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
// File:src/core/Clock.js
// File:src/core/EventDispatcher.js
// File:src/core/Raycaster.js
// File:src/core/Object3D.js
// File:src/core/Projector.js
// File:src/core/Face3.js
// File:src/core/Face4.js
// File:src/core/BufferAttribute.js
//
// File:src/core/BufferGeometry.js
// File:src/core/Geometry.js
// File:src/cameras/Camera.js
// File:src/cameras/CubeCamera.js
// File:src/cameras/OrthographicCamera.js
// File:src/cameras/PerspectiveCamera.js
// File:src/lights/Light.js
// File:src/lights/AmbientLight.js
// File:src/lights/AreaLight.js
// File:src/lights/DirectionalLight.js
// File:src/lights/HemisphereLight.js
// File:src/lights/PointLight.js
// File:src/lights/SpotLight.js
// File:src/loaders/Cache.js
// File:src/loaders/Loader.js
// File:src/loaders/XHRLoader.js
// File:src/loaders/ImageLoader.js
// File:src/loaders/JSONLoader.js
// File:src/loaders/LoadingManager.js
// File:src/loaders/BufferGeometryLoader.js
// File:src/loaders/MaterialLoader.js
// File:src/loaders/ObjectLoader.js
// File:src/loaders/TextureLoader.js
// File:src/materials/Material.js
// File:src/materials/LineBasicMaterial.js
// File:src/materials/LineDashedMaterial.js
// File:src/materials/MeshBasicMaterial.js
// File:src/materials/MeshLambertMaterial.js
// File:src/materials/MeshPhongMaterial.js
// File:src/materials/MeshDepthMaterial.js
// File:src/materials/MeshNormalMaterial.js
// File:src/materials/MeshFaceMaterial.js
// File:src/materials/PointCloudMaterial.js
// backwards compatibility
// File:src/materials/ShaderMaterial.js
// File:src/materials/RawShaderMaterial.js
// File:src/materials/SpriteMaterial.js
// File:src/materials/SpriteCanvasMaterial.js
// backwards compatibility
// File:src/textures/Texture.js
// File:src/textures/CubeTexture.js
// File:src/textures/CompressedTexture.js
// File:src/textures/DataTexture.js
// File:src/objects/PointCloud.js
// Backwards compatibility
// File:src/objects/Line.js
// File:src/objects/Mesh.js
// File:src/objects/Bone.js
// File:src/objects/Skeleton.js
// File:src/objects/SkinnedMesh.js
// File:src/objects/MorphAnimMesh.js
// File:src/objects/LOD.js
// File:src/objects/Sprite.js
// Backwards compatibility
// File:src/scenes/Scene.js
// File:src/scenes/Fog.js
// File:src/scenes/FogExp2.js
// File:src/renderers/CanvasRenderer.js
// File:src/renderers/shaders/ShaderChunk.js
// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl
// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl
// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl
// File:src/renderers/shaders/UniformsUtils.js
// File:src/renderers/shaders/UniformsLib.js
// File:src/renderers/shaders/ShaderLib.js
// File:src/renderers/WebGLRenderer.js
// File:src/renderers/WebGLRenderTarget.js
// File:src/renderers/WebGLRenderTargetCube.js
// File:src/renderers/webgl/WebGLProgram.js
// File:src/renderers/webgl/WebGLShader.js
// File:src/renderers/renderables/RenderableVertex.js
// File:src/renderers/renderables/RenderableFace.js
// File:src/renderers/renderables/RenderableObject.js
// File:src/renderers/renderables/RenderableSprite.js
// File:src/renderers/renderables/RenderableLine.js
// File:src/extras/GeometryUtils.js
// File:src/extras/ImageUtils.js
// File:src/extras/SceneUtils.js
// File:src/extras/FontUtils.js
// To use the typeface.js face files, hook up the API
// File:src/extras/core/Curve.js
// Virtual base class method to overwrite and implement in subclasses
//	- t [0 .. 1]
// Get point at relative position in curve according to arc length
// - u [0 .. 1]
// Get sequence of points using getPoint( t )
// Get sequence of points using getPointAt( u )
// Get total curve arc length
// Get list of cumulative segment lengths
// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance
// Returns a unit vector tangent at t
// In case any sub curve does not implement its tangent derivation,
// 2 points a small delta apart will be used to find its gradient
// which seems to give a reasonable approximation
// TODO: Transformation for Curves?
// A Factory method for creating new curve subclasses
// File:src/extras/core/CurvePath.js
// To get accurate point with reference to
// entire path distance at time t,
// following has to be done:
// 1. Length of each sub path have to be known
// 2. Locate and identify type of curve
// 3. Get t for the curve
// 4. Return curve.getPointAt(t')
// We cannot use the default THREE.Curve getPoint() with getLength() because in
// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
// getPoint() depends on getLength
// Compute lengths and cache them
// We cannot overwrite getLengths() because UtoT mapping uses it.
// Returns min and max coordinates
/// Generate geometry from path points (for Line or Points objects)
// Generate geometry from equidistance sampling along the path
// Wrap path / Bend modifiers?
// This returns getPoints() bend/wrapped around the contour of a path.
// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html
// File:src/extras/core/Gyroscope.js
// File:src/extras/core/Path.js
// TODO Clean up PATH API
// Create path using straight lines to connect all points
// - vectors: array of Vector2
// startPath() endPath()?
//---
// FUTURE: Change the API or follow canvas API?
//
// Breaks path into shapes
//
//	Assumptions (if parameter isCCW==true the opposite holds):
//	- solid shapes are defined clockwise (CW)
//	- holes are defined counterclockwise (CCW)
//
//	If parameter noHoles==true:
//  - all subPaths are regarded as solid shapes
//  - definition order CW/CCW has no relevance
//
// File:src/extras/core/Shape.js
// STEP 1 Create a path.
// STEP 2 Turn path into shape.
// STEP 3 ExtrudeGeometry takes in Shape/Shapes
// STEP 3a - Extract points from each shape, turn to vertices
// STEP 3b - Triangulate each shape, add faces.
// Convenience method to return ExtrudeGeometry
// Convenience method to return ShapeGeometry
// Get points of holes
// Get points of holes (spaced by regular distance)
// Get points of shape and holes (keypoints based on segments parameter)
//
// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {
//
// 	return {
//
// 		shape: this.transform( bend, divisions ),
// 		holes: this.getPointsHoles( divisions, bend )
//
// 	};
//
// };
// Get points of shape and holes (spaced by regular distance)
// File:src/extras/curves/LineCurve.js
// Line curve is linear, so we can overwrite default getPointAt
// File:src/extras/curves/QuadraticBezierCurve.js
// File:src/extras/curves/CubicBezierCurve.js
// File:src/extras/curves/SplineCurve.js
// File:src/extras/curves/EllipseCurve.js
// File:src/extras/curves/ArcCurve.js
// File:src/extras/curves/LineCurve3.js
// File:src/extras/curves/QuadraticBezierCurve3.js
// File:src/extras/curves/CubicBezierCurve3.js
// File:src/extras/curves/SplineCurve3.js
// THREE.SplineCurve3.prototype.getTangent = function(t) {
// 		var v = new THREE.Vector3();
// 		var c = [];
// 		var points = this.points, point, intPoint, weight;
// 		point = ( points.length - 1 ) * t;
// 		intPoint = Math.floor( point );
// 		weight = point - intPoint;
// 		c[ 0 ] = intPoint == 0 ? intPoint : intPoint - 1;
// 		c[ 1 ] = intPoint;
// 		c[ 2 ] = intPoint  > points.length - 2 ? points.length - 1 : intPoint + 1;
// 		c[ 3 ] = intPoint  > points.length - 3 ? points.length - 1 : intPoint + 2;
// 		var pt0 = points[ c[0] ],
// 			pt1 = points[ c[1] ],
// 			pt2 = points[ c[2] ],
// 			pt3 = points[ c[3] ];
// 	// t = weight;
// 	v.x = THREE.Curve.Utils.tangentSpline( t, pt0.x, pt1.x, pt2.x, pt3.x );
// 	v.y = THREE.Curve.Utils.tangentSpline( t, pt0.y, pt1.y, pt2.y, pt3.y );
// 	v.z = THREE.Curve.Utils.tangentSpline( t, pt0.z, pt1.z, pt2.z, pt3.z );
// 	return v;
// }
// File:src/extras/curves/ClosedSplineCurve3.js
// File:src/extras/animation/AnimationHandler.js
// File:src/extras/animation/Animation.js
// Get next key with
// Get previous key with
// File:src/extras/animation/KeyFrameAnimation.js
// Update
// Get next key with
// Get previous key with
// File:src/extras/animation/MorphAnimation.js
// File:src/extras/geometries/BoxGeometry.js
// File:src/extras/geometries/CircleGeometry.js
// File:src/extras/geometries/CubeGeometry.js
// File:src/extras/geometries/CylinderGeometry.js
// File:src/extras/geometries/ExtrudeGeometry.js
// File:src/extras/geometries/ShapeGeometry.js
// File:src/extras/geometries/LatheGeometry.js
// points - to create a closed torus, one must use a set of points 
//    like so: [ a, b, c, d, a ], see first is the same as last.
// segments - the number of circumference segments to create
// phiStart - the starting radian
// phiLength - the radian (0 to 2*PI) range of the lathed section
//    2*pi is a closed lathe, less than 2PI is a portion.
// File:src/extras/geometries/PlaneGeometry.js
// File:src/extras/geometries/RingGeometry.js
// File:src/extras/geometries/SphereGeometry.js
// File:src/extras/geometries/TextGeometry.js
// File:src/extras/geometries/TorusGeometry.js
// File:src/extras/geometries/TorusKnotGeometry.js
// File:src/extras/geometries/TubeGeometry.js
// For computing of Frenet frames, exposing the tangents, normals and binormals the spline
// File:src/extras/geometries/PolyhedronGeometry.js
// File:src/extras/geometries/IcosahedronGeometry.js
// File:src/extras/geometries/OctahedronGeometry.js
// File:src/extras/geometries/TetrahedronGeometry.js
// File:src/extras/geometries/ParametricGeometry.js
// File:src/extras/helpers/AxisHelper.js
// File:src/extras/helpers/ArrowHelper.js
// File:src/extras/helpers/BoxHelper.js
// File:src/extras/helpers/BoundingBoxHelper.js
// a helper to show the world-axis-aligned bounding box for an object
// File:src/extras/helpers/CameraHelper.js
// File:src/extras/helpers/DirectionalLightHelper.js
// File:src/extras/helpers/EdgesHelper.js
// File:src/extras/helpers/FaceNormalsHelper.js
// File:src/extras/helpers/GridHelper.js
// File:src/extras/helpers/HemisphereLightHelper.js
// File:src/extras/helpers/PointLightHelper.js
// File:src/extras/helpers/SkeletonHelper.js
// File:src/extras/helpers/SpotLightHelper.js
// File:src/extras/helpers/VertexNormalsHelper.js
// File:src/extras/helpers/VertexTangentsHelper.js
// File:src/extras/helpers/WireframeHelper.js
// File:src/extras/objects/ImmediateRenderObject.js
// File:src/extras/objects/LensFlare.js
// File:src/extras/objects/MorphBlendMesh.js
// File:src/extras/renderers/plugins/LensFlarePlugin.js
// File:src/extras/renderers/plugins/ShadowMapPlugin.js
// File:src/extras/renderers/plugins/SpritePlugin.js
// File:src/extras/renderers/plugins/DepthPassPlugin.js
// File:src/extras/shaders/ShaderFlares.js
var THREE={REVISION:"68"}
"object"==typeof module&&(module.exports=THREE),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(t){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(t,e,r){if(0===e)this.r=this.g=this.b=r
else{var i=function(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t},n=r<=.5?r*(1+e):r+e-r*e,a=2*r-n
this.r=i(a,n,t+1/3),this.g=i(a,n,t),this.b=i(a,n,t-1/3)}return this},setStyle:function(t){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(t)){var e=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(t)
return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(t)){var e=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(t)
return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(t)){var e=/^\#([0-9a-f]{6})$/i.exec(t)
return this.setHex(parseInt(e[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(t)){var e=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(t)
return this.setHex(parseInt(e[1]+e[1]+e[2]+e[2]+e[3]+e[3],16)),this}if(/^(\w+)$/i.test(t))return this.setHex(THREE.ColorKeywords[t]),this},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t){return this.r=t.r*t.r,this.g=t.g*t.g,this.b=t.b*t.b,this},copyLinearToGamma:function(t){return this.r=Math.sqrt(t.r),this.g=Math.sqrt(t.g),this.b=Math.sqrt(t.b),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b
return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,r,i=t||{h:0,s:0,l:0},n=this.r,a=this.g,o=this.b,s=Math.max(n,a,o),h=Math.min(n,a,o),l=(h+s)/2
if(h===s)e=0,r=0
else{var c=s-h
switch(r=l<=.5?c/(s+h):c/(2-s-h),s){case n:e=(a-o)/c+(a<o?6:0)
break
case a:e=(o-n)/c+2
break
case o:e=(n-a)/c+4}e/=6}return i.h=e,i.s=r,i.l=l,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL()
return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t){return this.r=t[0],this.g=t[1],this.b=t[2],this},toArray:function(){return[this.r,this.g,this.b]},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.")
var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),a=Math.sin(t._x/2),o=Math.sin(t._y/2),s=Math.sin(t._z/2)
return"XYZ"===t.order?(this._x=a*i*n+r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n-a*o*s):"YXZ"===t.order?(this._x=a*i*n+r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n+a*o*s):"ZXY"===t.order?(this._x=a*i*n-r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n-a*o*s):"ZYX"===t.order?(this._x=a*i*n-r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n+a*o*s):"YZX"===t.order?(this._x=a*i*n+r*o*s,this._y=r*o*n+a*i*s,this._z=r*i*s-a*o*n,this._w=r*i*n-a*o*s):"XZY"===t.order&&(this._x=a*i*n-r*o*s,this._y=r*o*n-a*i*s,this._z=r*i*s+a*o*n,this._w=r*i*n+a*o*s),e!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r)
return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],a=r[8],o=r[1],s=r[5],h=r[9],l=r[2],c=r[6],u=r[10],f=i+s+u
return f>0?(e=.5/Math.sqrt(f+1),this._w=.25/e,this._x=(c-h)*e,this._y=(a-l)*e,this._z=(o-n)*e):i>s&&i>u?(e=2*Math.sqrt(1+i-s-u),this._w=(c-h)/e,this._x=.25*e,this._y=(n+o)/e,this._z=(a+l)/e):s>u?(e=2*Math.sqrt(1+s-i-u),this._w=(a-l)/e,this._x=(n+o)/e,this._y=.25*e,this._z=(h+c)/e):(e=2*Math.sqrt(1+u-i-s),this._w=(o-n)/e,this._x=(a+l)/e,this._y=(h+c)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e,r=1e-6
return function(i,n){return void 0===t&&(t=new THREE.Vector3),e=i.dot(n)+1,e<r?(e=0,Math.abs(i.x)>Math.abs(i.z)?t.set(-i.y,i.x,0):t.set(0,-i.z,i.y)):t.crossVectors(i,n),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length()
return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,a=t._w,o=e._x,s=e._y,h=e._z,l=e._w
return this._x=r*l+a*o+i*h-n*s,this._y=i*l+a*s+n*o-r*h,this._z=n*l+a*h+r*s-i*o,this._w=a*l-r*o-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){var r=this._x,i=this._y,n=this._z,a=this._w,o=a*t._w+r*t._x+i*t._y+n*t._z
if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=r,this._y=i,this._z=n,this
var s=Math.acos(o),h=Math.sqrt(1-o*o)
if(Math.abs(h)<.001)return this._w=.5*(a+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this
var l=Math.sin((1-e)*s)/h,c=Math.sin(e*s)/h
return this._w=a*l+this._w*c,this._x=r*l+this._x*c,this._y=i*l+this._y*c,this._z=n*l+this._z*c,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],this._w=t[3],this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._w]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(t,e,r,i){return r.copy(t).slerp(e,i)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e
break
case 1:this.y=e
break
default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x
case 1:return this.y
default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScalar:function(t){return this.x+=t,this.y+=t,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){if(0!==t){var e=1/t
this.x*=e,this.y*=e}else this.x=0,this.y=0
return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this},clampScalar:function(){var t,e
return function(r,i){return void 0===t&&(t=new THREE.Vector2,e=new THREE.Vector2),t.set(r,r),e.set(i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y
return e*e+r*r},setLength:function(t){var e=this.length()
return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t){return this.x=t[0],this.y=t[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e
break
case 1:this.y=e
break
case 2:this.z=e
break
default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x
case 1:return this.y
case 2:return this.z
default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t
return function(e){return e instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(e)),this}}(),applyAxisAngle:function(){var t
return function(e,r){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,r)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements
return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements
return this.x=n[0]*e+n[4]*r+n[8]*i+n[12],this.y=n[1]*e+n[5]*r+n[9]*i+n[13],this.z=n[2]*e+n[6]*r+n[10]*i+n[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,a=1/(n[3]*e+n[7]*r+n[11]*i+n[15])
return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*a,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*a,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*a,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,a=t.y,o=t.z,s=t.w,h=s*e+a*i-o*r,l=s*r+o*e-n*i,c=s*i+n*r-a*e,u=-n*e-a*r-o*i
return this.x=h*s+u*-n+l*-o-c*-a,this.y=l*s+u*-a+c*-n-h*-o,this.z=c*s+u*-o+h*-a-l*-n,this},transformDirection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements
return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){if(0!==t){var e=1/t
this.x*=e,this.y*=e,this.z*=e}else this.x=0,this.y=0,this.z=0
return this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this},clampScalar:function(){var t,e
return function(r,i){return void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3),t.set(r,r,r),e.set(i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length()
return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)
var r=this.x,i=this.y,n=this.z
return this.x=i*t.z-n*t.y,this.y=n*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,a=e.x,o=e.y,s=e.z
return this.x=i*s-n*o,this.y=n*a-r*s,this.z=r*o-i*a,this},projectOnVector:function(){var t,e
return function(r){return void 0===t&&(t=new THREE.Vector3),t.copy(r).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t
return function(e){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t
return function(e){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length())
return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,i=this.z-t.z
return e*e+r*r+i*i},setEulerFromRotationMatrix:function(t,e){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(t,e){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),r=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),i=this.set(t.elements[8],t.elements[9],t.elements[10]).length()
return this.x=e,this.y=r,this.z=i,this},setFromMatrixColumn:function(t,e){var r=4*t,i=e.elements
return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e
break
case 1:this.y=e
break
case 2:this.z=e
break
case 3:this.w=e
break
default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x
case 1:return this.y
case 2:return this.z
case 3:return this.w
default:throw new Error("index is out of range: "+t)}},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,a=t.elements
return this.x=a[0]*e+a[4]*r+a[8]*i+a[12]*n,this.y=a[1]*e+a[5]*r+a[9]*i+a[13]*n,this.z=a[2]*e+a[6]*r+a[10]*i+a[14]*n,this.w=a[3]*e+a[7]*r+a[11]*i+a[15]*n,this},divideScalar:function(t){if(0!==t){var e=1/t
this.x*=e,this.y*=e,this.z*=e,this.w*=e}else this.x=0,this.y=0,this.z=0,this.w=1
return this},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w)
var e=Math.sqrt(1-t.w*t.w)
return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n,a=.01,o=.1,s=t.elements,h=s[0],l=s[4],c=s[8],u=s[1],f=s[5],E=s[9],p=s[2],d=s[6],m=s[10]
if(Math.abs(l-u)<a&&Math.abs(c-p)<a&&Math.abs(E-d)<a){if(Math.abs(l+u)<o&&Math.abs(c+p)<o&&Math.abs(E+d)<o&&Math.abs(h+f+m-3)<o)return this.set(1,0,0,0),this
e=Math.PI
var v=(h+1)/2,g=(f+1)/2,T=(m+1)/2,y=(l+u)/4,R=(c+p)/4,x=(E+d)/4
return v>g&&v>T?v<a?(r=0,i=.707106781,n=.707106781):(r=Math.sqrt(v),i=y/r,n=R/r):g>T?g<a?(r=.707106781,i=0,n=.707106781):(i=Math.sqrt(g),r=y/i,n=x/i):T<a?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(T),r=R/n,i=x/n),this.set(r,i,n,e),this}var H=Math.sqrt((d-E)*(d-E)+(c-p)*(c-p)+(u-l)*(u-l))
return Math.abs(H)<.001&&(H=1),this.x=(d-E)/H,this.y=(c-p)/H,this.z=(u-l)/H,this.w=Math.acos((h+f+m-1)/2),this},min:function(t){return this.x>t.x&&(this.x=t.x),this.y>t.y&&(this.y=t.y),this.z>t.z&&(this.z=t.z),this.w>t.w&&(this.w=t.w),this},max:function(t){return this.x<t.x&&(this.x=t.x),this.y<t.y&&(this.y=t.y),this.z<t.z&&(this.z=t.z),this.w<t.w&&(this.w=t.w),this},clamp:function(t,e){return this.x<t.x?this.x=t.x:this.x>e.x&&(this.x=e.x),this.y<t.y?this.y=t.y:this.y>e.y&&(this.y=e.y),this.z<t.z?this.z=t.z:this.z>e.z&&(this.z=e.z),this.w<t.w?this.w=t.w:this.w>e.w&&(this.w=e.w),this},clampScalar:function(){var t,e
return function(r,i){return void 0===t&&(t=new THREE.Vector4,e=new THREE.Vector4),t.set(r,r,r,r),e.set(i,i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){var e=this.length()
return 0!==e&&t!==e&&this.multiplyScalar(t/e),this},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t){return this.x=t[0],this.y=t[1],this.z=t[2],this.w=t[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e){var r=THREE.Math.clamp,i=t.elements,n=i[0],a=i[4],o=i[8],s=i[1],h=i[5],l=i[9],c=i[2],u=i[6],f=i[10]
return e=e||this._order,"XYZ"===e?(this._y=Math.asin(r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-l,f),this._z=Math.atan2(-a,n)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===e?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(o,f),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-c,n),this._z=0)):"ZXY"===e?(this._x=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(-c,f),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(s,n))):"ZYX"===e?(this._y=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(u,f),this._z=Math.atan2(s,n)):(this._x=0,this._z=Math.atan2(-a,h))):"YZX"===e?(this._z=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,h),this._y=Math.atan2(-c,n)):(this._x=0,this._y=Math.atan2(o,f))):"XZY"===e?(this._z=Math.asin(-r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(u,h),this._y=Math.atan2(o,n)):(this._x=Math.atan2(-l,f),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,this.onChangeCallback(),this},setFromQuaternion:function(t,e,r){var i=THREE.Math.clamp,n=t.x*t.x,a=t.y*t.y,o=t.z*t.z,s=t.w*t.w
return e=e||this._order,"XYZ"===e?(this._x=Math.atan2(2*(t.x*t.w-t.y*t.z),s-n-a+o),this._y=Math.asin(i(2*(t.x*t.z+t.y*t.w),-1,1)),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s+n-a-o)):"YXZ"===e?(this._x=Math.asin(i(2*(t.x*t.w-t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s-n-a+o),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s-n+a-o)):"ZXY"===e?(this._x=Math.asin(i(2*(t.x*t.w+t.y*t.z),-1,1)),this._y=Math.atan2(2*(t.y*t.w-t.z*t.x),s-n-a+o),this._z=Math.atan2(2*(t.z*t.w-t.x*t.y),s-n+a-o)):"ZYX"===e?(this._x=Math.atan2(2*(t.x*t.w+t.z*t.y),s-n-a+o),this._y=Math.asin(i(2*(t.y*t.w-t.x*t.z),-1,1)),this._z=Math.atan2(2*(t.x*t.y+t.z*t.w),s+n-a-o)):"YZX"===e?(this._x=Math.atan2(2*(t.x*t.w-t.z*t.y),s-n+a-o),this._y=Math.atan2(2*(t.y*t.w-t.x*t.z),s+n-a-o),this._z=Math.asin(i(2*(t.x*t.y+t.z*t.w),-1,1))):"XZY"===e?(this._x=Math.atan2(2*(t.x*t.w+t.y*t.z),s-n+a-o),this._y=Math.atan2(2*(t.x*t.z+t.y*t.w),s+n-a-o),this._z=Math.asin(i(2*(t.z*t.w-t.x*t.y),-1,1))):console.warn("THREE.Euler: .setFromQuaternion() given unsupported order: "+e),this._order=e,r!==!1&&this.onChangeCallback(),this},reorder:function(){var t=new THREE.Quaternion
return function(e){t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(){return[this._x,this._y,this._z,this._order]},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){var e=t||new THREE.Vector3
return e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){var e=t||new THREE.Vector3
return e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new THREE.Vector3
return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(r,i){t.subVectors(r,this.start),e.subVectors(this.end,this.start)
var n=e.dot(e),a=e.dot(t),o=a/n
return i&&(o=THREE.Math.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,r){var i=this.closestPointToPointParameter(t,e),n=r||new THREE.Vector3
return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(1/0,1/0),this.max=void 0!==e?e:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty()
for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e])
return this},setFromCenterAndSize:function(){var t=new THREE.Vector2
return function(e,r){var i=t.copy(r).multiplyScalar(.5)
return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){var e=t||new THREE.Vector2
return e.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){var e=t||new THREE.Vector2
return e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){var r=e||new THREE.Vector2
return r.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){var r=e||new THREE.Vector2
return r.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector2
return function(e){var r=t.copy(e).clamp(this.min,this.max)
return r.sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty()
for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e])
return this},setFromCenterAndSize:function(){var t=new THREE.Vector3
return function(e,r){var i=t.copy(r).multiplyScalar(.5)
return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(){var t=new THREE.Vector3
return function(e){var r=this
return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse(function(e){if(void 0!==e.geometry&&void 0!==e.geometry.vertices)for(var i=e.geometry.vertices,n=0,a=i.length;n<a;n++)t.copy(i[n]),t.applyMatrix4(e.matrixWorld),r.expandByPoint(t)}),this}}(),copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){var e=t||new THREE.Vector3
return e.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){var e=t||new THREE.Vector3
return e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){var r=e||new THREE.Vector3
return r.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){var r=e||new THREE.Vector3
return r.copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3
return function(e){var r=t.copy(e).clamp(this.min,this.max)
return r.sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3
return function(e){var r=e||new THREE.Sphere
return r.center=this.center(),r.radius=.5*this.size(t).length(),r}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]
return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(t,e,r,i,n,a,o,s,h){this.elements=new Float32Array(9)
var l=this.elements
l[0]=void 0!==t?t:1,l[3]=e||0,l[6]=r||0,l[1]=i||0,l[4]=void 0!==n?n:1,l[7]=a||0,l[2]=o||0,l[5]=s||0,l[8]=void 0!==h?h:1},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,a,o,s,h){var l=this.elements
return l[0]=t,l[3]=e,l[6]=r,l[1]=i,l[4]=n,l[7]=a,l[2]=o,l[5]=s,l[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(t){var e=t.elements
return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3
return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length)
for(var n=0,a=r;n<i;n+=3,a+=3)t.x=e[a],t.y=e[a+1],t.z=e[a+2],t.applyMatrix3(this),e[a]=t.x,e[a+1]=t.y,e[a+2]=t.z
return e}}(),multiplyScalar:function(t){var e=this.elements
return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],a=t[4],o=t[5],s=t[6],h=t[7],l=t[8]
return e*a*l-e*o*h-r*n*l+r*o*s+i*n*h-i*a*s},getInverse:function(t,e){var r=t.elements,i=this.elements
i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4]
var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6]
if(0===n){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0"
if(e)throw new Error(a)
return console.warn(a),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var t,e=this.elements
return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements
return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements
return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements
return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]},clone:function(){var t=this.elements
return new THREE.Matrix3(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8])}},THREE.Matrix4=function(t,e,r,i,n,a,o,s,h,l,c,u,f,E,p,d){this.elements=new Float32Array(16)
var m=this.elements
m[0]=void 0!==t?t:1,m[4]=e||0,m[8]=r||0,m[12]=i||0,m[1]=n||0,m[5]=void 0!==a?a:1,m[9]=o||0,m[13]=s||0,m[2]=h||0,m[6]=l||0,m[10]=void 0!==c?c:1,m[14]=u||0,m[3]=f||0,m[7]=E||0,m[11]=p||0,m[15]=void 0!==d?d:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,a,o,s,h,l,c,u,f,E,p,d){var m=this.elements
return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=a,m[9]=o,m[13]=s,m[2]=h,m[6]=l,m[10]=c,m[14]=u,m[3]=f,m[7]=E,m[11]=p,m[15]=d,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("THREEMatrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements,r=t.elements
return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractRotation:function(){var t=new THREE.Vector3
return function(e){var r=this.elements,i=e.elements,n=1/t.set(i[0],i[1],i[2]).length(),a=1/t.set(i[4],i[5],i[6]).length(),o=1/t.set(i[8],i[9],i[10]).length()
return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*a,r[5]=i[5]*a,r[6]=i[6]*a,r[8]=i[8]*o,r[9]=i[9]*o,r[10]=i[10]*o,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.")
var e=this.elements,r=t.x,i=t.y,n=t.z,a=Math.cos(r),o=Math.sin(r),s=Math.cos(i),h=Math.sin(i),l=Math.cos(n),c=Math.sin(n)
if("XYZ"===t.order){var u=a*l,f=a*c,E=o*l,p=o*c
e[0]=s*l,e[4]=-s*c,e[8]=h,e[1]=f+E*h,e[5]=u-p*h,e[9]=-o*s,e[2]=p-u*h,e[6]=E+f*h,e[10]=a*s}else if("YXZ"===t.order){var d=s*l,m=s*c,v=h*l,g=h*c
e[0]=d+g*o,e[4]=v*o-m,e[8]=a*h,e[1]=a*c,e[5]=a*l,e[9]=-o,e[2]=m*o-v,e[6]=g+d*o,e[10]=a*s}else if("ZXY"===t.order){var d=s*l,m=s*c,v=h*l,g=h*c
e[0]=d-g*o,e[4]=-a*c,e[8]=v+m*o,e[1]=m+v*o,e[5]=a*l,e[9]=g-d*o,e[2]=-a*h,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){var u=a*l,f=a*c,E=o*l,p=o*c
e[0]=s*l,e[4]=E*h-f,e[8]=u*h+p,e[1]=s*c,e[5]=p*h+u,e[9]=f*h-E,e[2]=-h,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var T=a*s,y=a*h,R=o*s,x=o*h
e[0]=s*l,e[4]=x-T*c,e[8]=R*c+y,e[1]=c,e[5]=a*l,e[9]=-o*l,e[2]=-h*l,e[6]=y*c+R,e[10]=T-x*c}else if("XZY"===t.order){var T=a*s,y=a*h,R=o*s,x=o*h
e[0]=s*l,e[4]=-c,e[8]=h*l,e[1]=T*c+x,e[5]=a*l,e[9]=y*c-R,e[2]=R*c-y,e[6]=o*l,e[10]=x*c+T}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,a=t.w,o=r+r,s=i+i,h=n+n,l=r*o,c=r*s,u=r*h,f=i*s,E=i*h,p=n*h,d=a*o,m=a*s,v=a*h
return e[0]=1-(f+p),e[4]=c-v,e[8]=u+m,e[1]=c+v,e[5]=1-(l+p),e[9]=E-d,e[2]=u-m,e[6]=E+d,e[10]=1-(l+f),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3
return function(i,n,a){var o=this.elements
return r.subVectors(i,n).normalize(),0===r.length()&&(r.z=1),t.crossVectors(a,r).normalize(),0===t.length()&&(r.x+=1e-4,t.crossVectors(a,r).normalize()),e.crossVectors(r,t),o[0]=t.x,o[4]=e.x,o[8]=r.x,o[1]=t.y,o[5]=e.y,o[9]=r.y,o[2]=t.z,o[6]=e.z,o[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,a=r[0],o=r[4],s=r[8],h=r[12],l=r[1],c=r[5],u=r[9],f=r[13],E=r[2],p=r[6],d=r[10],m=r[14],v=r[3],g=r[7],T=r[11],y=r[15],R=i[0],x=i[4],H=i[8],b=i[12],_=i[1],w=i[5],M=i[9],S=i[13],C=i[2],A=i[6],L=i[10],P=i[14],F=i[3],D=i[7],U=i[11],V=i[15]
return n[0]=a*R+o*_+s*C+h*F,n[4]=a*x+o*w+s*A+h*D,n[8]=a*H+o*M+s*L+h*U,n[12]=a*b+o*S+s*P+h*V,n[1]=l*R+c*_+u*C+f*F,n[5]=l*x+c*w+u*A+f*D,n[9]=l*H+c*M+u*L+f*U,n[13]=l*b+c*S+u*P+f*V,n[2]=E*R+p*_+d*C+m*F,n[6]=E*x+p*w+d*A+m*D,n[10]=E*H+p*M+d*L+m*U,n[14]=E*b+p*S+d*P+m*V,n[3]=v*R+g*_+T*C+y*F,n[7]=v*x+g*w+T*A+y*D,n[11]=v*H+g*M+T*L+y*U,n[15]=v*b+g*S+T*P+y*V,this},multiplyToArray:function(t,e,r){var i=this.elements
return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements
return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t=new THREE.Vector3
return function(e,r,i){void 0===r&&(r=0),void 0===i&&(i=e.length)
for(var n=0,a=r;n<i;n+=3,a+=3)t.x=e[a],t.y=e[a+1],t.z=e[a+2],t.applyMatrix4(this),e[a]=t.x,e[a+1]=t.y,e[a+2]=t.z
return e}}(),rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],a=t[1],o=t[5],s=t[9],h=t[13],l=t[2],c=t[6],u=t[10],f=t[14],E=t[3],p=t[7],d=t[11],m=t[15]
return E*(+n*s*c-i*h*c-n*o*u+r*h*u+i*o*f-r*s*f)+p*(+e*s*f-e*h*u+n*a*u-i*a*f+i*h*l-n*s*l)+d*(+e*h*c-e*o*f-n*a*c+r*a*f+n*o*l-r*h*l)+m*(-i*o*l-e*s*c+e*o*u+i*a*c-r*a*u+r*s*l)},transpose:function(){var t,e=this.elements
return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements
return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t},getPosition:function(){var t=new THREE.Vector3
return function(){console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.")
var e=this.elements
return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements
return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],a=i[4],o=i[8],s=i[12],h=i[1],l=i[5],c=i[9],u=i[13],f=i[2],E=i[6],p=i[10],d=i[14],m=i[3],v=i[7],g=i[11],T=i[15]
r[0]=c*d*v-u*p*v+u*E*g-l*d*g-c*E*T+l*p*T,r[4]=s*p*v-o*d*v-s*E*g+a*d*g+o*E*T-a*p*T,r[8]=o*u*v-s*c*v+s*l*g-a*u*g-o*l*T+a*c*T,r[12]=s*c*E-o*u*E-s*l*p+a*u*p+o*l*d-a*c*d,r[1]=u*p*m-c*d*m-u*f*g+h*d*g+c*f*T-h*p*T,r[5]=o*d*m-s*p*m+s*f*g-n*d*g-o*f*T+n*p*T,r[9]=s*c*m-o*u*m-s*h*g+n*u*g+o*h*T-n*c*T,r[13]=o*u*f-s*c*f+s*h*p-n*u*p-o*h*d+n*c*d,r[2]=l*d*m-u*E*m+u*f*v-h*d*v-l*f*T+h*E*T,r[6]=s*E*m-a*d*m-s*f*v+n*d*v+a*f*T-n*E*T,r[10]=a*u*m-s*l*m+s*h*v-n*u*v-a*h*T+n*l*T,r[14]=s*l*f-a*u*f-s*h*E+n*u*E+a*h*d-n*l*d,r[3]=c*E*m-l*p*m-c*f*v+h*p*v+l*f*g-h*E*g,r[7]=a*p*m-o*E*m+o*f*v-n*p*v-a*f*g+n*E*g,r[11]=o*l*m-a*c*m-o*h*v+n*c*v+a*h*g-n*l*g,r[15]=a*c*f-o*l*f+o*h*E-n*c*E-a*h*p+n*l*p
var y=n*r[0]+h*r[4]+f*r[8]+m*r[12]
if(0==y){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0"
if(e)throw new Error(R)
return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(t){console.warn("THREE.Matrix4: .translate() has been removed.")},rotateX:function(t){console.warn("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(t){console.warn("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(t){console.warn("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(t,e){console.warn("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z
return e[0]*=r,e[4]*=i,e[8]*=n,e[1]*=r,e[5]*=i,e[9]*=n,e[2]*=r,e[6]*=i,e[10]*=n,e[3]*=r,e[7]*=i,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10]
return Math.sqrt(Math.max(e,Math.max(r,i)))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t)
return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t)
return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t)
return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,a=t.x,o=t.y,s=t.z,h=n*a,l=n*o
return this.set(h*a+r,h*o-i*s,h*s+i*o,0,h*o+i*s,l*o+r,l*s-i*a,0,h*s-i*o,l*s+i*a,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t=new THREE.Vector3,e=new THREE.Matrix4
return function(r,i,n){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),h=t.set(a[8],a[9],a[10]).length(),l=this.determinant()
l<0&&(o=-o),r.x=a[12],r.y=a[13],r.z=a[14],e.elements.set(this.elements)
var c=1/o,u=1/s,f=1/h
return e.elements[0]*=c,e.elements[1]*=c,e.elements[2]*=c,e.elements[4]*=u,e.elements[5]*=u,e.elements[6]*=u,e.elements[8]*=f,e.elements[9]*=f,e.elements[10]*=f,i.setFromRotationMatrix(e),n.x=o,n.y=s,n.z=h,this}}(),makeFrustum:function(t,e,r,i,n,a){var o=this.elements,s=2*n/(e-t),h=2*n/(i-r),l=(e+t)/(e-t),c=(i+r)/(i-r),u=-(a+n)/(a-n),f=-2*a*n/(a-n)
return o[0]=s,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=h,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(t,e,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*t)),a=-n,o=a*e,s=n*e
return this.makeFrustum(o,s,a,n,r,i)},makeOrthographic:function(t,e,r,i,n,a){var o=this.elements,s=e-t,h=r-i,l=a-n,c=(e+t)/s,u=(r+i)/h,f=(a+n)/l
return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2/h,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2/l,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements
return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]},clone:function(){var t=this.elements
return new THREE.Matrix4(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15])}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){var r=e||new THREE.Vector3
return r.copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var t=new THREE.Vector3
return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var r=e||new THREE.Vector3
r.subVectors(t,this.origin)
var i=r.dot(this.direction)
return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(){var t=new THREE.Vector3
return function(e){var r=t.subVectors(e,this.origin).dot(this.direction)
return r<0?this.origin.distanceTo(e):(t.copy(this.direction).multiplyScalar(r).add(this.origin),t.distanceTo(e))}}(),distanceSqToSegment:function(t,e,r,i){var n,a,o,s,h=t.clone().add(e).multiplyScalar(.5),l=e.clone().sub(t).normalize(),c=.5*t.distanceTo(e),u=this.origin.clone().sub(h),f=-this.direction.dot(l),E=u.dot(this.direction),p=-u.dot(l),d=u.lengthSq(),m=Math.abs(1-f*f)
if(m>=0)if(n=f*p-E,a=f*E-p,s=c*m,n>=0)if(a>=-s)if(a<=s){var v=1/m
n*=v,a*=v,o=n*(n+f*a+2*E)+a*(f*n+a+2*p)+d}else a=c,n=Math.max(0,-(f*a+E)),o=-n*n+a*(a+2*p)+d
else a=-c,n=Math.max(0,-(f*a+E)),o=-n*n+a*(a+2*p)+d
else a<=-s?(n=Math.max(0,-(-f*c+E)),a=n>0?-c:Math.min(Math.max(-c,-p),c),o=-n*n+a*(a+2*p)+d):a<=s?(n=0,a=Math.min(Math.max(-c,-p),c),o=a*(a+2*p)+d):(n=Math.max(0,-(f*c+E)),a=n>0?c:Math.min(Math.max(-c,-p),c),o=-n*n+a*(a+2*p)+d)
else a=f>0?-c:c,n=Math.max(0,-(f*a+E)),o=-n*n+a*(a+2*p)+d
return r&&r.copy(this.direction.clone().multiplyScalar(n).add(this.origin)),i&&i.copy(l.clone().multiplyScalar(a).add(h)),o},isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},intersectSphere:function(){var t=new THREE.Vector3
return function(e,r){t.subVectors(e.center,this.origin)
var i=t.dot(this.direction),n=t.dot(t)-i*i,a=e.radius*e.radius
if(n>a)return null
var o=Math.sqrt(a-n),s=i-o,h=i+o
return s<0&&h<0?null:s<0?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin)
if(0===e)return!0
var r=t.normal.dot(this.direction)
return r*e<0},distanceToPlane:function(t){var e=t.normal.dot(this.direction)
if(0==e)return 0==t.distanceToPoint(this.origin)?0:null
var r=-(this.origin.dot(t.normal)+t.constant)/e
return r>=0?r:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t)
return null===r?null:this.at(r,e)},isIntersectionBox:function(){var t=new THREE.Vector3
return function(e){return null!==this.intersectBox(e,t)}}(),intersectBox:function(t,e){var r,i,n,a,o,s,h=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin
return h>=0?(r=(t.min.x-u.x)*h,i=(t.max.x-u.x)*h):(r=(t.max.x-u.x)*h,i=(t.min.x-u.x)*h),l>=0?(n=(t.min.y-u.y)*l,a=(t.max.y-u.y)*l):(n=(t.max.y-u.y)*l,a=(t.min.y-u.y)*l),r>a||n>i?null:((n>r||r!==r)&&(r=n),(a<i||i!==i)&&(i=a),c>=0?(o=(t.min.z-u.z)*c,s=(t.max.z-u.z)*c):(o=(t.max.z-u.z)*c,s=(t.min.z-u.z)*c),r>s||o>i?null:((o>r||r!==r)&&(r=o),(s<i||i!==i)&&(i=s),i<0?null:this.at(r>=0?r:i,e)))},intersectTriangle:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3
return function(n,a,o,s,h){e.subVectors(a,n),r.subVectors(o,n),i.crossVectors(e,r)
var l,c=this.direction.dot(i)
if(c>0){if(s)return null
l=1}else{if(!(c<0))return null
l=-1,c=-c}t.subVectors(this.origin,n)
var u=l*this.direction.dot(r.crossVectors(t,r))
if(u<0)return null
var f=l*this.direction.dot(e.cross(t))
if(f<0)return null
if(u+f>c)return null
var E=-l*t.dot(i)
return E<0?null:this.at(E/c,h)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new THREE.Box3
return function(e,r){var i=this.center
void 0!==r?i.copy(r):t.setFromPoints(e).center(i)
for(var n=0,a=0,o=e.length;a<o;a++)n=Math.max(n,i.distanceToSquared(e[a]))
return this.radius=Math.sqrt(n),this}}(),copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius
return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new THREE.Vector3
return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){var e=t||new THREE.Box3
return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(t,e,r,i,n,a){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,a){var o=this.planes
return o[0].copy(t),o[1].copy(e),o[2].copy(r),o[3].copy(i),o[4].copy(n),o[5].copy(a),this},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r])
return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],a=r[2],o=r[3],s=r[4],h=r[5],l=r[6],c=r[7],u=r[8],f=r[9],E=r[10],p=r[11],d=r[12],m=r[13],v=r[14],g=r[15]
return e[0].setComponents(o-i,c-s,p-u,g-d).normalize(),e[1].setComponents(o+i,c+s,p+u,g+d).normalize(),e[2].setComponents(o+n,c+h,p+f,g+m).normalize(),e[3].setComponents(o-n,c-h,p-f,g-m).normalize(),e[4].setComponents(o-a,c-l,p-E,g-v).normalize(),e[5].setComponents(o+a,c+l,p+E,g+v).normalize(),this},intersectsObject:function(){var t=new THREE.Sphere
return function(e){var r=e.geometry
return null===r.boundingSphere&&r.computeBoundingSphere(),t.copy(r.boundingSphere),t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++){var a=e[n].distanceToPoint(r)
if(a<i)return!1}return!0},intersectsBox:function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(r){for(var i=this.planes,n=0;n<6;n++){var a=i[n]
t.x=a.normal.x>0?r.min.x:r.max.x,e.x=a.normal.x>0?r.max.x:r.min.x,t.y=a.normal.y>0?r.min.y:r.max.y,e.y=a.normal.y>0?r.max.y:r.min.y,t.z=a.normal.z>0?r.min.z:r.max.z,e.z=a.normal.z>0?r.max.z:r.min.z
var o=a.distanceToPoint(t),s=a.distanceToPoint(e)
if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1
return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(r,i,n){var a=t.subVectors(n,i).cross(e.subVectors(r,i)).normalize()
return this.setFromNormalAndCoplanarPoint(a,r),this}}(),copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length()
return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var r=this.distanceToPoint(t),i=e||new THREE.Vector3
return i.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),r=this.distanceToPoint(t.end)
return e<0&&r>0||r<0&&e>0},intersectLine:function(){var t=new THREE.Vector3
return function(e,r){var i=r||new THREE.Vector3,n=e.delta(t),a=this.normal.dot(n)
if(0!=a){var o=-(e.start.dot(this.normal)+this.constant)/a
if(!(o<0||o>1))return i.copy(n).multiplyScalar(o).add(e.start)}else if(0==this.distanceToPoint(e.start))return i.copy(e.start)}}(),coplanarPoint:function(t){var e=t||new THREE.Vector3
return e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3
return function(i,n){var a=n||r.getNormalMatrix(i),o=t.copy(this.normal).applyMatrix3(a),s=this.coplanarPoint(e)
return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(o,s),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),i=0
return function(){for(var n=0;n<36;n++)8==n||13==n||18==n||23==n?r[n]="-":14==n?r[n]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,r[n]=e[19==n?3&t|8:t])
return r.join("")}}(),clamp:function(t,e,r){return t<e?e:t>r?r:t},clampBottom:function(t,e){return t<e?e:t},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e),t*t*(3-2*t))},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e),t*t*t*(t*(6*t-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},sign:function(t){return t<0?-1:t>0?1:0},degToRad:function(){var t=Math.PI/180
return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI
return function(e){return e*t}}(),isPowerOfTwo:function(t){return 0===(t&t-1)&&0!==t}},THREE.Spline=function(t){function e(t,e,r,i,n,a,o){var s=.5*(r-t),h=.5*(i-e)
return(2*(e-r)+s+h)*o+(-3*(e-r)-2*s-h)*a+s*n+e}this.points=t
var r,i,n,a,o,s,h,l,c,u=[],f={x:0,y:0,z:0}
this.initFromArray=function(t){this.points=[]
for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return r=(this.points.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],h=this.points[u[1]],l=this.points[u[2]],c=this.points[u[3]],a=n*n,o=n*a,f.x=e(s.x,h.x,l.x,c.x,n,a,o),f.y=e(s.y,h.y,l.y,c.y,n,a,o),f.z=e(s.z,h.z,l.z,c.z,n,a,o),f},this.getControlPointsArray=function(){var t,e,r=this.points.length,i=[]
for(t=0;t<r;t++)e=this.points[t],i[t]=[e.x,e.y,e.z]
return i},this.getLength=function(t){var e,r,i,n,a=0,o=0,s=0,h=new THREE.Vector3,l=new THREE.Vector3,c=[],u=0
for(c[0]=0,t||(t=100),i=this.points.length*t,h.copy(this.points[0]),e=1;e<i;e++)r=e/i,n=this.getPoint(r),l.copy(n),u+=l.distanceTo(h),h.copy(n),a=(this.points.length-1)*r,o=Math.floor(a),o!=s&&(c[o]=u,s=o)
return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(t){var e,r,i,n,a,o,s,h,l=[],c=new THREE.Vector3,u=this.getLength()
for(l.push(c.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(o=u.chunks[e]-u.chunks[e-1],s=Math.ceil(t*o/u.total),n=(e-1)/(this.points.length-1),a=e/(this.points.length-1),r=1;r<s-1;r++)i=n+r*(1/s)*(a-n),h=this.getPoint(i),l.push(c.copy(h).clone())
l.push(c.copy(this.points[e]).clone())}this.points=l}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var t=new THREE.Vector3
return function(e,r,i,n){var a=n||new THREE.Vector3
a.subVectors(i,r),t.subVectors(e,r),a.cross(t)
var o=a.lengthSq()
return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3
return function(i,n,a,o,s){t.subVectors(o,n),e.subVectors(a,n),r.subVectors(i,n)
var h=t.dot(t),l=t.dot(e),c=t.dot(r),u=e.dot(e),f=e.dot(r),E=h*u-l*l,p=s||new THREE.Vector3
if(0==E)return p.set(-2,-1,-1)
var d=1/E,m=(u*c-l*f)*d,v=(h*f-l*c)*d
return p.set(1-m-v,v,m)}}(),THREE.Triangle.containsPoint=function(){var t=new THREE.Vector3
return function(e,r,i,n){var a=THREE.Triangle.barycoordFromPoint(e,r,i,n,t)
return a.x>=0&&a.y>=0&&a.x+a.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){var e=t||new THREE.Vector3
return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){var e=t||new THREE.Plane
return e.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0
if(this.autoStart&&!this.running&&this.start(),this.running){var e=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now()
t=.001*(e-this.oldTime),this.oldTime=e,this.elapsedTime+=t}return t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={})
var r=this._listeners
void 0===r[t]&&(r[t]=[]),r[t].indexOf(e)===-1&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1
var r=this._listeners
return void 0!==r[t]&&r[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners,i=r[t]
if(void 0!==i){var n=i.indexOf(e)
n!==-1&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners,r=e[t.type]
if(void 0!==r){t.target=this
for(var i=[],n=r.length,a=0;a<n;a++)i[a]=r[a]
for(var a=0;a<n;a++)i[a].call(this,t)}}}},function(t){t.Raycaster=function(e,r,i,n){this.ray=new t.Ray(e,r),this.near=i||0,this.far=n||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}}
var e=function(t,e){return t.distance-e.distance},r=function(t,e,i,n){if(t.raycast(e,i),n===!0)for(var a=t.children,o=0,s=a.length;o<s;o++)r(a[o],e,i,!0)}
t.Raycaster.prototype={constructor:t.Raycaster,precision:1e-4,linePrecision:1,set:function(t,e){this.ray.set(t,e)},intersectObject:function(t,i){var n=[]
return r(t,this,n,i),n.sort(e),n},intersectObjects:function(t,i){for(var n=[],a=0,o=t.length;a<o;a++)r(t[a],this,n,i)
return n.sort(e),n}}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone()
var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1)
e.onChange(function(){r.setFromEuler(e,!1)}),r.onChange(function(){e.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i}}),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new THREE.Quaternion
return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new THREE.Vector3(1,0,0)
return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new THREE.Vector3(0,1,0)
return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new THREE.Vector3(0,0,1)
return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new THREE.Vector3
return function(e,r){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(r)),this}}(),translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},translateX:function(){var t=new THREE.Vector3(1,0,0)
return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new THREE.Vector3(0,1,0)
return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new THREE.Vector3(0,0,1)
return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new THREE.Matrix4
return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new THREE.Matrix4
return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e])
return this}if(t===this)return console.error("THREE.Object3D.add:",t,"can't be added as a child of itself."),this
if(t instanceof THREE.Object3D){void 0!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)
for(var r=this;void 0!==r.parent;)r=r.parent
void 0!==r&&r instanceof THREE.Scene&&r.__addObject(t)}else console.error("THREE.Object3D.add:",t,"is not an instance of THREE.Object3D.")
return this},remove:function(t){if(arguments.length>1)for(var e=0;e<arguments.length;e++)this.remove(arguments[e])
var r=this.children.indexOf(t)
if(r!==-1){t.parent=void 0,t.dispatchEvent({type:"removed"}),this.children.splice(r,1)
for(var i=this;void 0!==i.parent;)i=i.parent
void 0!==i&&i instanceof THREE.Scene&&i.__removeObject(t)}},raycast:function(){},traverse:function(t){t(this)
for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverse(t)},traverseVisible:function(t){if(this.visible!==!1){t(this)
for(var e=0,r=this.children.length;e<r;e++)this.children[e].traverseVisible(t)}},getObjectById:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r]
if(n.id===t)return n
if(e===!0&&(n=n.getObjectById(t,e),void 0!==n))return n}},getObjectByName:function(t,e){for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r]
if(n.name===t)return n
if(e===!0&&(n=n.getObjectByName(t,e),void 0!==n))return n}},getChildByName:function(t,e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t,e)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate===!0&&this.updateMatrix(),this.matrixWorldNeedsUpdate!==!0&&t!==!0||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0)
for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},clone:function(t,e){if(void 0===t&&(t=new THREE.Object3D),void 0===e&&(e=!0),t.name=this.name,t.up.copy(this.up),t.position.copy(this.position),t.quaternion.copy(this.quaternion),t.scale.copy(this.scale),t.renderDepth=this.renderDepth,t.rotationAutoUpdate=this.rotationAutoUpdate,t.matrix.copy(this.matrix),t.matrixWorld.copy(this.matrixWorld),t.matrixAutoUpdate=this.matrixAutoUpdate,t.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,t.visible=this.visible,t.castShadow=this.castShadow,t.receiveShadow=this.receiveShadow,t.frustumCulled=this.frustumCulled,t.userData=JSON.parse(JSON.stringify(this.userData)),e===!0)for(var r=0;r<this.children.length;r++){var i=this.children[r]
t.add(i.clone())}return t}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Projector=function(){function t(){if(h===T){var t=new THREE.RenderableObject
return g.push(t),T++,h++,t}return g[h++]}function e(){if(c===R){var t=new THREE.RenderableVertex
return y.push(t),R++,c++,t}return y[c++]}function r(){if(f===H){var t=new THREE.RenderableFace
return x.push(t),H++,f++,t}return x[f++]}function i(){if(p===_){var t=new THREE.RenderableLine
return b.push(t),_++,p++,t}return b[p++]}function n(){if(m===M){var t=new THREE.RenderableSprite
return w.push(t),M++,m++,t}return w[m++]}function a(t,e){return t.z!==e.z?e.z-t.z:t.id!==e.id?t.id-e.id:0}function o(t,e){var r=0,i=1,n=t.z+t.w,a=e.z+e.w,o=-t.z+t.w,s=-e.z+e.w
return n>=0&&a>=0&&o>=0&&s>=0||!(n<0&&a<0||o<0&&s<0)&&(n<0?r=Math.max(r,n/(n-a)):a<0&&(i=Math.min(i,n/(n-a))),o<0?r=Math.max(r,o/(o-s)):s<0&&(i=Math.min(i,o/(o-s))),!(i<r)&&(t.lerp(e,r),e.lerp(t,1-i),!0))}var s,h,l,c,u,f,E,p,d,m,v,g=[],T=0,y=[],R=0,x=[],H=0,b=[],_=0,w=[],M=0,S={objects:[],lights:[],elements:[]},C=new THREE.Vector3,A=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector4,D=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),U=new THREE.Box3,V=new Array(3),z=(new Array(4),new THREE.Matrix4),B=new THREE.Matrix4,k=new THREE.Matrix4,N=new THREE.Matrix3,O=new THREE.Frustum,I=new THREE.Vector4,G=new THREE.Vector4
this.projectVector=function(t,e){return e.matrixWorldInverse.getInverse(e.matrixWorld),B.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),t.applyProjection(B)},this.unprojectVector=function(){var t=new THREE.Matrix4
return function(e,r){return t.getInverse(r.projectionMatrix),B.multiplyMatrices(r.matrixWorld,t),e.applyProjection(B)}}(),this.pickingRay=function(t,e){t.z=-1
var r=new THREE.Vector3(t.x,t.y,1)
return this.unprojectVector(t,e),this.unprojectVector(r,e),r.sub(t).normalize(),new THREE.Raycaster(t,r)}
var W=function(){var t=[],n=[],a=null,o=null,s=new THREE.Matrix3,h=function(e){a=e,o=a.material,s.getNormalMatrix(a.matrixWorld),t.length=0,n.length=0},c=function(t){var e=t.position,r=t.positionWorld,i=t.positionScreen
r.copy(e).applyMatrix4(v),i.copy(r).applyMatrix4(B)
var n=1/i.w
i.x*=n,i.y*=n,i.z*=n,t.visible=i.x>=-1&&i.x<=1&&i.y>=-1&&i.y<=1&&i.z>=-1&&i.z<=1},f=function(t,r,i){l=e(),l.position.set(t,r,i),c(l)},p=function(e,r,i){t.push(e,r,i)},d=function(t,e){n.push(t,e)},m=function(t,e,r){return t.visible===!0||e.visible===!0||r.visible===!0||(V[0]=t.positionScreen,V[1]=e.positionScreen,V[2]=r.positionScreen,D.isIntersectionBox(U.setFromPoints(V)))},g=function(t,e,r){return(r.positionScreen.x-t.positionScreen.x)*(e.positionScreen.y-t.positionScreen.y)-(r.positionScreen.y-t.positionScreen.y)*(e.positionScreen.x-t.positionScreen.x)<0},T=function(t,e){var r=y[t],n=y[e]
E=i(),E.id=a.id,E.v1.copy(r),E.v2.copy(n),E.z=(r.positionScreen.z+n.positionScreen.z)/2,E.material=a.material,S.elements.push(E)},R=function(e,i,h){var l=y[e],c=y[i],f=y[h]
if(m(l,c,f)!==!1&&(o.side===THREE.DoubleSide||g(l,c,f)===!0)){u=r(),u.id=a.id,u.v1.copy(l),u.v2.copy(c),u.v3.copy(f),u.z=(l.positionScreen.z+c.positionScreen.z+f.positionScreen.z)/3
for(var E=0;E<3;E++){var p=3*arguments[E],d=u.vertexNormalsModel[E]
d.set(t[p],t[p+1],t[p+2]),d.applyMatrix3(s).normalize()
var v=2*arguments[E],T=u.uvs[E]
T.set(n[v],n[v+1])}u.vertexNormalsLength=3,u.material=a.material,S.elements.push(u)}}
return{setObject:h,projectVertex:c,checkTriangleVisibility:m,checkBackfaceCulling:g,pushVertex:f,pushNormal:p,pushUv:d,pushLine:T,pushTriangle:R}},j=new W
this.projectScene=function(l,g,T,R){f=0,p=0,m=0,S.elements.length=0,l.autoUpdate===!0&&l.updateMatrixWorld(),void 0===g.parent&&g.updateMatrixWorld(),z.copy(g.matrixWorldInverse.getInverse(g.matrixWorld)),B.multiplyMatrices(g.projectionMatrix,z),O.setFromMatrix(B),h=0,S.objects.length=0,S.lights.length=0,l.traverseVisible(function(e){e instanceof THREE.Light?S.lights.push(e):(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Sprite)&&(e.frustumCulled!==!1&&O.intersectsObject(e)!==!0||(s=t(),s.id=e.id,s.object=e,null!==e.renderDepth?s.z=e.renderDepth:(P.setFromMatrixPosition(e.matrixWorld),P.applyProjection(B),s.z=P.z),S.objects.push(s)))}),T===!0&&S.objects.sort(a)
for(var x=0,H=S.objects.length;x<H;x++){var b=S.objects[x].object,_=b.geometry
if(j.setObject(b),v=b.matrixWorld,c=0,b instanceof THREE.Mesh){if(_ instanceof THREE.BufferGeometry){var w=_.attributes,M=_.offsets
if(void 0===w.position)continue
for(var D=w.position.array,U=0,V=D.length;U<V;U+=3)j.pushVertex(D[U],D[U+1],D[U+2])
if(void 0!==w.normal)for(var W=w.normal.array,U=0,V=W.length;U<V;U+=3)j.pushNormal(W[U],W[U+1],W[U+2])
if(void 0!==w.uv)for(var X=w.uv.array,U=0,V=X.length;U<V;U+=2)j.pushUv(X[U],X[U+1])
if(void 0!==w.index){var Y=w.index.array
if(M.length>0)for(var x=0;x<M.length;x++)for(var q=M[x],K=q.index,U=q.start,V=q.start+q.count;U<V;U+=3)j.pushTriangle(Y[U]+K,Y[U+1]+K,Y[U+2]+K)
else for(var U=0,V=Y.length;U<V;U+=3)j.pushTriangle(Y[U],Y[U+1],Y[U+2])}else for(var U=0,V=D.length/3;U<V;U+=3)j.pushTriangle(U,U+1,U+2)}else if(_ instanceof THREE.Geometry){var Z=_.vertices,Q=_.faces,J=_.faceVertexUvs[0]
N.getNormalMatrix(v)
for(var $=b.material instanceof THREE.MeshFaceMaterial,tt=$===!0?b.material:null,et=0,rt=Z.length;et<rt;et++){var it=Z[et]
j.pushVertex(it.x,it.y,it.z)}for(var nt=0,at=Q.length;nt<at;nt++){var ot=Q[nt],st=$===!0?tt.materials[ot.materialIndex]:b.material
if(void 0!==st){var ht=st.side,lt=y[ot.a],ct=y[ot.b],ut=y[ot.c]
if(st.morphTargets===!0){var ft=_.morphTargets,Et=b.morphTargetInfluences,pt=lt.position,dt=ct.position,mt=ut.position
C.set(0,0,0),A.set(0,0,0),L.set(0,0,0)
for(var vt=0,gt=ft.length;vt<gt;vt++){var Tt=Et[vt]
if(0!==Tt){var yt=ft[vt].vertices
C.x+=(yt[ot.a].x-pt.x)*Tt,C.y+=(yt[ot.a].y-pt.y)*Tt,C.z+=(yt[ot.a].z-pt.z)*Tt,A.x+=(yt[ot.b].x-dt.x)*Tt,A.y+=(yt[ot.b].y-dt.y)*Tt,A.z+=(yt[ot.b].z-dt.z)*Tt,L.x+=(yt[ot.c].x-mt.x)*Tt,L.y+=(yt[ot.c].y-mt.y)*Tt,L.z+=(yt[ot.c].z-mt.z)*Tt}}lt.position.add(C),ct.position.add(A),ut.position.add(L),j.projectVertex(lt),j.projectVertex(ct),j.projectVertex(ut)}if(j.checkTriangleVisibility(lt,ct,ut)!==!1){var Rt=j.checkBackfaceCulling(lt,ct,ut)
if(ht!==THREE.DoubleSide){if(ht===THREE.FrontSide&&Rt===!1)continue
if(ht===THREE.BackSide&&Rt===!0)continue}u=r(),u.id=b.id,u.v1.copy(lt),u.v2.copy(ct),u.v3.copy(ut),u.normalModel.copy(ot.normal),Rt!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||u.normalModel.negate(),u.normalModel.applyMatrix3(N).normalize()
for(var xt=ot.vertexNormals,Ht=0,bt=Math.min(xt.length,3);Ht<bt;Ht++){var _t=u.vertexNormalsModel[Ht]
_t.copy(xt[Ht]),Rt!==!1||ht!==THREE.BackSide&&ht!==THREE.DoubleSide||_t.negate(),_t.applyMatrix3(N).normalize()}u.vertexNormalsLength=xt.length
var wt=J[nt]
if(void 0!==wt)for(var Mt=0;Mt<3;Mt++)u.uvs[Mt].copy(wt[Mt])
u.color=ot.color,u.material=st,u.z=(lt.positionScreen.z+ct.positionScreen.z+ut.positionScreen.z)/3,S.elements.push(u)}}}}}else if(b instanceof THREE.Line){if(_ instanceof THREE.BufferGeometry){var w=_.attributes
if(void 0!==w.position){for(var D=w.position.array,U=0,V=D.length;U<V;U+=3)j.pushVertex(D[U],D[U+1],D[U+2])
if(void 0!==w.index)for(var Y=w.index.array,U=0,V=Y.length;U<V;U+=2)j.pushLine(Y[U],Y[U+1])
else for(var St=b.type===THREE.LinePieces?2:1,U=0,V=D.length/3-1;U<V;U+=St)j.pushLine(U,U+1)}}else if(_ instanceof THREE.Geometry){k.multiplyMatrices(B,v)
var Z=b.geometry.vertices
if(0===Z.length)continue
lt=e(),lt.positionScreen.copy(Z[0]).applyMatrix4(k)
for(var St=b.type===THREE.LinePieces?2:1,et=1,rt=Z.length;et<rt;et++)lt=e(),lt.positionScreen.copy(Z[et]).applyMatrix4(k),(et+1)%St>0||(ct=y[c-2],I.copy(lt.positionScreen),G.copy(ct.positionScreen),o(I,G)===!0&&(I.multiplyScalar(1/I.w),G.multiplyScalar(1/G.w),E=i(),E.id=b.id,E.v1.positionScreen.copy(I),E.v2.positionScreen.copy(G),E.z=Math.max(I.z,G.z),E.material=b.material,b.material.vertexColors===THREE.VertexColors&&(E.vertexColors[0].copy(b.geometry.colors[et]),E.vertexColors[1].copy(b.geometry.colors[et-1])),S.elements.push(E)))}}else if(b instanceof THREE.Sprite){F.set(v.elements[12],v.elements[13],v.elements[14],1),F.applyMatrix4(B)
var Ct=1/F.w
F.z*=Ct,F.z>=-1&&F.z<=1&&(d=n(),d.id=b.id,d.x=F.x*Ct,d.y=F.y*Ct,d.z=F.z,d.object=b,d.rotation=b.rotation,d.scale.x=b.scale.x*Math.abs(d.x-(F.x+g.projectionMatrix.elements[0])/(F.w+g.projectionMatrix.elements[12])),d.scale.y=b.scale.y*Math.abs(d.y-(F.y+g.projectionMatrix.elements[5])/(F.w+g.projectionMatrix.elements[13])),d.material=b.material,S.elements.push(d))}}return R===!0&&S.elements.sort(a),S}},THREE.Face3=function(t,e,r,i,n,a){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var t=new THREE.Face3(this.a,this.b,this.c)
t.normal.copy(this.normal),t.color.copy(this.color),t.materialIndex=this.materialIndex
for(var e=0,r=this.vertexNormals.length;e<r;e++)t.vertexNormals[e]=this.vertexNormals[e].clone()
for(var e=0,r=this.vertexColors.length;e<r;e++)t.vertexColors[e]=this.vertexColors[e].clone()
for(var e=0,r=this.vertexTangents.length;e<r;e++)t.vertexTangents[e]=this.vertexTangents[e].clone()
return t}},THREE.Face4=function(t,e,r,i,n,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,a,o)},THREE.BufferAttribute=function(t,e){this.array=t,this.itemSize=e},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},set:function(t){return this.array.set(t),this},setX:function(t,e){return this.array[t*this.itemSize]=e,this},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this}},THREE.Int8Attribute=function(t,e){return console.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8Attribute=function(t,e){return console.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint8ClampedAttribute=function(t,e){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int16Attribute=function(t,e){return console.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint16Attribute=function(t,e){return console.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Int32Attribute=function(t,e){return console.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Uint32Attribute=function(t,e){return console.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float32Attribute=function(t,e){return console.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.Float64Attribute=function(t,e){return console.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(t,e)},THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.attributes={},this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(t,e){return e instanceof THREE.BufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[t]={array:arguments[1],itemSize:arguments[2]})):void(this.attributes[t]=e)},getAttribute:function(t){return this.attributes[t]},addDrawCall:function(t,e,r){this.drawcalls.push({start:t,count:e,index:void 0!==r?r:0})},applyMatrix:function(t){var e=this.attributes.position
void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0)
var r=this.attributes.normal
if(void 0!==r){var i=(new THREE.Matrix3).getNormalMatrix(t)
i.applyToVector3Array(r.array),r.needsUpdate=!0}},fromGeometry:function(t,e){e=e||{vertexColors:THREE.NoColors}
var r=t.vertices,i=t.faces,n=t.faceVertexUvs,a=e.vertexColors,o=n[0].length>0,s=3==i[0].vertexNormals.length,h=new Float32Array(3*i.length*3)
this.addAttribute("position",new THREE.BufferAttribute(h,3))
var l=new Float32Array(3*i.length*3)
if(this.addAttribute("normal",new THREE.BufferAttribute(l,3)),a!==THREE.NoColors){var c=new Float32Array(3*i.length*3)
this.addAttribute("color",new THREE.BufferAttribute(c,3))}if(o===!0){var u=new Float32Array(3*i.length*2)
this.addAttribute("uvs",new THREE.BufferAttribute(u,2))}for(var f=0,E=0,p=0;f<i.length;f++,E+=6,p+=9){var d=i[f],m=r[d.a],v=r[d.b],g=r[d.c]
if(h[p]=m.x,h[p+1]=m.y,h[p+2]=m.z,h[p+3]=v.x,h[p+4]=v.y,h[p+5]=v.z,h[p+6]=g.x,h[p+7]=g.y,h[p+8]=g.z,s===!0){var T=d.vertexNormals[0],y=d.vertexNormals[1],R=d.vertexNormals[2]
l[p]=T.x,l[p+1]=T.y,l[p+2]=T.z,l[p+3]=y.x,l[p+4]=y.y,l[p+5]=y.z,l[p+6]=R.x,l[p+7]=R.y,l[p+8]=R.z}else{var x=d.normal
l[p]=x.x,l[p+1]=x.y,l[p+2]=x.z,l[p+3]=x.x,l[p+4]=x.y,l[p+5]=x.z,l[p+6]=x.x,l[p+7]=x.y,l[p+8]=x.z}if(a===THREE.FaceColors){var H=d.color
c[p]=H.r,c[p+1]=H.g,c[p+2]=H.b,c[p+3]=H.r,c[p+4]=H.g,c[p+5]=H.b,c[p+6]=H.r,c[p+7]=H.g,c[p+8]=H.b}else if(a===THREE.VertexColors){var b=d.vertexColors[0],_=d.vertexColors[1],w=d.vertexColors[2]
c[p]=b.r,c[p+1]=b.g,c[p+2]=b.b,c[p+3]=_.r,c[p+4]=_.g,c[p+5]=_.b,c[p+6]=w.r,c[p+7]=w.g,c[p+8]=w.b}if(o===!0){var M=n[0][f][0],S=n[0][f][1],C=n[0][f][2]
u[E]=M.x,u[E+1]=M.y,u[E+2]=S.x,u[E+3]=S.y,u[E+4]=C.x,u[E+5]=C.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3)
var t=this.attributes.position.array
if(t){var e=this.boundingBox
t.length>=3&&(e.min.x=e.max.x=t[0],e.min.y=e.max.y=t[1],e.min.z=e.max.z=t[2])
for(var r=3,i=t.length;r<i;r+=3){var n=t[r],a=t[r+1],o=t[r+2]
n<e.min.x?e.min.x=n:n>e.max.x&&(e.max.x=n),a<e.min.y?e.min.y=a:a>e.max.y&&(e.max.y=a),o<e.min.z?e.min.z=o:o>e.max.z&&(e.max.z=o)}}void 0!==t&&0!==t.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')},computeBoundingSphere:function(){var t=new THREE.Box3,e=new THREE.Vector3
return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere)
var r=this.attributes.position.array
if(r){t.makeEmpty()
for(var i=this.boundingSphere.center,n=0,a=r.length;n<a;n+=3)e.set(r[n],r[n+1],r[n+2]),t.expandByPoint(e)
t.center(i)
for(var o=0,n=0,a=r.length;n<a;n+=3)e.set(r[n],r[n+1],r[n+2]),o=Math.max(o,i.distanceToSquared(e))
this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){if(this.attributes.position){var t,e,r,i,n=this.attributes.position.array.length
if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n)}
else for(t=0,e=this.attributes.normal.array.length;t<e;t++)this.attributes.normal.array[t]=0
var a,o,s,h,l,c,u=this.attributes.position.array,f=this.attributes.normal.array,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,v=new THREE.Vector3
if(this.attributes.index){var g=this.attributes.index.array,T=this.offsets.length>0?this.offsets:[{start:0,count:g.length,index:0}]
for(r=0,i=T.length;r<i;++r){var y=T[r].start,R=T[r].count,x=T[r].index
for(t=y,e=y+R;t<e;t+=3)a=x+g[t],o=x+g[t+1],s=x+g[t+2],h=u[3*a],l=u[3*a+1],c=u[3*a+2],E.set(h,l,c),h=u[3*o],l=u[3*o+1],c=u[3*o+2],p.set(h,l,c),h=u[3*s],l=u[3*s+1],c=u[3*s+2],d.set(h,l,c),m.subVectors(d,p),v.subVectors(E,p),m.cross(v),f[3*a]+=m.x,f[3*a+1]+=m.y,f[3*a+2]+=m.z,f[3*o]+=m.x,f[3*o+1]+=m.y,f[3*o+2]+=m.z,f[3*s]+=m.x,f[3*s+1]+=m.y,f[3*s+2]+=m.z}}else for(t=0,e=u.length;t<e;t+=9)h=u[t],l=u[t+1],c=u[t+2],E.set(h,l,c),h=u[t+3],l=u[t+4],c=u[t+5],p.set(h,l,c),h=u[t+6],l=u[t+7],c=u[t+8],d.set(h,l,c),m.subVectors(d,p),v.subVectors(E,p),m.cross(v),f[t]=m.x,f[t+1]=m.y,f[t+2]=m.z,f[t+3]=m.x,f[t+4]=m.y,f[t+5]=m.z,f[t+6]=m.x,f[t+7]=m.y,f[t+8]=m.z
this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeTangents:function(){function t(t,e,r){f=i[3*t],E=i[3*t+1],p=i[3*t+2],d=i[3*e],m=i[3*e+1],v=i[3*e+2],g=i[3*r],T=i[3*r+1],y=i[3*r+2],R=a[2*t],x=a[2*t+1],H=a[2*e],b=a[2*e+1],_=a[2*r],w=a[2*r+1],M=d-f,S=g-f,C=m-E,A=T-E,L=v-p,P=y-p,F=H-R,D=_-R,U=b-x,V=w-x,z=1/(F*V-D*U),j.set((V*M-U*S)*z,(V*C-U*A)*z,(V*L-U*P)*z),X.set((F*S-D*M)*z,(F*A-D*C)*z,(F*P-D*L)*z),l[t].add(j),l[e].add(j),l[r].add(j),c[t].add(X),c[e].add(X),c[r].add(X)}function e(t){rt.x=n[3*t],rt.y=n[3*t+1],rt.z=n[3*t+2],it.copy(rt),J=l[t],tt.copy(J),tt.sub(rt.multiplyScalar(rt.dot(J))).normalize(),et.crossVectors(it,J),$=et.dot(c[t]),Q=$<0?-1:1,h[4*t]=tt.x,h[4*t+1]=tt.y,h[4*t+2]=tt.z,h[4*t+3]=Q}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")
var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,a=this.attributes.uv.array,o=i.length/3
if(void 0===this.attributes.tangent){var s=4*o
this.attributes.tangent={itemSize:4,array:new Float32Array(s)}}for(var h=this.attributes.tangent.array,l=[],c=[],u=0;u<o;u++)l[u]=new THREE.Vector3,c[u]=new THREE.Vector3
var f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I,G,W,j=new THREE.Vector3,X=new THREE.Vector3,Y=this.offsets
for(N=0,O=Y.length;N<O;++N){var q=Y[N].start,K=Y[N].count,Z=Y[N].index
for(B=q,k=q+K;B<k;B+=3)I=Z+r[B],G=Z+r[B+1],W=Z+r[B+2],t(I,G,W)}var Q,J,$,tt=new THREE.Vector3,et=new THREE.Vector3,rt=new THREE.Vector3,it=new THREE.Vector3
for(N=0,O=Y.length;N<O;++N){var q=Y[N].start,K=Y[N].count,Z=Y[N].index
for(B=q,k=q+K;B<k;B+=3)I=Z+r[B],G=Z+r[B+1],W=Z+r[B+2],e(I),e(G),e(W)}},computeOffsets:function(t){var e=t
void 0===t&&(e=65535)
for(var r=(Date.now(),this.attributes.index.array),i=this.attributes.position.array,n=(i.length/3,r.length/3),a=new Uint16Array(r.length),o=0,s=0,h=[{start:0,count:0,index:0}],l=h[0],c=0,u=0,f=new Int32Array(6),E=new Int32Array(i.length),p=new Int32Array(i.length),d=0;d<i.length;d++)E[d]=-1,p[d]=-1
for(var m=0;m<n;m++){u=0
for(var v=0;v<3;v++){var g=r[3*m+v]
E[g]==-1?(f[2*v]=g,f[2*v+1]=-1,u++):E[g]<l.index?(f[2*v]=g,f[2*v+1]=-1,c++):(f[2*v]=g,f[2*v+1]=E[g])}var T=s+u
if(T>l.index+e){var y={start:o,count:0,index:s}
h.push(y),l=y
for(var R=0;R<6;R+=2){var x=f[R+1]
x>-1&&x<l.index&&(f[R+1]=-1)}}for(var R=0;R<6;R+=2){var g=f[R],x=f[R+1]
x===-1&&(x=s++),E[g]=x,p[x]=g,a[o++]=x-l.index,l.count++}}return this.reorderBuffers(a,p,s),this.offsets=h,h},merge:function(){console.log("BufferGeometry.merge(): TODO")},normalizeNormals:function(){for(var t,e,r,i,n=this.attributes.normal.array,a=0,o=n.length;a<o;a+=3)t=n[a],e=n[a+1],r=n[a+2],i=1/Math.sqrt(t*t+e*e+r*r),n[a]*=i,n[a+1]*=i,n[a+2]*=i},reorderBuffers:function(t,e,r){var i={},n=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array]
for(var a in this.attributes)if("index"!=a)for(var o=this.attributes[a].array,s=0,h=n.length;s<h;s++){var l=n[s]
if(o instanceof l){i[a]=new l(this.attributes[a].itemSize*r)
break}}for(var c=0;c<r;c++){var u=e[c]
for(var a in this.attributes)if("index"!=a)for(var f=this.attributes[a].array,E=this.attributes[a].itemSize,p=i[a],d=0;d<E;d++)p[c*E+d]=f[u*E+d]}this.attributes.index.array=t
for(var a in this.attributes)"index"!=a&&(this.attributes[a].array=i[a],this.attributes[a].numItems=this.attributes[a].itemSize*r)},clone:function(){var t=new THREE.BufferGeometry,e=[Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array]
for(var r in this.attributes){for(var i=this.attributes[r],n=i.array,a={itemSize:i.itemSize,array:null},o=0,s=e.length;o<s;o++){var h=e[o]
if(n instanceof h){a.array=new h(n)
break}}t.attributes[r]=a}for(var o=0,s=this.offsets.length;o<s;o++){var l=this.offsets[o]
t.offsets.push({start:l.start,index:l.index,count:l.count})}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++){var n=this.vertices[r]
n.applyMatrix4(t)}for(var r=0,i=this.faces.length;r<i;r++){var a=this.faces[r]
a.normal.applyMatrix3(e).normalize()
for(var o=0,s=a.vertexNormals.length;o<s;o++)a.vertexNormals[o].applyMatrix3(e).normalize()}this.boundingBox instanceof THREE.Box3&&this.computeBoundingBox(),this.boundingSphere instanceof THREE.Sphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox()
var t=new THREE.Vector3
return t.addVectors(this.boundingBox.min,this.boundingBox.max),t.multiplyScalar(-.5),this.applyMatrix((new THREE.Matrix4).makeTranslation(t.x,t.y,t.z)),this.computeBoundingBox(),t},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],a=this.vertices[n.a],o=this.vertices[n.b],s=this.vertices[n.c]
t.subVectors(s,o),e.subVectors(a,o),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i,n,a,o
for(o=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)o[e]=new THREE.Vector3
if(t){var s,h,l,c=new THREE.Vector3,u=new THREE.Vector3
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3
for(i=0,n=this.faces.length;i<n;i++)a=this.faces[i],s=this.vertices[a.a],h=this.vertices[a.b],l=this.vertices[a.c],c.subVectors(l,h),u.subVectors(s,h),c.cross(u),o[a.a].add(c),o[a.b].add(c),o[a.c].add(c)}else for(i=0,n=this.faces.length;i<n;i++)a=this.faces[i],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal)
for(e=0,r=this.vertices.length;e<r;e++)o[e].normalize()
for(i=0,n=this.faces.length;i<n;i++)a=this.faces[i],a.vertexNormals[0]=o[a.a].clone(),a.vertexNormals[1]=o[a.b].clone(),a.vertexNormals[2]=o[a.c].clone()},computeMorphNormals:function(){var t,e,r,i,n
for(r=0,i=this.faces.length;r<i;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone()
var a=new THREE.Geometry
for(a.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[]
var o,s,h=this.morphNormals[t].faceNormals,l=this.morphNormals[t].vertexNormals
for(r=0,i=this.faces.length;r<i;r++)o=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},h.push(o),l.push(s)}var c=this.morphNormals[t]
a.vertices=this.morphTargets[t].vertices,a.computeFaceNormals(),a.computeVertexNormals()
var o,s
for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],o=c.faceNormals[r],s=c.vertexNormals[r],o.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function t(t,e,r,i,n,a,o){l=t.vertices[e],c=t.vertices[r],u=t.vertices[i],f=h[n],E=h[a],p=h[o],d=c.x-l.x,m=u.x-l.x,v=c.y-l.y,g=u.y-l.y,T=c.z-l.z,y=u.z-l.z,R=E.x-f.x,x=p.x-f.x,H=E.y-f.y,b=p.y-f.y,_=1/(R*b-x*H),L.set((b*d-H*m)*_,(b*v-H*g)*_,(b*T-H*y)*_),P.set((R*m-x*d)*_,(R*g-x*v)*_,(R*y-x*T)*_),C[e].add(L),C[r].add(L),C[i].add(L),A[e].add(P),A[r].add(P),A[i].add(P)}var e,r,i,n,a,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C=[],A=[],L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector3,D=new THREE.Vector3,U=new THREE.Vector3
for(i=0,n=this.vertices.length;i<n;i++)C[i]=new THREE.Vector3,A[i]=new THREE.Vector3
for(e=0,r=this.faces.length;e<r;e++)s=this.faces[e],h=this.faceVertexUvs[0][e],t(this,s.a,s.b,s.c,0,1,2)
var V=["a","b","c","d"]
for(e=0,r=this.faces.length;e<r;e++)for(s=this.faces[e],a=0;a<Math.min(s.vertexNormals.length,3);a++)U.copy(s.vertexNormals[a]),o=s[V[a]],w=C[o],F.copy(w),F.sub(U.multiplyScalar(U.dot(w))).normalize(),D.crossVectors(s.vertexNormals[a],w),M=D.dot(A[o]),S=M<0?-1:1,s.vertexTangents[a]=new THREE.Vector4(F.x,F.y,F.z,S)
this.hasTangents=!0},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)r>0&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t instanceof THREE.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)
var i,n=this.vertices.length,a=(this.faceVertexUvs[0].length,this.vertices),o=t.vertices,s=this.faces,h=t.faces,l=this.faceVertexUvs[0],c=t.faceVertexUvs[0]
void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e))
for(var u=0,f=o.length;u<f;u++){var E=o[u],p=E.clone()
void 0!==e&&p.applyMatrix4(e),a.push(p)}for(u=0,f=h.length;u<f;u++){var d,m,v,g=h[u],T=g.vertexNormals,y=g.vertexColors
d=new THREE.Face3(g.a+n,g.b+n,g.c+n),d.normal.copy(g.normal),void 0!==i&&d.normal.applyMatrix3(i).normalize()
for(var R=0,x=T.length;R<x;R++)m=T[R].clone(),void 0!==i&&m.applyMatrix3(i).normalize(),d.vertexNormals.push(m)
d.color.copy(g.color)
for(var R=0,x=y.length;R<x;R++)v=y[R],d.vertexColors.push(v.clone())
d.materialIndex=g.materialIndex+r,s.push(d)}for(u=0,f=c.length;u<f;u++){var H=c[u],b=[]
if(void 0!==H){for(var R=0,x=H.length;R<x;R++)b.push(new THREE.Vector2(H[R].x,H[R].y))
l.push(b)}}},mergeVertices:function(){var t,e,r,i,n,a,o,s,h={},l=[],c=[],u=4,f=Math.pow(10,u)
for(r=0,i=this.vertices.length;r<i;r++)t=this.vertices[r],e=Math.round(t.x*f)+"_"+Math.round(t.y*f)+"_"+Math.round(t.z*f),void 0===h[e]?(h[e]=r,l.push(this.vertices[r]),c[r]=l.length-1):c[r]=c[h[e]]
var E=[]
for(r=0,i=this.faces.length;r<i;r++){n=this.faces[r],n.a=c[n.a],n.b=c[n.b],n.c=c[n.c],a=[n.a,n.b,n.c]
for(var p=-1,d=0;d<3;d++)if(a[d]==a[(d+1)%3]){p=d,E.push(r)
break}}for(r=E.length-1;r>=0;r--){var m=E[r]
for(this.faces.splice(m,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(m,1)}var v=this.vertices.length-l.length
return this.vertices=l,v},makeGroups:function(){var t=0
return function(e,r){var i,n,a,o,s,h,l={},c=this.morphTargets.length,u=this.morphNormals.length
for(this.geometryGroups={},this.geometryGroupsList=[],i=0,n=this.faces.length;i<n;i++)a=this.faces[i],o=e?a.materialIndex:0,o in l||(l[o]={hash:o,counter:0}),s=l[o].hash+"_"+l[o].counter,s in this.geometryGroups||(h={id:t++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=h,this.geometryGroupsList.push(h)),this.geometryGroups[s].vertices+3>r&&(l[o].counter+=1,s=l[o].hash+"_"+l[o].counter,s in this.geometryGroups||(h={id:t++,faces3:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:u},this.geometryGroups[s]=h,this.geometryGroupsList.push(h))),this.geometryGroups[s].faces3.push(i),this.geometryGroups[s].vertices+=3}}(),clone:function(){for(var t=new THREE.Geometry,e=this.vertices,r=0,i=e.length;r<i;r++)t.vertices.push(e[r].clone())
for(var n=this.faces,r=0,i=n.length;r<i;r++)t.faces.push(n[r].clone())
for(var a=this.faceVertexUvs[0],r=0,i=a.length;r<i;r++){for(var o=a[r],s=[],h=0,l=o.length;h<l;h++)s.push(new THREE.Vector2(o[h].x,o[h].y))
t.faceVertexUvs[0].push(s)}return t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var t=new THREE.Matrix4
return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),THREE.Camera.prototype.clone=function(t){return void 0===t&&(t=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,t),t.matrixWorldInverse.copy(this.matrixWorldInverse),t.projectionMatrix.copy(this.projectionMatrix),t},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this)
var i=90,n=1,a=new THREE.PerspectiveCamera(i,n,t,e)
a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(1,0,0)),this.add(a)
var o=new THREE.PerspectiveCamera(i,n,t,e)
o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o)
var s=new THREE.PerspectiveCamera(i,n,t,e)
s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s)
var h=new THREE.PerspectiveCamera(i,n,t,e)
h.up.set(0,0,-1),h.lookAt(new THREE.Vector3(0,-1,0)),this.add(h)
var l=new THREE.PerspectiveCamera(i,n,t,e)
l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,1)),this.add(l)
var c=new THREE.PerspectiveCamera(i,n,t,e)
c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,-1)),this.add(c),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,e){var r=this.renderTarget,i=r.generateMipmaps
r.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,a,r),r.activeCubeFace=1,t.render(e,o,r),r.activeCubeFace=2,t.render(e,s,r),r.activeCubeFace=3,t.render(e,h,r),r.activeCubeFace=4,t.render(e,l,r),r.generateMipmaps=i,r.activeCubeFace=5,t.render(e,c,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.OrthographicCamera=function(t,e,r,i,n,a){THREE.Camera.call(this),this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var t=new THREE.OrthographicCamera
return THREE.Camera.prototype.clone.call(this,t),t.left=this.left,t.right=this.right,t.top=this.top,t.bottom=this.bottom,t.near=this.near,t.far=this.far,t},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,a){this.fullWidth=t,this.fullHeight=e,this.x=r,this.y=i,this.width=n,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-e,i=t*r,n=t*e,a=Math.abs(n-i),o=Math.abs(e-r)
this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,e-(this.y+this.height)*o/this.fullHeight,e-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var t=new THREE.PerspectiveCamera
return THREE.Camera.prototype.clone.call(this,t),t.fov=this.fov,t.aspect=this.aspect,t.near=this.near,t.far=this.far,t},THREE.Light=function(t){THREE.Object3D.call(this),this.color=new THREE.Color(t)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(t){return void 0===t&&(t=new THREE.Light),THREE.Object3D.prototype.clone.call(this,t),t.color.copy(this.color),t},THREE.AmbientLight=function(t){THREE.Light.call(this,t)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var t=new THREE.AmbientLight
return THREE.Light.prototype.clone.call(this,t),t},THREE.AreaLight=function(t,e){THREE.Light.call(this,t),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==e?e:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var t=new THREE.DirectionalLight
return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraLeft=this.shadowCameraLeft,t.shadowCameraRight=this.shadowCameraRight,t.shadowCameraTop=this.shadowCameraTop,t.shadowCameraBottom=this.shadowCameraBottom,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t.shadowCascade=this.shadowCascade,t.shadowCascadeOffset.copy(this.shadowCascadeOffset),t.shadowCascadeCount=this.shadowCascadeCount,t.shadowCascadeBias=this.shadowCascadeBias.slice(0),t.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),t.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),t.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),t.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),t},THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t),this.position.set(0,100,0),this.groundColor=new THREE.Color(e),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var t=new THREE.HemisphereLight
return THREE.Light.prototype.clone.call(this,t),t.groundColor.copy(this.groundColor),t.intensity=this.intensity,t},THREE.PointLight=function(t,e,r){THREE.Light.call(this,t),this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var t=new THREE.PointLight
return THREE.Light.prototype.clone.call(this,t),t.intensity=this.intensity,t.distance=this.distance,t},THREE.SpotLight=function(t,e,r,i,n){THREE.Light.call(this,t),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var t=new THREE.SpotLight
return THREE.Light.prototype.clone.call(this,t),t.target=this.target.clone(),t.intensity=this.intensity,t.distance=this.distance,t.angle=this.angle,t.exponent=this.exponent,t.castShadow=this.castShadow,t.onlyShadow=this.onlyShadow,t.shadowCameraNear=this.shadowCameraNear,t.shadowCameraFar=this.shadowCameraFar,t.shadowCameraFov=this.shadowCameraFov,t.shadowCameraVisible=this.shadowCameraVisible,t.shadowBias=this.shadowBias,t.shadowDarkness=this.shadowDarkness,t.shadowMapWidth=this.shadowMapWidth,t.shadowMapHeight=this.shadowMapHeight,t},THREE.Cache=function(){this.files={}},THREE.Cache.prototype={constructor:THREE.Cache,add:function(t,e){this.files[t]=e},get:function(t){return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(t){this.showStatus=t,this.statusDomElement=t?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var t=document.createElement("div")
return t.style.position="absolute",t.style.right="0px",t.style.top="0px",t.style.fontSize="0.8em",t.style.textAlign="left",t.style.background="rgba(0,0,0,0.25)",t.style.color="#fff",t.style.width="120px",t.style.padding="0.5em 0.5em 0.5em 0.5em",t.style.zIndex=1e3,t.innerHTML="Loading ...",t},updateProgress:function(t){var e="Loaded "
e+=t.total?(100*t.loaded/t.total).toFixed(0)+"%":(t.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=e},extractUrlBase:function(t){var e=t.split("/")
return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e){for(var r=[],i=0;i<t.length;++i)r[i]=this.createMaterial(t[i],e)
return r},needsTangents:function(t){for(var e=0,r=t.length;e<r;e++){var i=t[e]
if(i instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(t,e){function r(t){var e=Math.log(t)/Math.LN2
return Math.pow(2,Math.round(e))}function i(t,i,n,o,s,h,l){var c,u=e+n,f=THREE.Loader.Handlers.get(u)
if(null!==f?c=f.load(u):(c=new THREE.Texture,f=a.imageLoader,f.crossOrigin=a.crossOrigin,f.load(u,function(t){if(THREE.Math.isPowerOfTwo(t.width)===!1||THREE.Math.isPowerOfTwo(t.height)===!1){var e=r(t.width),i=r(t.height),n=document.createElement("canvas")
n.width=e,n.height=i
var a=n.getContext("2d")
a.drawImage(t,0,0,e,i),c.image=n}else c.image=t
c.needsUpdate=!0})),c.sourceFile=n,o&&(c.repeat.set(o[0],o[1]),1!==o[0]&&(c.wrapS=THREE.RepeatWrapping),1!==o[1]&&(c.wrapT=THREE.RepeatWrapping)),s&&c.offset.set(s[0],s[1]),h){var E={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping}
void 0!==E[h[0]]&&(c.wrapS=E[h[0]]),void 0!==E[h[1]]&&(c.wrapT=E[h[1]])}l&&(c.anisotropy=l),t[i]=c}function n(t){return(255*t[0]<<16)+(255*t[1]<<8)+255*t[2]}var a=this,o="MeshLambertMaterial",s={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1}
if(t.shading){var h=t.shading.toLowerCase()
"phong"===h?o="MeshPhongMaterial":"basic"===h&&(o="MeshBasicMaterial")}if(void 0!==t.blending&&void 0!==THREE[t.blending]&&(s.blending=THREE[t.blending]),(void 0!==t.transparent||t.opacity<1)&&(s.transparent=t.transparent),void 0!==t.depthTest&&(s.depthTest=t.depthTest),void 0!==t.depthWrite&&(s.depthWrite=t.depthWrite),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.flipSided&&(s.side=THREE.BackSide),void 0!==t.doubleSided&&(s.side=THREE.DoubleSide),void 0!==t.wireframe&&(s.wireframe=t.wireframe),void 0!==t.vertexColors&&("face"===t.vertexColors?s.vertexColors=THREE.FaceColors:t.vertexColors&&(s.vertexColors=THREE.VertexColors)),t.colorDiffuse?s.color=n(t.colorDiffuse):t.DbgColor&&(s.color=t.DbgColor),t.colorSpecular&&(s.specular=n(t.colorSpecular)),t.colorAmbient&&(s.ambient=n(t.colorAmbient)),t.colorEmissive&&(s.emissive=n(t.colorEmissive)),t.transparency&&(s.opacity=t.transparency),t.specularCoef&&(s.shininess=t.specularCoef),t.mapDiffuse&&e&&i(s,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy),t.mapLight&&e&&i(s,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy),t.mapBump&&e&&i(s,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy),t.mapNormal&&e&&i(s,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy),t.mapSpecular&&e&&i(s,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy),t.mapAlpha&&e&&i(s,"alphaMap",t.mapAlpha,t.mapAlphaRepeat,t.mapAlphaOffset,t.mapAlphaWrap,t.mapAlphaAnisotropy),t.mapBumpScale&&(s.bumpScale=t.mapBumpScale),t.mapNormal){var l=THREE.ShaderLib.normalmap,c=THREE.UniformsUtils.clone(l.uniforms)
c.tNormal.value=s.normalMap,t.mapNormalFactor&&c.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),s.map&&(c.tDiffuse.value=s.map,c.enableDiffuse.value=!0),s.specularMap&&(c.tSpecular.value=s.specularMap,c.enableSpecular.value=!0),s.lightMap&&(c.tAO.value=s.lightMap,c.enableAO.value=!0),c.diffuse.value.setHex(s.color),c.specular.value.setHex(s.specular),c.ambient.value.setHex(s.ambient),c.shininess.value=s.shininess,void 0!==s.opacity&&(c.opacity.value=s.opacity)
var u={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:c,lights:!0,fog:!0},f=new THREE.ShaderMaterial(u)
s.transparent&&(f.transparent=!0)}else var f=new THREE[o](s)
return void 0!==t.DbgName&&(f.name=t.DbgName),f}},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=0,r=this.handlers.length;e<r;e+=2){var i=this.handlers[e],n=this.handlers[e+1]
if(i.test(t))return n}return null}},THREE.XHRLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,e,r,i){var n=this,a=n.cache.get(t)
if(void 0!==a)return void(e&&e(a))
var o=new XMLHttpRequest
o.open("GET",t,!0),o.addEventListener("load",function(r){n.cache.add(t,this.response),e&&e(this.response),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(o.responseType=this.responseType),o.send(null),n.manager.itemStart(t)},setResponseType:function(t){this.responseType=t},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.ImageLoader=function(t){this.cache=new THREE.Cache,this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,e,r,i){var n=this,a=n.cache.get(t)
if(void 0!==a)return void e(a)
var o=document.createElement("img")
return void 0!==e&&o.addEventListener("load",function(r){n.cache.add(t,this),e(this),n.manager.itemEnd(t)},!1),void 0!==r&&o.addEventListener("progress",function(t){r(t)},!1),void 0!==i&&o.addEventListener("error",function(t){i(t)},!1),void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),o.src=t,n.manager.itemStart(t),o},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.JSONLoader=function(t){THREE.Loader.call(this,t),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(t,e,r){r=r&&"string"==typeof r?r:this.extractUrlBase(t),this.onLoadStart(),this.loadAjaxJSON(this,t,e,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(t,e,r,i,n){var a=new XMLHttpRequest,o=0
a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText)
if(void 0!==s.metadata&&"scene"===s.metadata.type)return void console.error('THREE.JSONLoader: "'+e+'" seems to be a Scene. Use THREE.SceneLoader instead.')
var h=t.parse(s,i)
r(h.geometry,h.materials)}else console.error('THREE.JSONLoader: "'+e+'" seems to be unreachable or the file is empty.')
t.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load \""+e+'" ('+a.status+")")
else a.readyState===a.LOADING?n&&(0===o&&(o=a.getResponseHeader("Content-Length")),n({total:o,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&void 0!==n&&(o=a.getResponseHeader("Content-Length"))},a.open("GET",e,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.parse=function(t,e){function r(e){function r(t,e){return t&1<<e}var i,n,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L=t.faces,P=t.vertices,F=t.normals,D=t.colors,U=0
if(void 0!==t.uvs){for(i=0;i<t.uvs.length;i++)t.uvs[i].length&&U++
for(i=0;i<U;i++)a.faceVertexUvs[i]=[]}for(s=0,h=P.length;s<h;)R=new THREE.Vector3,R.x=P[s++]*e,R.y=P[s++]*e,R.z=P[s++]*e,a.vertices.push(R)
for(s=0,h=L.length;s<h;)if(E=L[s++],p=r(E,0),d=r(E,1),m=r(E,3),v=r(E,4),g=r(E,5),T=r(E,6),y=r(E,7),p){if(H=new THREE.Face3,H.a=L[s],H.b=L[s+1],H.c=L[s+3],b=new THREE.Face3,b.a=L[s+1],b.b=L[s+2],b.c=L[s+3],s+=4,d&&(f=L[s++],H.materialIndex=f,b.materialIndex=f),o=a.faces.length,m)for(i=0;i<U;i++)for(M=t.uvs[i],a.faceVertexUvs[i][o]=[],a.faceVertexUvs[i][o+1]=[],n=0;n<4;n++)u=L[s++],C=M[2*u],A=M[2*u+1],S=new THREE.Vector2(C,A),2!==n&&a.faceVertexUvs[i][o].push(S),0!==n&&a.faceVertexUvs[i][o+1].push(S)
if(v&&(c=3*L[s++],H.normal.set(F[c++],F[c++],F[c]),b.normal.copy(H.normal)),g)for(i=0;i<4;i++)c=3*L[s++],w=new THREE.Vector3(F[c++],F[c++],F[c]),2!==i&&H.vertexNormals.push(w),0!==i&&b.vertexNormals.push(w)
if(T&&(l=L[s++],_=D[l],H.color.setHex(_),b.color.setHex(_)),y)for(i=0;i<4;i++)l=L[s++],_=D[l],2!==i&&H.vertexColors.push(new THREE.Color(_)),0!==i&&b.vertexColors.push(new THREE.Color(_))
a.faces.push(H),a.faces.push(b)}else{if(x=new THREE.Face3,x.a=L[s++],x.b=L[s++],x.c=L[s++],d&&(f=L[s++],x.materialIndex=f),o=a.faces.length,m)for(i=0;i<U;i++)for(M=t.uvs[i],a.faceVertexUvs[i][o]=[],n=0;n<3;n++)u=L[s++],C=M[2*u],A=M[2*u+1],S=new THREE.Vector2(C,A),a.faceVertexUvs[i][o].push(S)
if(v&&(c=3*L[s++],x.normal.set(F[c++],F[c++],F[c])),g)for(i=0;i<3;i++)c=3*L[s++],w=new THREE.Vector3(F[c++],F[c++],F[c]),x.vertexNormals.push(w)
if(T&&(l=L[s++],x.color.setHex(D[l])),y)for(i=0;i<3;i++)l=L[s++],x.vertexColors.push(new THREE.Color(D[l]))
a.faces.push(x)}}function i(){var e=void 0!==t.influencesPerVertex?t.influencesPerVertex:2
if(t.skinWeights)for(var r=0,i=t.skinWeights.length;r<i;r+=e){var n=t.skinWeights[r],o=e>1?t.skinWeights[r+1]:0,s=e>2?t.skinWeights[r+2]:0,h=e>3?t.skinWeights[r+3]:0
a.skinWeights.push(new THREE.Vector4(n,o,s,h))}if(t.skinIndices)for(var r=0,i=t.skinIndices.length;r<i;r+=e){var l=t.skinIndices[r],c=e>1?t.skinIndices[r+1]:0,u=e>2?t.skinIndices[r+2]:0,f=e>3?t.skinIndices[r+3]:0
a.skinIndices.push(new THREE.Vector4(l,c,u,f))}a.bones=t.bones,a.bones&&a.bones.length>0&&(a.skinWeights.length!==a.skinIndices.length||a.skinIndices.length!==a.vertices.length)&&console.warn("When skinning, number of vertices ("+a.vertices.length+"), skinIndices ("+a.skinIndices.length+"), and skinWeights ("+a.skinWeights.length+") should match."),a.animation=t.animation,a.animations=t.animations}function n(e){if(void 0!==t.morphTargets){var r,i,n,o,s,h
for(r=0,i=t.morphTargets.length;r<i;r++)for(a.morphTargets[r]={},a.morphTargets[r].name=t.morphTargets[r].name,a.morphTargets[r].vertices=[],s=a.morphTargets[r].vertices,h=t.morphTargets[r].vertices,n=0,o=h.length;n<o;n+=3){var l=new THREE.Vector3
l.x=h[n]*e,l.y=h[n+1]*e,l.z=h[n+2]*e,s.push(l)}}if(void 0!==t.morphColors){var r,i,c,u,f,E,p
for(r=0,i=t.morphColors.length;r<i;r++)for(a.morphColors[r]={},a.morphColors[r].name=t.morphColors[r].name,a.morphColors[r].colors=[],f=a.morphColors[r].colors,E=t.morphColors[r].colors,c=0,u=E.length;c<u;c+=3)p=new THREE.Color(16755200),p.setRGB(E[c],E[c+1],E[c+2]),f.push(p)}}var a=new THREE.Geometry,o=void 0!==t.scale?1/t.scale:1
if(r(o),i(),n(o),a.computeFaceNormals(),a.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:a}
var s=this.initMaterials(t.materials,e)
return this.needsTangents(s)&&a.computeTangents(),{geometry:a,materials:s}},THREE.LoadingManager=function(t,e,r){var i=this,n=0,a=0
this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){a++},this.itemEnd=function(t){n++,void 0!==i.onProgress&&i.onProgress(t,n,a),n===a&&void 0!==i.onLoad&&i.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager
THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager}
THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this,a=new THREE.XHRLoader
a.setCrossOrigin(this.crossOrigin),a.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE.BufferGeometry,r=t.attributes
for(var i in r){var n=r[i]
e.attributes[i]={itemSize:n.itemSize,array:new self[n.type](n.array)}}var a=t.offsets
void 0!==a&&(e.offsets=JSON.parse(JSON.stringify(a)))
var o=t.boundingSphere
return void 0!==o&&(e.boundingSphere=new THREE.Sphere((new THREE.Vector3).fromArray(void 0!==o.center?o.center:[0,0,0]),o.radius)),e}},THREE.MaterialLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this,a=new THREE.XHRLoader
a.setCrossOrigin(this.crossOrigin),a.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE[t.type]
if(void 0!==t.color&&e.color.setHex(t.color),void 0!==t.ambient&&e.ambient.setHex(t.ambient),void 0!==t.emissive&&e.emissive.setHex(t.emissive),void 0!==t.specular&&e.specular.setHex(t.specular),void 0!==t.shininess&&(e.shininess=t.shininess),void 0!==t.uniforms&&(e.uniforms=t.uniforms),void 0!==t.vertexShader&&(e.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(e.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(e.vertexColors=t.vertexColors),void 0!==t.blending&&(e.blending=t.blending),void 0!==t.side&&(e.side=t.side),void 0!==t.opacity&&(e.opacity=t.opacity),void 0!==t.transparent&&(e.transparent=t.transparent),void 0!==t.wireframe&&(e.wireframe=t.wireframe),void 0!==t.materials)for(var r=0,i=t.materials.length;r<i;r++)e.materials.push(this.parse(t.materials[r]))
return e}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){var n=this,a=new THREE.XHRLoader(n.manager)
a.setCrossOrigin(this.crossOrigin),a.load(t,function(t){e(n.parse(JSON.parse(t)))},r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=this.parseGeometries(t.geometries),r=this.parseMaterials(t.materials),i=this.parseObject(t.object,e,r)
return i},parseGeometries:function(t){var e={}
if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,a=t.length;n<a;n++){var o,s=t[n]
switch(s.type){case"PlaneGeometry":o=new THREE.PlaneGeometry(s.width,s.height,s.widthSegments,s.heightSegments)
break
case"BoxGeometry":case"CubeGeometry":o=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments)
break
case"CircleGeometry":o=new THREE.CircleGeometry(s.radius,s.segments)
break
case"CylinderGeometry":o=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded)
break
case"SphereGeometry":o=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength)
break
case"IcosahedronGeometry":o=new THREE.IcosahedronGeometry(s.radius,s.detail)
break
case"TorusGeometry":o=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc)
break
case"TorusKnotGeometry":o=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale)
break
case"BufferGeometry":o=i.parse(s.data)
break
case"Geometry":o=r.parse(s.data).geometry}o.uuid=s.uuid,void 0!==s.name&&(o.name=s.name),e[s.uuid]=o}return e},parseMaterials:function(t){var e={}
if(void 0!==t)for(var r=new THREE.MaterialLoader,i=0,n=t.length;i<n;i++){var a=t[i],o=r.parse(a)
o.uuid=a.uuid,void 0!==a.name&&(o.name=a.name),e[a.uuid]=o}return e},parseObject:function(){var t=new THREE.Matrix4
return function(e,r,i){var n
switch(e.type){case"Scene":n=new THREE.Scene
break
case"PerspectiveCamera":n=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far)
break
case"OrthographicCamera":n=new THREE.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far)
break
case"AmbientLight":n=new THREE.AmbientLight(e.color)
break
case"DirectionalLight":n=new THREE.DirectionalLight(e.color,e.intensity)
break
case"PointLight":n=new THREE.PointLight(e.color,e.intensity,e.distance)
break
case"SpotLight":n=new THREE.SpotLight(e.color,e.intensity,e.distance,e.angle,e.exponent)
break
case"HemisphereLight":n=new THREE.HemisphereLight(e.color,e.groundColor,e.intensity)
break
case"Mesh":var a=r[e.geometry],o=i[e.material]
void 0===a&&console.error("THREE.ObjectLoader: Undefined geometry "+e.geometry),void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Mesh(a,o)
break
case"Sprite":var o=i[e.material]
void 0===o&&console.error("THREE.ObjectLoader: Undefined material "+e.material),n=new THREE.Sprite(o)
break
default:n=new THREE.Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.children)for(var s in e.children)n.add(this.parseObject(e.children[s],r,i))
return n}}()},THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=this,a=new THREE.ImageLoader(n.manager)
a.setCrossOrigin(this.crossOrigin),a.load(t,function(t){var r=new THREE.Texture(t)
r.needsUpdate=!0,void 0!==e&&e(r)},r,i)},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e]
if(void 0!==r){if(e in this){var i=this[e]
i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):"overdraw"==e?this[e]=Number(r):this[e]=r}}else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},clone:function(t){return void 0===t&&(t=new THREE.Material),t.name=this.name,t.side=this.side,t.opacity=this.opacity,t.transparent=this.transparent,t.blending=this.blending,t.blendSrc=this.blendSrc,t.blendDst=this.blendDst,t.blendEquation=this.blendEquation,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.polygonOffset=this.polygonOffset,t.polygonOffsetFactor=this.polygonOffsetFactor,t.polygonOffsetUnits=this.polygonOffsetUnits,t.alphaTest=this.alphaTest,t.overdraw=this.overdraw,t.visible=this.visible,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var t=new THREE.LineBasicMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.linecap=this.linecap,t.linejoin=this.linejoin,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var t=new THREE.LineDashedMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.linewidth=this.linewidth,t.scale=this.scale,t.dashSize=this.dashSize,t.gapSize=this.gapSize,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var t=new THREE.MeshBasicMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var t=new THREE.MeshLambertMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var t=new THREE.MeshPhongMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.ambient.copy(this.ambient),t.emissive.copy(this.emissive),t.specular.copy(this.specular),t.shininess=this.shininess,t.metal=this.metal,t.wrapAround=this.wrapAround,t.wrapRGB.copy(this.wrapRGB),t.map=this.map,t.lightMap=this.lightMap,t.bumpMap=this.bumpMap,t.bumpScale=this.bumpScale,t.normalMap=this.normalMap,t.normalScale.copy(this.normalScale),t.specularMap=this.specularMap,t.alphaMap=this.alphaMap,t.envMap=this.envMap,t.combine=this.combine,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,t.fog=this.fog,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.wireframeLinecap=this.wireframeLinecap,t.wireframeLinejoin=this.wireframeLinejoin,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var t=new THREE.MeshDepthMaterial
return THREE.Material.prototype.clone.call(this,t),t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var t=new THREE.MeshNormalMaterial
return THREE.Material.prototype.clone.call(this,t),t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t},THREE.MeshFaceMaterial=function(t){this.materials=t instanceof Array?t:[]},THREE.MeshFaceMaterial.prototype.clone=function(){for(var t=new THREE.MeshFaceMaterial,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone())
return t},THREE.PointCloudMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.clone=function(){var t=new THREE.PointCloudMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.size=this.size,t.sizeAttenuation=this.sizeAttenuation,t.vertexColors=this.vertexColors,t.fog=this.fog,t},THREE.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(t)},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(t)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var t=new THREE.ShaderMaterial
return THREE.Material.prototype.clone.call(this,t),t.fragmentShader=this.fragmentShader,t.vertexShader=this.vertexShader,t.uniforms=THREE.UniformsUtils.clone(this.uniforms),t.attributes=this.attributes,t.defines=this.defines,t.shading=this.shading,t.wireframe=this.wireframe,t.wireframeLinewidth=this.wireframeLinewidth,t.fog=this.fog,t.lights=this.lights,t.vertexColors=this.vertexColors,t.skinning=this.skinning,t.morphTargets=this.morphTargets,t.morphNormals=this.morphNormals,t},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t)},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.clone=function(){var t=new THREE.RawShaderMaterial
return THREE.ShaderMaterial.prototype.clone.call(this,t),t},THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var t=new THREE.SpriteMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.map=this.map,t.rotation=this.rotation,t.fog=this.fog,t},THREE.SpriteCanvasMaterial=function(t){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(t,e){},this.setValues(t)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.clone=function(){var t=new THREE.SpriteCanvasMaterial
return THREE.Material.prototype.clone.call(this,t),t.color.copy(this.color),t.program=this.program,t},THREE.ParticleCanvasMaterial=THREE.SpriteCanvasMaterial,THREE.Texture=function(t,e,r,i,n,a,o,s,h){this.id=THREE.TextureIdCount++,this.uuid=THREE.Math.generateUUID(),this.name="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=new THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){t===!0&&this.update(),this._needsUpdate=t},clone:function(t){return void 0===t&&(t=new THREE.Texture),t.image=this.image,t.mipmaps=this.mipmaps.slice(0),t.mapping=this.mapping,t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.format=this.format,t.type=this.type,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.generateMipmaps=this.generateMipmaps,t.premultiplyAlpha=this.premultiplyAlpha,t.flipY=this.flipY,t.unpackAlignment=this.unpackAlignment,t},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(t,e,r,i,n,a,o,s,h){THREE.Texture.call(this,t,e,r,i,n,a,o,s,h),this.images=t},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.clone=function(t){return void 0===t&&(t=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,t),t.images=this.images,t},THREE.CompressedTexture=function(t,e,r,i,n,a,o,s,h,l,c){THREE.Texture.call(this,null,a,o,s,h,l,i,n,c),this.image={width:e,height:r},this.mipmaps=t,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var t=new THREE.CompressedTexture
return THREE.Texture.prototype.clone.call(this,t),t},THREE.DataTexture=function(t,e,r,i,n,a,o,s,h,l,c){THREE.Texture.call(this,null,a,o,s,h,l,i,n,c),this.image={data:t,width:e,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var t=new THREE.DataTexture
return THREE.Texture.prototype.clone.call(this,t),t},THREE.PointCloud=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointCloudMaterial({color:16777215*Math.random()}),this.sortParticles=!1},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray
return function(r,i){var n=this,a=n.geometry,o=r.params.PointCloud.threshold
if(t.getInverse(this.matrixWorld),e.copy(r.ray).applyMatrix4(t),null===a.boundingBox||e.isIntersectionBox(a.boundingBox)!==!1){var s=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=new THREE.Vector3,l=function(t,a){var o=e.distanceToPoint(t)
if(o<s){var h=e.closestPointToPoint(t)
h.applyMatrix4(n.matrixWorld)
var l=r.ray.origin.distanceTo(h)
i.push({distance:l,distanceToRay:o,point:h.clone(),index:a,face:null,object:n})}}
if(a instanceof THREE.BufferGeometry){var c=a.attributes,u=c.position.array
if(void 0!==c.index){var f=c.index.array,E=a.offsets
if(0===E.length){var p={start:0,count:f.length,index:0}
E=[p]}for(var d=0,m=E.length;d<m;++d)for(var v=E[d].start,g=E[d].count,T=E[d].index,y=v,R=v+g;y<R;y++){var x=T+f[y]
h.set(u[3*x],u[3*x+1],u[3*x+2]),l(h,x)}}else for(var H=u.length/3,y=0;y<H;y++)h.set(u[3*y],u[3*y+1],u[3*y+2]),l(h,y)}else for(var b=this.geometry.vertices,y=0;y<b.length;y++)l(b[y],y)}}}(),THREE.PointCloud.prototype.clone=function(t){return void 0===t&&(t=new THREE.PointCloud(this.geometry,this.material)),t.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,t),t},THREE.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(t,e)},THREE.Line=function(t,e,r){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere
return function(i,n){var a=i.linePrecision,o=a*a,s=this.geometry
if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),i.ray.isIntersectionSphere(r)!==!1&&(t.getInverse(this.matrixWorld),e.copy(i.ray).applyMatrix4(t),s instanceof THREE.Geometry))for(var h=s.vertices,l=h.length,c=new THREE.Vector3,u=new THREE.Vector3,f=this.type===THREE.LineStrip?1:2,E=0;E<l-1;E+=f){var p=e.distanceSqToSegment(h[E],h[E+1],u,c)
if(!(p>o)){var d=e.origin.distanceTo(u)
d<i.near||d>i.far||n.push({distance:d,point:c.clone().applyMatrix4(this.matrixWorld),face:null,faceIndex:null,object:this})}}}}(),THREE.Line.prototype.clone=function(t){return void 0===t&&(t=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={}
for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,a=new THREE.Vector3
return function(o,s){var h=this.geometry
if(null===h.boundingSphere&&h.computeBoundingSphere(),r.copy(h.boundingSphere),r.applyMatrix4(this.matrixWorld),o.ray.isIntersectionSphere(r)!==!1&&(t.getInverse(this.matrixWorld),e.copy(o.ray).applyMatrix4(t),null===h.boundingBox||e.isIntersectionBox(h.boundingBox)!==!1))if(h instanceof THREE.BufferGeometry){var l=this.material
if(void 0===l)return
var c,u,f,E=h.attributes,p=o.precision
if(void 0!==E.index){var d=E.index.array,m=E.position.array,v=h.offsets
0===v.length&&(v=[{start:0,count:d.length,index:0}])
for(var g=0,T=v.length;g<T;++g)for(var y=v[g].start,R=v[g].count,x=v[g].index,H=y,b=y+R;H<b;H+=3){if(c=x+d[H],u=x+d[H+1],f=x+d[H+2],i.set(m[3*c],m[3*c+1],m[3*c+2]),n.set(m[3*u],m[3*u+1],m[3*u+2]),a.set(m[3*f],m[3*f+1],m[3*f+2]),l.side===THREE.BackSide)var _=e.intersectTriangle(a,n,i,!0)
else var _=e.intersectTriangle(i,n,a,l.side!==THREE.DoubleSide)
if(null!==_){_.applyMatrix4(this.matrixWorld)
var w=o.ray.origin.distanceTo(_)
w<p||w<o.near||w>o.far||s.push({distance:w,point:_,indices:[c,u,f],face:null,faceIndex:null,object:this})}}}else for(var m=E.position.array,H=0,M=0,b=m.length;H<b;H+=3,M+=9){if(c=H,u=H+1,f=H+2,i.set(m[M],m[M+1],m[M+2]),n.set(m[M+3],m[M+4],m[M+5]),a.set(m[M+6],m[M+7],m[M+8]),l.side===THREE.BackSide)var _=e.intersectTriangle(a,n,i,!0)
else var _=e.intersectTriangle(i,n,a,l.side!==THREE.DoubleSide)
if(null!==_){_.applyMatrix4(this.matrixWorld)
var w=o.ray.origin.distanceTo(_)
w<p||w<o.near||w>o.far||s.push({distance:w,point:_,indices:[c,u,f],face:null,faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var c,u,f,S=this.material instanceof THREE.MeshFaceMaterial,C=S===!0?this.material.materials:null,p=o.precision,A=h.vertices,L=0,P=h.faces.length;L<P;L++){var F=h.faces[L],l=S===!0?C[F.materialIndex]:this.material
if(void 0!==l){if(c=A[F.a],u=A[F.b],f=A[F.c],l.morphTargets===!0){var D=h.morphTargets,U=this.morphTargetInfluences
i.set(0,0,0),n.set(0,0,0),a.set(0,0,0)
for(var V=0,z=D.length;V<z;V++){var B=U[V]
if(0!==B){var k=D[V].vertices
i.x+=(k[F.a].x-c.x)*B,i.y+=(k[F.a].y-c.y)*B,i.z+=(k[F.a].z-c.z)*B,n.x+=(k[F.b].x-u.x)*B,n.y+=(k[F.b].y-u.y)*B,n.z+=(k[F.b].z-u.z)*B,a.x+=(k[F.c].x-f.x)*B,a.y+=(k[F.c].y-f.y)*B,a.z+=(k[F.c].z-f.z)*B}}i.add(c),n.add(u),a.add(f),c=i,u=n,f=a}if(l.side===THREE.BackSide)var _=e.intersectTriangle(f,u,c,!0)
else var _=e.intersectTriangle(c,u,f,l.side!==THREE.DoubleSide)
if(null!==_){_.applyMatrix4(this.matrixWorld)
var w=o.ray.origin.distanceTo(_)
w<p||w<o.near||w>o.far||s.push({distance:w,point:_,face:F,faceIndex:L,object:this})}}}}}(),THREE.Mesh.prototype.clone=function(t,e){return void 0===t&&(t=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,t,e),t},THREE.Bone=function(t){THREE.Object3D.call(this),this.skin=t,this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.updateMatrixWorld=function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),this.accumulatedRotWeight=0,this.accumulatedPosWeight=0,this.accumulatedSclWeight=0},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,t=t||[],this.bones=t.slice(0),this.useVertexTexture){var i
i=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length)
if(void 0===e)this.calculateInverses()
else if(this.bones.length===e.length)this.boneInverses=e.slice(0)
else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[]
for(var n=0,a=this.bones.length;n<a;n++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[]
for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4
this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)t=this.bones[e],t&&t.matrixWorld.getInverse(this.boneInverses[e])
for(var e=0,r=this.bones.length;e<r;e++)t=this.bones[e],t&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){for(var t=new THREE.Matrix4,e=0,r=this.bones.length;e<r;e++){var i=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix
t.multiplyMatrices(i,this.boneInverses[e]),t.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh=function(t,e,r){THREE.Mesh.call(this,t,e),this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4
var i=[]
if(this.geometry&&void 0!==this.geometry.bones){for(var n,a,o,s,h,l=0,c=this.geometry.bones.length;l<c;++l)a=this.geometry.bones[l],o=a.pos,s=a.rotq,h=a.scl,n=new THREE.Bone(this),i.push(n),n.name=a.name,n.position.set(o[0],o[1],o[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),void 0!==h?n.scale.set(h[0],h[1],h[2]):n.scale.set(1,1,1)
for(var l=0,c=this.geometry.bones.length;l<c;++l)a=this.geometry.bones[l],a.parent!==-1?i[a.parent].add(i[l]):this.add(i[l])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(i,void 0,r))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],r=1/e.lengthManhattan()
r!==1/0?e.multiplyScalar(r):e.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(t){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,t),t},THREE.MorphAnimMesh=function(t,e){THREE.Mesh.call(this,t,e),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(t,e){this.startKeyframe=t,this.endKeyframe=e,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var t=this.geometry
t.animations||(t.animations={})
for(var e,r=t.animations,i=/([a-z]+)_?(\d+)/,n=0,a=t.morphTargets.length;n<a;n++){var o=t.morphTargets[n],s=o.name.match(i)
if(s&&s.length>1){var h=s[1]
s[2]
r[h]||(r[h]={start:1/0,end:-(1/0)})
var l=r[h]
n<l.start&&(l.start=n),n>l.end&&(l.end=n),e||(e=h)}}t.firstAnimation=e},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(t,e,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[t]={start:e,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(t,e){var r=this.geometry.animations[t]
r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/e),this.time=0):console.warn("animation["+t+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(t){var e=this.duration/this.length
this.time+=this.direction*t,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration))
var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/e),0,this.length-1)
r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r)
var i=this.time%e/e
this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.interpolateTargets=function(t,e,r){for(var i=this.morphTargetInfluences,n=0,a=i.length;n<a;n++)i[n]=0
t>-1&&(i[t]=1-r),e>-1&&(i[e]=r)},THREE.MorphAnimMesh.prototype.clone=function(t){return void 0===t&&(t=new THREE.MorphAnimMesh(this.geometry,this.material)),t.duration=this.duration,t.mirroredLoop=this.mirroredLoop,t.time=this.time,t.lastKeyframe=this.lastKeyframe,t.currentKeyframe=this.currentKeyframe,t.direction=this.direction,t.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,t),t},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e)
for(var r=0;r<this.objects.length&&!(e<this.objects[r].distance);r++);this.objects.splice(r,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=1,r=this.objects.length;e<r&&!(t<this.objects[e].distance);e++);return this.objects[e-1].object},THREE.LOD.prototype.raycast=function(){var t=new THREE.Vector3
return function(e,r){t.setFromMatrixPosition(this.matrixWorld)
var i=e.ray.origin.distanceTo(t)
this.getObjectForDistance(i).raycast(e,r)}}(),THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(r){if(this.objects.length>1){t.setFromMatrixPosition(r.matrixWorld),e.setFromMatrixPosition(this.matrixWorld)
var i=t.distanceTo(e)
this.objects[0].object.visible=!0
for(var n=1,a=this.objects.length;n<a&&i>=this.objects[n].distance;n++)this.objects[n-1].object.visible=!1,this.objects[n].object.visible=!0
for(;n<a;n++)this.objects[n].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(t){void 0===t&&(t=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,t)
for(var e=0,r=this.objects.length;e<r;e++){var i=this.objects[e].object.clone()
i.visible=0===e,t.addLevel(i,this.objects[e].distance)}return t},THREE.Sprite=function(){var t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0]),e=new THREE.BufferGeometry
return e.addAttribute("position",new THREE.BufferAttribute(t,3)),function(t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.raycast=function(){var t=new THREE.Vector3
return function(e,r){t.setFromMatrixPosition(this.matrixWorld)
var i=e.ray.distanceToPoint(t)
i>this.scale.x||r.push({distance:i,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(t){return void 0===t&&(t=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,t),t},THREE.Particle=THREE.Sprite,THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(t){if(t instanceof THREE.Light)this.__lights.indexOf(t)===-1&&this.__lights.push(t),t.target&&void 0===t.target.parent&&this.add(t.target)
else if(!(t instanceof THREE.Camera||t instanceof THREE.Bone)){this.__objectsAdded.push(t)
var e=this.__objectsRemoved.indexOf(t)
e!==-1&&this.__objectsRemoved.splice(e,1)}this.dispatchEvent({type:"objectAdded",object:t}),t.dispatchEvent({type:"addedToScene",scene:this})
for(var r=0;r<t.children.length;r++)this.__addObject(t.children[r])},THREE.Scene.prototype.__removeObject=function(t){if(t instanceof THREE.Light){var e=this.__lights.indexOf(t)
if(e!==-1&&this.__lights.splice(e,1),t.shadowCascadeArray)for(var r=0;r<t.shadowCascadeArray.length;r++)this.__removeObject(t.shadowCascadeArray[r])}else if(!(t instanceof THREE.Camera)){this.__objectsRemoved.push(t)
var e=this.__objectsAdded.indexOf(t)
e!==-1&&this.__objectsAdded.splice(e,1)}this.dispatchEvent({type:"objectRemoved",object:t}),t.dispatchEvent({type:"removedFromScene",scene:this})
for(var i=0;i<t.children.length;i++)this.__removeObject(t.children[i])},THREE.Scene.prototype.clone=function(t){return void 0===t&&(t=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,t),null!==this.fog&&(t.fog=this.fog.clone()),null!==this.overrideMaterial&&(t.overrideMaterial=this.overrideMaterial.clone()),t.autoUpdate=this.autoUpdate,t.matrixAutoUpdate=this.matrixAutoUpdate,t},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(t){function e(){gt.setRGB(0,0,0),Tt.setRGB(0,0,0),yt.setRGB(0,0,0)
for(var t=0,e=b.length;t<e;t++){var r=b[t],i=r.color
r instanceof THREE.AmbientLight?gt.add(i):r instanceof THREE.DirectionalLight?Tt.add(i):r instanceof THREE.PointLight&&yt.add(i)}}function r(t,e,r){for(var i=0,n=b.length;i<n;i++){var a=b[i]
if(Et.copy(a.color),a instanceof THREE.DirectionalLight){var o=Rt.setFromMatrixPosition(a.matrixWorld).normalize(),s=e.dot(o)
if(s<=0)continue
s*=a.intensity,r.add(Et.multiplyScalar(s))}else if(a instanceof THREE.PointLight){var o=Rt.setFromMatrixPosition(a.matrixWorld),s=e.dot(Rt.subVectors(o,t).normalize())
if(s<=0)continue
if(s*=0==a.distance?1:1-Math.min(t.distanceTo(o)/a.distance,1),0==s)continue
s*=a.intensity,r.add(Et.multiplyScalar(s))}}}function i(t,e,r){E(r.opacity),p(r.blending)
var i=e.scale.x*Y,n=e.scale.y*q,a=.5*Math.sqrt(i*i+n*n)
if(vt.min.set(t.x-a,t.y-a),vt.max.set(t.x+a,t.y+a),r instanceof THREE.SpriteMaterial){var o=r.map
if(null!==o&&void 0!==o.image){o.hasEventListener("update",l)===!1&&(o.image.width>0&&c(o),o.addEventListener("update",l))
var s=pt[o.id]
T(void 0!==s?s:"rgba( 0, 0, 0, 1 )")
var h=o.image,u=h.width*o.offset.x,f=h.height*o.offset.y,d=h.width*o.repeat.x,m=h.height*o.repeat.y,v=i/d,y=n/m
$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.translate(-i/2,-n/2),$.scale(v,y),$.translate(-u,-f),$.fillRect(u,f,d,m),$.restore()}else T(r.color.getStyle()),$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.scale(i,-n),$.fillRect(-.5,-.5,1,1),$.restore()}else r instanceof THREE.SpriteCanvasMaterial&&(g(r.color.getStyle()),T(r.color.getStyle()),$.save(),$.translate(t.x,t.y),0!==r.rotation&&$.rotate(r.rotation),$.scale(i,n),r.program($),$.restore())}function n(t,e,r,i){if(E(i.opacity),p(i.blending),$.beginPath(),$.moveTo(t.positionScreen.x,t.positionScreen.y),$.lineTo(e.positionScreen.x,e.positionScreen.y),i instanceof THREE.LineBasicMaterial){if(d(i.linewidth),m(i.linecap),v(i.linejoin),i.vertexColors!==THREE.VertexColors)g(i.color.getStyle())
else{var n=r.vertexColors[0].getStyle(),a=r.vertexColors[1].getStyle()
if(n===a)g(n)
else{try{var o=$.createLinearGradient(t.positionScreen.x,t.positionScreen.y,e.positionScreen.x,e.positionScreen.y)
o.addColorStop(0,n),o.addColorStop(1,a)}catch(t){o=n}g(o)}}$.stroke(),vt.expandByScalar(2*i.linewidth)}else i instanceof THREE.LineDashedMaterial&&(d(i.linewidth),m(i.linecap),v(i.linejoin),g(i.color.getStyle()),y([i.dashSize,i.gapSize]),$.stroke(),vt.expandByScalar(2*i.linewidth),y([]))}function a(t,e,i,n,a,l,c,f){I.info.render.vertices+=3,I.info.render.faces++,E(f.opacity),p(f.blending),C=t.positionScreen.x,A=t.positionScreen.y,L=e.positionScreen.x,P=e.positionScreen.y,F=i.positionScreen.x,D=i.positionScreen.y,o(C,A,L,P,F,D),(f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial)&&null===f.map?(ut.copy(f.color),ft.copy(f.emissive),f.vertexColors===THREE.FaceColors&&ut.multiply(c.color),ct.copy(gt),xt.copy(t.positionWorld).add(e.positionWorld).add(i.positionWorld).divideScalar(3),r(xt,c.normalModel,ct),ct.multiply(ut).add(ft),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshBasicMaterial||f instanceof THREE.MeshLambertMaterial||f instanceof THREE.MeshPhongMaterial?null!==f.map?f.map.mapping instanceof THREE.UVMapping&&(U=c.uvs,u(C,A,L,P,F,D,U[n].x,U[n].y,U[a].x,U[a].y,U[l].x,U[l].y,f.map)):null!==f.envMap?f.envMap.mapping instanceof THREE.SphericalReflectionMapping?(Ht.copy(c.vertexNormalsModel[n]).applyMatrix3(bt),V=.5*Ht.x+.5,z=.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[a]).applyMatrix3(bt),B=.5*Ht.x+.5,k=.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[l]).applyMatrix3(bt),N=.5*Ht.x+.5,O=.5*Ht.y+.5,u(C,A,L,P,F,D,V,z,B,k,N,O,f.envMap)):f.envMap.mapping instanceof THREE.SphericalRefractionMapping&&(Ht.copy(c.vertexNormalsModel[n]).applyMatrix3(bt),V=-.5*Ht.x+.5,z=-.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[a]).applyMatrix3(bt),B=-.5*Ht.x+.5,k=-.5*Ht.y+.5,Ht.copy(c.vertexNormalsModel[l]).applyMatrix3(bt),N=-.5*Ht.x+.5,O=-.5*Ht.y+.5,u(C,A,L,P,F,D,V,z,B,k,N,O,f.envMap)):(ct.copy(f.color),f.vertexColors===THREE.FaceColors&&ct.multiply(c.color),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshDepthMaterial?(ct.r=ct.g=ct.b=1-R(t.positionScreen.z*t.positionScreen.w,_.near,_.far),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):f instanceof THREE.MeshNormalMaterial?(Ht.copy(c.normalModel).applyMatrix3(bt),ct.setRGB(Ht.x,Ht.y,Ht.z).multiplyScalar(.5).addScalar(.5),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct)):(ct.setRGB(1,1,1),f.wireframe===!0?s(ct,f.wireframeLinewidth,f.wireframeLinecap,f.wireframeLinejoin):h(ct))}function o(t,e,r,i,n,a){$.beginPath(),$.moveTo(t,e),$.lineTo(r,i),$.lineTo(n,a),$.closePath()}function s(t,e,r,i){d(e),m(r),v(i),g(t.getStyle()),$.stroke(),vt.expandByScalar(2*e)}function h(t){T(t.getStyle()),$.fill()}function l(t){c(t.target)}function c(t){if(!(t instanceof THREE.CompressedTexture)){var e=t.wrapS===THREE.RepeatWrapping,r=t.wrapT===THREE.RepeatWrapping,i=t.image,n=document.createElement("canvas")
n.width=i.width,n.height=i.height
var a=n.getContext("2d")
a.setTransform(1,0,0,-1,0,i.height),a.drawImage(i,0,0),pt[t.id]=$.createPattern(n,e===!0&&r===!0?"repeat":e===!0&&r===!1?"repeat-x":e===!1&&r===!0?"repeat-y":"no-repeat")}}function u(t,e,r,i,n,a,o,s,h,u,f,E,p){if(!(p instanceof THREE.DataTexture)){p.hasEventListener("update",l)===!1&&(void 0!==p.image&&p.image.width>0&&c(p),p.addEventListener("update",l))
var d=pt[p.id]
if(void 0===d)return T("rgba(0,0,0,1)"),void $.fill()
T(d)
var m,v,g,y,R,x,H,b,_=p.offset.x/p.repeat.x,w=p.offset.y/p.repeat.y,M=p.image.width*p.repeat.x,S=p.image.height*p.repeat.y
o=(o+_)*M,s=(s+w)*S,h=(h+_)*M,u=(u+w)*S,f=(f+_)*M,E=(E+w)*S,r-=t,i-=e,n-=t,a-=e,h-=o,u-=s,f-=o,E-=s,H=h*E-f*u,0!==H&&(b=1/H,m=(E*r-u*n)*b,v=(E*i-u*a)*b,g=(h*n-f*r)*b,y=(h*a-f*i)*b,R=t-m*o-g*s,x=e-v*o-y*s,$.save(),$.transform(m,v,g,y,R,x),$.fill(),$.restore())}}function f(t,e,r){var i,n=e.x-t.x,a=e.y-t.y,o=n*n+a*a
0!==o&&(i=r/Math.sqrt(o),n*=i,a*=i,e.x+=n,e.y+=a,t.x-=n,t.y-=a)}function E(t){rt!==t&&($.globalAlpha=t,rt=t)}function p(t){it!==t&&(t===THREE.NormalBlending?$.globalCompositeOperation="source-over":t===THREE.AdditiveBlending?$.globalCompositeOperation="lighter":t===THREE.SubtractiveBlending&&($.globalCompositeOperation="darker"),it=t)}function d(t){ot!==t&&($.lineWidth=t,ot=t)}function m(t){st!==t&&($.lineCap=t,st=t)}function v(t){ht!==t&&($.lineJoin=t,ht=t)}function g(t){nt!==t&&($.strokeStyle=t,nt=t)}function T(t){at!==t&&($.fillStyle=t,at=t)}function y(t){lt.length!==t.length&&($.setLineDash(t),lt=t)}console.log("THREE.CanvasRenderer",THREE.REVISION)
var R=THREE.Math.smoothstep
t=t||{}
var x,H,b,_,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I=this,G=new THREE.Projector,W=void 0!==t.canvas?t.canvas:document.createElement("canvas"),j=W.width,X=W.height,Y=Math.floor(j/2),q=Math.floor(X/2),K=0,Z=0,Q=j,J=X,$=W.getContext("2d",{alpha:t.alpha===!0}),tt=new THREE.Color(0),et=0,rt=1,it=0,nt=null,at=null,ot=null,st=null,ht=null,lt=[],ct=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),ut=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),ft=new THREE.Color,Et=new THREE.Color,pt={},dt=new THREE.Box2,mt=new THREE.Box2,vt=new THREE.Box2,gt=new THREE.Color,Tt=new THREE.Color,yt=new THREE.Color,Rt=new THREE.Vector3,xt=new THREE.Vector3,Ht=new THREE.Vector3,bt=new THREE.Matrix3
void 0===$.setLineDash&&($.setLineDash=function(){}),this.domElement=W,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(t,e,r){j=t*this.devicePixelRatio,X=e*this.devicePixelRatio,W.width=j,W.height=X,Y=Math.floor(j/2),q=Math.floor(X/2),r!==!1&&(W.style.width=t+"px",W.style.height=e+"px"),dt.min.set(-Y,-q),dt.max.set(Y,q),mt.min.set(-Y,-q),mt.max.set(Y,q),rt=1,it=0,nt=null,at=null,ot=null,st=null,ht=null,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){K=t*this.devicePixelRatio,Z=e*this.devicePixelRatio,Q=r*this.devicePixelRatio,J=i*this.devicePixelRatio},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(t,e){tt.set(t),et=void 0!==e?e:1,mt.min.set(-Y,-q),mt.max.set(Y,q)},this.setClearColorHex=function(t,e){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return tt},this.getClearAlpha=function(){return et},this.getMaxAnisotropy=function(){return 0},this.clear=function(){mt.empty()===!1&&(mt.intersect(dt),mt.expandByScalar(2),mt.min.x=mt.min.x+Y,mt.min.y=-mt.min.y+q,mt.max.x=mt.max.x+Y,mt.max.y=-mt.max.y+q,et<1&&$.clearRect(0|mt.min.x,0|mt.min.y,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0),et>0&&(p(THREE.NormalBlending),E(1),T("rgba("+Math.floor(255*tt.r)+","+Math.floor(255*tt.g)+","+Math.floor(255*tt.b)+","+et+")"),$.fillRect(0|mt.min.x,0|mt.min.y,mt.max.x-mt.min.x|0,mt.max.y-mt.min.y|0)),mt.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(t,r){if(r instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")
this.autoClear===!0&&this.clear(),I.info.render.vertices=0,I.info.render.faces=0,$.setTransform(Q/j,0,0,-J/X,K,X-Z),$.translate(Y,q),x=G.projectScene(t,r,this.sortObjects,this.sortElements),H=x.elements,b=x.lights,_=r,bt.getNormalMatrix(r.matrixWorldInverse),e()
for(var o=0,s=H.length;o<s;o++){var h=H[o],l=h.material
if(void 0!==l&&0!==l.opacity){if(vt.makeEmpty(),h instanceof THREE.RenderableSprite)w=h,w.x*=Y,w.y*=q,i(w,h,l)
else if(h instanceof THREE.RenderableLine)w=h.v1,M=h.v2,w.positionScreen.x*=Y,w.positionScreen.y*=q,M.positionScreen.x*=Y,M.positionScreen.y*=q,vt.setFromPoints([w.positionScreen,M.positionScreen]),dt.isIntersectionBox(vt)===!0&&n(w,M,h,l)
else if(h instanceof THREE.RenderableFace){if(w=h.v1,M=h.v2,S=h.v3,w.positionScreen.z<-1||w.positionScreen.z>1)continue
if(M.positionScreen.z<-1||M.positionScreen.z>1)continue
if(S.positionScreen.z<-1||S.positionScreen.z>1)continue
w.positionScreen.x*=Y,w.positionScreen.y*=q,M.positionScreen.x*=Y,M.positionScreen.y*=q,S.positionScreen.x*=Y,S.positionScreen.y*=q,l.overdraw>0&&(f(w.positionScreen,M.positionScreen,l.overdraw),f(M.positionScreen,S.positionScreen,l.overdraw),f(S.positionScreen,w.positionScreen,l.overdraw)),vt.setFromPoints([w.positionScreen,M.positionScreen,S.positionScreen]),dt.isIntersectionBox(vt)===!0&&a(w,M,S,0,1,2,h,l)}mt.union(vt)}}$.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={},THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( gl_FragColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\tvec3 dirVector = normalize( lDirection.xyz );\n\n\tfloat dotProduct = dot( transformedNormal, dirVector );\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t#endif\n\n\t#endif\n\n\t#ifdef WRAP_AROUND\n\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n\t\t#endif\n\n\t#endif\n\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n\t#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\tfloat lDistance = 1.0;\n\t\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\t\tlVector = normalize( lVector );\n\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n\t\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n\t\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n\n#endif",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.default_vertex="vec4 mvPosition;\n\n#ifdef USE_SKINNING\n\n\tmvPosition = modelViewMatrix * skinned;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\n\n\tmvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\t#ifdef USE_MORPHNORMALS\n\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n\t#else\n\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef DOUBLE_SIDED\n\n\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tvec3 pointDiffuse = vec3( 0.0 );\n\tvec3 pointSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( pointLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\n\n\t\t\t\t// specular\n\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tvec3 spotDiffuse = vec3( 0.0 );\n\tvec3 spotSpecular = vec3( 0.0 );\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n\t\tfloat lDistance = 1.0;\n\t\tif ( spotLightDistance[ i ] > 0.0 )\n\t\t\tlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\n\n\t\tlVector = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n\t\t\t\t\t// diffuse\n\n\t\t\tfloat dotProduct = dot( normal, lVector );\n\n\t\t\t#ifdef WRAP_AROUND\n\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n\t\t\t#else\n\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t\t#endif\n\n\t\t\tspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\n\n\t\t\t\t\t// specular\n\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tvec3 dirDiffuse = vec3( 0.0 );\n\tvec3 dirSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\n\t\tvec3 dirVector = normalize( lDirection.xyz );\n\n\t\t\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, dirVector );\n\n\t\t#ifdef WRAP_AROUND\n\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n\t\t#else\n\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n\n\t\t#endif\n\n\t\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n\n\t\t// specular\n\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n\t\t/*\n\t\t// fresnel term from skin shader\n\t\tconst float F0 = 0.128;\n\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\n\t\tfloat exponential = pow( base, 5.0 );\n\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\n\t\t*/\n\n\t\t/*\n\t\t// fresnel term from fresnel shader\n\t\tconst float mFresnelBias = 0.08;\n\t\tconst float mFresnelScale = 0.3;\n\t\tconst float mFresnelPower = 5.0;\n\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n\t\t*/\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tvec3 hemiDiffuse = vec3( 0.0 );\n\tvec3 hemiSpecular = vec3( 0.0 );\n\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\n\t\tvec3 lVector = normalize( lDirection.xyz );\n\n\t\t// diffuse\n\n\t\tfloat dotProduct = dot( normal, lVector );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\themiDiffuse += diffuse * hemiColor;\n\n\t\t// specular (sky light)\n\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n\t\t// specular (ground light)\n\n\t\tvec3 lVectorGround = -lVector;\n\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\n\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n\t}\n\n#endif\n\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n\n#if MAX_DIR_LIGHTS > 0\n\n\ttotalDiffuse += dirDiffuse;\n\ttotalSpecular += dirSpecular;\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\ttotalDiffuse += hemiDiffuse;\n\ttotalSpecular += hemiSpecular;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\ttotalDiffuse += pointDiffuse;\n\ttotalSpecular += pointSpecular;\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\ttotalDiffuse += spotDiffuse;\n\ttotalSpecular += spotSpecular;\n\n#endif\n\n#ifdef METAL\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n\n#else\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tvec3 morphedNormal = vec3( 0.0 );\n\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n\tmorphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\tuniform samplerCube envMap;\n\tuniform float flipEnvMap;\n\tuniform int combine;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tuniform bool useRefract;\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\t\t\t// Per-Pixel Tangent Space Normal Mapping\n\t\t\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tvarying vec2 vUv2;\n\tuniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\t#ifdef GAMMA_INPUT\n\n\t\ttexelColor.xyz *= texelColor.xyz;\n\n\t#endif\n\n\tgl_FragColor = gl_FragColor * texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tgl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\t#ifdef GAMMA_INPUT\n\n\t\tvColor = color * color;\n\n\t#else\n\n\t\tvColor = color;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\t#ifdef USE_MORPHTARGETS\n\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n\t#else\n\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\tuniform bool useRefract;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="#ifdef GAMMA_OUTPUT\n\n\tgl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n\n#endif",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\n\nuniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\tvec3 reflectVec;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\t// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\n\t\t// Transforming Normal Vectors with the Inverse Transformation\n\n\t\tvec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );\n\n\t\tif ( useRefract ) {\n\n\t\t\treflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t} else { \n\n\t\t\treflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t}\n\n\t#else\n\n\t\treflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\t\tvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#else\n\n\t\tvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#endif\n\n\t#ifdef GAMMA_INPUT\n\n\t\tcubeColor.xyz *= cubeColor.xyz;\n\n\t#endif\n\n\tif ( combine == 1 ) {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n\n\t} else if ( combine == 2 ) {\n\n\t\tgl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n\n\t} else {\n\n\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n\n\t}\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tconst float LOG2 = 1.442695;\n\t\tfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\n\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\tgl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\t\t\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n\t\t\t//\thttp://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n\t\t\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\t\t// normalized\n\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif",THREE.ShaderChunk.defaultnormal_vertex="vec3 objectNormal;\n\n#ifdef USE_SKINNING\n\n\tobjectNormal = skinnedNormal.xyz;\n\n#endif\n\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\n\n\tobjectNormal = morphedNormal;\n\n#endif\n\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\n\n\tobjectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n\tuniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\tgl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tgl_FragColor = gl_FragColor * vec4( vColor, 1.0 );\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\tvec3 morphed = vec3( 0.0 );\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n\tmorphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\n\n\tvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\n\tworldNormal = normalize( worldNormal );\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tif ( useRefract ) {\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t} else {\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t}\n\n#endif",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\t#ifdef SHADOWMAP_DEBUG\n\n\t\tvec3 frustumColors[3];\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n\t#endif\n\n\t#ifdef SHADOWMAP_CASCADE\n\n\t\tint inFrustumCount = 0;\n\n\t#endif\n\n\tfloat fDepth;\n\tvec3 shadowColor = vec3( 1.0 );\n\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\n\t\t\t\t// if ( all( something, something ) ) using this instead\n\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\t\t// don't shadow pixels outside of light frustum\n\t\t\t\t// use just first frustum (for cascades)\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\n\n\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\tinFrustumCount += int( inFrustum );\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n\t\t#else\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t#endif\n\n\t\tbool frustumTest = all( frustumTestVec );\n\n\t\tif ( frustumTest ) {\n\n\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t/*\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n\t\t\t\t\t\t// must enroll loop manually\n\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\tshadow += 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tshadow /= 9.0;\n\n\t\t*/\n\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\t\t\t\t// Percentage-close filtering\n\t\t\t\t\t\t// (9 pixel kernel)\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\n\n\t\t\t\tfloat shadow = 0.0;\n\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\n\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\n\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n\t\t\t#else\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\n\t\t// spot with multiple shadows is darker\n\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n\t\t// spot with multiple shadows has the same color as single shadow spot\n\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n\t\t\t#endif\n\n\t\t}\n\n\n\t\t#ifdef SHADOWMAP_DEBUG\n\n\t\t\t#ifdef SHADOWMAP_CASCADE\n\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#else\n\n\t\t\t\tif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n\n\t\t\t#endif\n\n\t\t#endif\n\n\t}\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\tshadowColor *= shadowColor;\n\n\t#endif\n\n\tgl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n\n#endif\n",
THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#endif\n\n\t#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n\t#endif\n\n\t#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\n\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n\t#endif\n\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\t#extension GL_EXT_frag_depth : enable\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tgl_FragColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(t){var e,r,i,n={}
for(e=0;e<t.length;e++){i=this.clone(t[e])
for(r in i)n[r]=i[r]}return n},clone:function(t){var e,r,i,n={}
for(e in t){n[e]={}
for(r in t[e])i=t[e][r],i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?n[e][r]=i.clone():i instanceof Array?n[e][r]=i.slice():n[e][r]=i}return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\tgl_FragColor.xyz *= vLightFront;","\t\telse","\t\t\tgl_FragColor.xyz *= vLightBack;","\t#else","\t\tgl_FragColor.xyz *= vLightFront;","\t#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\tvNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( vec3( 1.0 ), opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );","\t#else","\t\tgl_PointSize = size;","\t#endif","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tgl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},diffuse:{type:"c",value:new THREE.Color(16777215)},specular:{type:"c",value:new THREE.Color(1118481)},ambient:{type:"c",value:new THREE.Color(16777215)},shininess:{type:"f",value:30},opacity:{type:"f",value:1},useRefract:{type:"i",value:0},refractionRatio:{type:"f",value:.98},reflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float refractionRatio;","uniform float reflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","\tuniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\tgl_FragColor = vec4( vec3( 1.0 ), opacity );","\tvec3 specularTex = vec3( 1.0 );","\tvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","\tnormalTex.xy *= uNormalScale;","\tnormalTex = normalize( normalTex );","\tif( enableDiffuse ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 texelColor = texture2D( tDiffuse, vUv );","\t\t\ttexelColor.xyz *= texelColor.xyz;","\t\t\tgl_FragColor = gl_FragColor * texelColor;","\t\t#else","\t\t\tgl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","\t\t#endif","\t}","\tif( enableAO ) {","\t\t#ifdef GAMMA_INPUT","\t\t\tvec4 aoColor = texture2D( tAO, vUv );","\t\t\taoColor.xyz *= aoColor.xyz;","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","\t\t#else","\t\t\tgl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","\t\t#endif","\t}",THREE.ShaderChunk.alphatest_fragment,"\tif( enableSpecular )","\t\tspecularTex = texture2D( tSpecular, vUv ).xyz;","\tmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","\tvec3 finalNormal = tsb * normalTex;","\t#ifdef FLIP_SIDED","\t\tfinalNormal = -finalNormal;","\t#endif","\tvec3 normal = normalize( finalNormal );","\tvec3 viewPosition = normalize( vViewPosition );","\t#if MAX_POINT_LIGHTS > 0","\t\tvec3 pointDiffuse = vec3( 0.0 );","\t\tvec3 pointSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","\t\t\tvec3 pointVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat pointDistance = 1.0;","\t\t\tif ( pointLightDistance[ i ] > 0.0 )","\t\t\t\tpointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","\t\t\tpointVector = normalize( pointVector );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","\t\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","\t\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","\t\t\t#endif","\t\t\tpointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;","\t\t\tvec3 pointHalfVector = normalize( pointVector + viewPosition );","\t\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","\t\t\tfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( pointVector, pointHalfVector ), 0.0 ), 5.0 );","\t\t\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","\t\t}","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\tvec3 spotDiffuse = vec3( 0.0 );","\t\tvec3 spotSpecular = vec3( 0.0 );","\t\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","\t\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","\t\t\tvec3 spotVector = lPosition.xyz + vViewPosition.xyz;","\t\t\tfloat spotDistance = 1.0;","\t\t\tif ( spotLightDistance[ i ] > 0.0 )","\t\t\t\tspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","\t\t\tspotVector = normalize( spotVector );","\t\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","\t\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {","\t\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );","\t\t\t\t#ifdef WRAP_AROUND","\t\t\t\t\tfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","\t\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","\t\t\t\t#else","\t\t\t\t\tfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","\t\t\t\t#endif","\t\t\t\tspotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;","\t\t\t\tvec3 spotHalfVector = normalize( spotVector + viewPosition );","\t\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","\t\t\t\tfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );","\t\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( spotVector, spotHalfVector ), 0.0 ), 5.0 );","\t\t\t\tspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","\t\t\t}","\t\t}","\t#endif","\t#if MAX_DIR_LIGHTS > 0","\t\tvec3 dirDiffuse = vec3( 0.0 );","\t\tvec3 dirSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","\t\t\tvec3 dirVector = normalize( lDirection.xyz );","\t\t\t#ifdef WRAP_AROUND","\t\t\t\tfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","\t\t\t\tfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","\t\t\t\tvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","\t\t\t#else","\t\t\t\tfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","\t\t\t#endif","\t\t\tdirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;","\t\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );","\t\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","\t\t\tfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );","\t\t\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","\t\t}","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\tvec3 hemiDiffuse = vec3( 0.0 );","\t\tvec3 hemiSpecular = vec3( 0.0 );","\t\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","\t\t\tvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","\t\t\tvec3 lVector = normalize( lDirection.xyz );","\t\t\tfloat dotProduct = dot( normal, lVector );","\t\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","\t\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","\t\t\themiDiffuse += diffuse * hemiColor;","\t\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","\t\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","\t\t\tfloat hemiSpecularWeightSky = specularTex.r * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );","\t\t\tvec3 lVectorGround = -lVector;","\t\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","\t\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","\t\t\tfloat hemiSpecularWeightGround = specularTex.r * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );","\t\t\tfloat dotProductGround = dot( normal, lVectorGround );","\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;","\t\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );","\t\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );","\t\t\themiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","\t\t}","\t#endif","\tvec3 totalDiffuse = vec3( 0.0 );","\tvec3 totalSpecular = vec3( 0.0 );","\t#if MAX_DIR_LIGHTS > 0","\t\ttotalDiffuse += dirDiffuse;","\t\ttotalSpecular += dirSpecular;","\t#endif","\t#if MAX_HEMI_LIGHTS > 0","\t\ttotalDiffuse += hemiDiffuse;","\t\ttotalSpecular += hemiSpecular;","\t#endif","\t#if MAX_POINT_LIGHTS > 0","\t\ttotalDiffuse += pointDiffuse;","\t\ttotalSpecular += pointSpecular;","\t#endif","\t#if MAX_SPOT_LIGHTS > 0","\t\ttotalDiffuse += spotDiffuse;","\t\ttotalSpecular += spotSpecular;","\t#endif","\t#ifdef METAL","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );","\t#else","\t\tgl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","\t#endif","\tif ( enableReflection ) {","\t\tvec3 vReflect;","\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","\t\tif ( useRefract ) {","\t\t\tvReflect = refract( cameraToVertex, normal, refractionRatio );","\t\t} else {","\t\t\tvReflect = reflect( cameraToVertex, normal );","\t\t}","\t\tvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","\t\t#ifdef GAMMA_INPUT","\t\t\tcubeColor.xyz *= cubeColor.xyz;","\t\t#endif","\t\tgl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );","\t}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","\tuniform sampler2D tDisplacement;","\tuniform float uDisplacementScale;","\tuniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"\t#ifdef USE_SKINNING","\t\tvNormal = normalize( normalMatrix * skinnedNormal.xyz );","\t\tvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","\t\tvTangent = normalize( normalMatrix * skinnedTangent.xyz );","\t#else","\t\tvNormal = normalize( normalMatrix * normal );","\t\tvTangent = normalize( normalMatrix * tangent.xyz );","\t#endif","\tvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","\tvUv = uv * uRepeat + uOffset;","\tvec3 displacedPosition;","\t#ifdef VERTEX_TEXTURES","\t\tif ( enableDisplacement ) {","\t\t\tvec3 dv = texture2D( tDisplacement, uv ).xyz;","\t\t\tfloat df = uDisplacementScale * dv.x + uDisplacementBias;","\t\t\tdisplacedPosition = position + normalize( normal ) * df;","\t\t} else {","\t\t\t#ifdef USE_SKINNING","\t\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );","\t\t\t\tvec4 skinned = vec4( 0.0 );","\t\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;","\t\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;","\t\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;","\t\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;","\t\t\t\tskinned  = bindMatrixInverse * skinned;","\t\t\t\tdisplacedPosition = skinned.xyz;","\t\t\t#else","\t\t\t\tdisplacedPosition = position;","\t\t\t#endif","\t\t}","\t#else","\t\t#ifdef USE_SKINNING","\t\t\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );","\t\t\tvec4 skinned = vec4( 0.0 );","\t\t\tskinned += boneMatX * skinVertex * skinWeight.x;","\t\t\tskinned += boneMatY * skinVertex * skinWeight.y;","\t\t\tskinned += boneMatZ * skinVertex * skinWeight.z;","\t\t\tskinned += boneMatW * skinVertex * skinWeight.w;","\t\t\tskinned  = bindMatrixInverse * skinned;","\t\t\tdisplacedPosition = skinned.xyz;","\t\t#else","\t\t\tdisplacedPosition = position;","\t\t#endif","\t#endif","\tvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","\tvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"\tvWorldPosition = worldPosition.xyz;","\tvViewPosition = -mvPosition.xyz;","\t#ifdef USE_SHADOWMAP","\t\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {","\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","\t\t}","\t#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );","\tvWorldPosition = worldPosition.xyz;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")}},THREE.WebGLRenderer=function(t){function e(t){t.__webglVertexBuffer=Vt.createBuffer(),t.__webglColorBuffer=Vt.createBuffer(),Wt.info.memory.geometries++}function r(t){t.__webglVertexBuffer=Vt.createBuffer(),t.__webglColorBuffer=Vt.createBuffer(),t.__webglLineDistanceBuffer=Vt.createBuffer(),Wt.info.memory.geometries++}function i(t){t.__webglVertexBuffer=Vt.createBuffer(),t.__webglNormalBuffer=Vt.createBuffer(),t.__webglTangentBuffer=Vt.createBuffer(),t.__webglColorBuffer=Vt.createBuffer(),t.__webglUVBuffer=Vt.createBuffer(),t.__webglUV2Buffer=Vt.createBuffer(),t.__webglSkinIndicesBuffer=Vt.createBuffer(),t.__webglSkinWeightsBuffer=Vt.createBuffer(),t.__webglFaceBuffer=Vt.createBuffer(),t.__webglLineBuffer=Vt.createBuffer()
var e,r
if(t.numMorphTargets)for(t.__webglMorphTargetsBuffers=[],e=0,r=t.numMorphTargets;e<r;e++)t.__webglMorphTargetsBuffers.push(Vt.createBuffer())
if(t.numMorphNormals)for(t.__webglMorphNormalsBuffers=[],e=0,r=t.numMorphNormals;e<r;e++)t.__webglMorphNormalsBuffers.push(Vt.createBuffer())
Wt.info.memory.geometries++}function n(t,e){var r=t.vertices.length,i=e.material
if(i.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[])
for(var n in i.attributes){var a=i.attributes[n]
if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0
var o=1
"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(r*o),a.buffer=Vt.createBuffer(),a.buffer.belongsToAttribute=n,a.needsUpdate=!0}t.__webglCustomAttributesList.push(a)}}}function a(t,e){var r=t.vertices.length
t.__vertexArray=new Float32Array(3*r),t.__colorArray=new Float32Array(3*r),t.__sortArray=[],t.__webglParticleCount=r,n(t,e)}function o(t,e){var r=t.vertices.length
t.__vertexArray=new Float32Array(3*r),t.__colorArray=new Float32Array(3*r),t.__lineDistanceArray=new Float32Array(1*r),t.__webglLineCount=r,n(t,e)}function s(t,e){var r=e.geometry,i=t.faces3,n=3*i.length,a=1*i.length,o=3*i.length,s=h(e,t),l=f(s),E=c(s),p=u(s)
t.__vertexArray=new Float32Array(3*n),E&&(t.__normalArray=new Float32Array(3*n)),r.hasTangents&&(t.__tangentArray=new Float32Array(4*n)),p&&(t.__colorArray=new Float32Array(3*n)),l&&(r.faceVertexUvs.length>0&&(t.__uvArray=new Float32Array(2*n)),r.faceVertexUvs.length>1&&(t.__uv2Array=new Float32Array(2*n))),e.geometry.skinWeights.length&&e.geometry.skinIndices.length&&(t.__skinIndexArray=new Float32Array(4*n),t.__skinWeightArray=new Float32Array(4*n))
var d=null!==It&&a>21845?Uint32Array:Uint16Array
t.__typeArray=d,t.__faceArray=new d(3*a),t.__lineArray=new d(2*o)
var m,v
if(t.numMorphTargets)for(t.__morphTargetsArrays=[],m=0,v=t.numMorphTargets;m<v;m++)t.__morphTargetsArrays.push(new Float32Array(3*n))
if(t.numMorphNormals)for(t.__morphNormalsArrays=[],m=0,v=t.numMorphNormals;m<v;m++)t.__morphNormalsArrays.push(new Float32Array(3*n))
if(t.__webglFaceCount=3*a,t.__webglLineCount=2*o,s.attributes){void 0===t.__webglCustomAttributesList&&(t.__webglCustomAttributesList=[])
for(var g in s.attributes){var T=s.attributes[g],y={}
for(var R in T)y[R]=T[R]
if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0
var x=1
"v2"===y.type?x=2:"v3"===y.type?x=3:"v4"===y.type?x=4:"c"===y.type&&(x=3),y.size=x,y.array=new Float32Array(n*x),y.buffer=Vt.createBuffer(),y.buffer.belongsToAttribute=g,T.needsUpdate=!0,y.__original=T}t.__webglCustomAttributesList.push(y)}}t.__inittedArrays=!0}function h(t,e){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[e.materialIndex]:t.material}function l(t){return t&&void 0!==t.shading&&t.shading===THREE.SmoothShading}function c(t){return!(t instanceof THREE.MeshBasicMaterial&&!t.envMap||t instanceof THREE.MeshDepthMaterial)&&(l(t)?THREE.SmoothShading:THREE.FlatShading)}function u(t){return!!t.vertexColors&&t.vertexColors}function f(t){return!!(t.map||t.lightMap||t.bumpMap||t.normalMap||t.specularMap||t.alphaMap||t instanceof THREE.ShaderMaterial)}function E(t){for(var e in t.attributes){var r="index"===e?Vt.ELEMENT_ARRAY_BUFFER:Vt.ARRAY_BUFFER,i=t.attributes[e]
i.buffer=Vt.createBuffer(),Vt.bindBuffer(r,i.buffer),Vt.bufferData(r,i.array,Vt.STATIC_DRAW)}}function p(t,e,r){var i,n,a,o,s,h,l,c,u,f,E,p,d=t.vertices,m=d.length,v=t.colors,g=v.length,T=t.__vertexArray,y=t.__colorArray,R=t.__sortArray,x=t.verticesNeedUpdate,H=(t.elementsNeedUpdate,t.colorsNeedUpdate),b=t.__webglCustomAttributesList
if(r.sortParticles){for(ye.copy(Te),ye.multiply(r.matrixWorld),i=0;i<m;i++)a=d[i],Re.copy(a),Re.applyProjection(ye),R[i]=[Re.z,i]
for(R.sort(_),i=0;i<m;i++)a=d[R[i][1]],o=3*i,T[o]=a.x,T[o+1]=a.y,T[o+2]=a.z
for(n=0;n<g;n++)o=3*n,h=v[R[n][1]],y[o]=h.r,y[o+1]=h.g,y[o+2]=h.b
if(b)for(l=0,c=b.length;l<c;l++)if(p=b[l],void 0===p.boundTo||"vertices"===p.boundTo)if(o=0,f=p.value.length,1===p.size)for(u=0;u<f;u++)s=R[u][1],p.array[u]=p.value[s]
else if(2===p.size)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[o]=E.x,p.array[o+1]=E.y,o+=2
else if(3===p.size)if("c"===p.type)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[o]=E.r,p.array[o+1]=E.g,p.array[o+2]=E.b,o+=3
else for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[o]=E.x,p.array[o+1]=E.y,p.array[o+2]=E.z,o+=3
else if(4===p.size)for(u=0;u<f;u++)s=R[u][1],E=p.value[s],p.array[o]=E.x,p.array[o+1]=E.y,p.array[o+2]=E.z,p.array[o+3]=E.w,o+=4}else{if(x)for(i=0;i<m;i++)a=d[i],o=3*i,T[o]=a.x,T[o+1]=a.y,T[o+2]=a.z
if(H)for(n=0;n<g;n++)h=v[n],o=3*n,y[o]=h.r,y[o+1]=h.g,y[o+2]=h.b
if(b)for(l=0,c=b.length;l<c;l++)if(p=b[l],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo))if(f=p.value.length,o=0,1===p.size)for(u=0;u<f;u++)p.array[u]=p.value[u]
else if(2===p.size)for(u=0;u<f;u++)E=p.value[u],p.array[o]=E.x,p.array[o+1]=E.y,o+=2
else if(3===p.size)if("c"===p.type)for(u=0;u<f;u++)E=p.value[u],p.array[o]=E.r,p.array[o+1]=E.g,p.array[o+2]=E.b,o+=3
else for(u=0;u<f;u++)E=p.value[u],p.array[o]=E.x,p.array[o+1]=E.y,p.array[o+2]=E.z,o+=3
else if(4===p.size)for(u=0;u<f;u++)E=p.value[u],p.array[o]=E.x,p.array[o+1]=E.y,p.array[o+2]=E.z,p.array[o+3]=E.w,o+=4}if((x||r.sortParticles)&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglVertexBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,T,e)),(H||r.sortParticles)&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglColorBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,y,e)),b)for(l=0,c=b.length;l<c;l++)p=b[l],(p.needsUpdate||r.sortParticles)&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,p.buffer),Vt.bufferData(Vt.ARRAY_BUFFER,p.array,e))}function d(t,e){var r,i,n,a,o,s,h,l,c,u,f,E,p=t.vertices,d=t.colors,m=t.lineDistances,v=p.length,g=d.length,T=m.length,y=t.__vertexArray,R=t.__colorArray,x=t.__lineDistanceArray,H=t.verticesNeedUpdate,b=t.colorsNeedUpdate,_=t.lineDistancesNeedUpdate,w=t.__webglCustomAttributesList
if(H){for(r=0;r<v;r++)a=p[r],o=3*r,y[o]=a.x,y[o+1]=a.y,y[o+2]=a.z
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglVertexBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,y,e)}if(b){for(i=0;i<g;i++)s=d[i],o=3*i,R[o]=s.r,R[o+1]=s.g,R[o+2]=s.b
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglColorBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,R,e)}if(_){for(n=0;n<T;n++)x[n]=m[n]
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglLineDistanceBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,x,e)}if(w)for(h=0,l=w.length;h<l;h++)if(E=w[h],E.needsUpdate&&(void 0===E.boundTo||"vertices"===E.boundTo)){if(o=0,u=E.value.length,1===E.size)for(c=0;c<u;c++)E.array[c]=E.value[c]
else if(2===E.size)for(c=0;c<u;c++)f=E.value[c],E.array[o]=f.x,E.array[o+1]=f.y,o+=2
else if(3===E.size)if("c"===E.type)for(c=0;c<u;c++)f=E.value[c],E.array[o]=f.r,E.array[o+1]=f.g,E.array[o+2]=f.b,o+=3
else for(c=0;c<u;c++)f=E.value[c],E.array[o]=f.x,E.array[o+1]=f.y,E.array[o+2]=f.z,o+=3
else if(4===E.size)for(c=0;c<u;c++)f=E.value[c],E.array[o]=f.x,E.array[o+1]=f.y,E.array[o+2]=f.z,E.array[o+3]=f.w,o+=4
Vt.bindBuffer(Vt.ARRAY_BUFFER,E.buffer),Vt.bufferData(Vt.ARRAY_BUFFER,E.array,e)}}function m(t,e,r,i,n){if(t.__inittedArrays){var a,o,s,h,l,E,p,d,m,v,g,T,y,R,x,H,b,_,w,M,S,C,A,L,P,F,D,U,V,z,B,k,N,O,I,G,W,j,X,Y,q,K,Z=c(n),Q=u(n),J=f(n),$=Z===THREE.SmoothShading,tt=0,et=0,rt=0,it=0,nt=0,at=0,ot=0,st=0,ht=0,lt=0,ct=0,ut=0,ft=0,Et=t.__vertexArray,pt=t.__uvArray,dt=t.__uv2Array,mt=t.__normalArray,vt=t.__tangentArray,gt=t.__colorArray,Tt=t.__skinIndexArray,yt=t.__skinWeightArray,Rt=t.__morphTargetsArrays,xt=t.__morphNormalsArrays,Ht=t.__webglCustomAttributesList,bt=t.__faceArray,_t=t.__lineArray,wt=e.geometry,Mt=wt.verticesNeedUpdate,St=wt.elementsNeedUpdate,Ct=wt.uvsNeedUpdate,At=wt.normalsNeedUpdate,Lt=wt.tangentsNeedUpdate,Pt=wt.colorsNeedUpdate,Ft=wt.morphTargetsNeedUpdate,Dt=wt.vertices,Ut=t.faces3,zt=wt.faces,Bt=wt.faceVertexUvs[0],kt=wt.faceVertexUvs[1],Nt=(wt.colors,wt.skinIndices),Ot=wt.skinWeights,It=wt.morphTargets,Gt=wt.morphNormals
if(Mt){for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],T=Dt[h.a],y=Dt[h.b],R=Dt[h.c],Et[et]=T.x,Et[et+1]=T.y,Et[et+2]=T.z,Et[et+3]=y.x,Et[et+4]=y.y,Et[et+5]=y.z,Et[et+6]=R.x,Et[et+7]=R.y,Et[et+8]=R.z,et+=9
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglVertexBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,Et,r)}if(Ft)for(I=0,G=It.length;I<G;I++){for(ct=0,a=0,o=Ut.length;a<o;a++)X=Ut[a],h=zt[X],T=It[I].vertices[h.a],y=It[I].vertices[h.b],R=It[I].vertices[h.c],W=Rt[I],W[ct]=T.x,W[ct+1]=T.y,W[ct+2]=T.z,W[ct+3]=y.x,W[ct+4]=y.y,W[ct+5]=y.z,W[ct+6]=R.x,W[ct+7]=R.y,W[ct+8]=R.z,n.morphNormals&&($?(Y=Gt[I].vertexNormals[X],_=Y.a,w=Y.b,M=Y.c):(_=Gt[I].faceNormals[X],w=_,M=_),j=xt[I],j[ct]=_.x,j[ct+1]=_.y,j[ct+2]=_.z,j[ct+3]=w.x,j[ct+4]=w.y,j[ct+5]=w.z,j[ct+6]=M.x,j[ct+7]=M.y,j[ct+8]=M.z),ct+=9
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[I]),Vt.bufferData(Vt.ARRAY_BUFFER,Rt[I],r),n.morphNormals&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[I]),Vt.bufferData(Vt.ARRAY_BUFFER,xt[I],r))}if(Ot.length){for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],L=Ot[h.a],P=Ot[h.b],F=Ot[h.c],yt[lt]=L.x,yt[lt+1]=L.y,yt[lt+2]=L.z,yt[lt+3]=L.w,yt[lt+4]=P.x,yt[lt+5]=P.y,yt[lt+6]=P.z,yt[lt+7]=P.w,yt[lt+8]=F.x,yt[lt+9]=F.y,yt[lt+10]=F.z,yt[lt+11]=F.w,D=Nt[h.a],U=Nt[h.b],V=Nt[h.c],Tt[lt]=D.x,Tt[lt+1]=D.y,Tt[lt+2]=D.z,Tt[lt+3]=D.w,Tt[lt+4]=U.x,Tt[lt+5]=U.y,Tt[lt+6]=U.z,Tt[lt+7]=U.w,Tt[lt+8]=V.x,Tt[lt+9]=V.y,Tt[lt+10]=V.z,Tt[lt+11]=V.w,lt+=12
lt>0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglSkinIndicesBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,Tt,r),Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglSkinWeightsBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,yt,r))}if(Pt&&Q){for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],p=h.vertexColors,d=h.color,3===p.length&&Q===THREE.VertexColors?(S=p[0],C=p[1],A=p[2]):(S=d,C=d,A=d),gt[ht]=S.r,gt[ht+1]=S.g,gt[ht+2]=S.b,gt[ht+3]=C.r,gt[ht+4]=C.g,gt[ht+5]=C.b,gt[ht+6]=A.r,gt[ht+7]=A.g,gt[ht+8]=A.b,ht+=9
ht>0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglColorBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,gt,r))}if(Lt&&wt.hasTangents){for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],m=h.vertexTangents,x=m[0],H=m[1],b=m[2],vt[ot]=x.x,vt[ot+1]=x.y,vt[ot+2]=x.z,vt[ot+3]=x.w,vt[ot+4]=H.x,vt[ot+5]=H.y,vt[ot+6]=H.z,vt[ot+7]=H.w,vt[ot+8]=b.x,vt[ot+9]=b.y,vt[ot+10]=b.z,vt[ot+11]=b.w,ot+=12
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglTangentBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,vt,r)}if(At&&Z){for(a=0,o=Ut.length;a<o;a++)if(h=zt[Ut[a]],l=h.vertexNormals,E=h.normal,3===l.length&&$)for(z=0;z<3;z++)k=l[z],mt[at]=k.x,mt[at+1]=k.y,mt[at+2]=k.z,at+=3
else for(z=0;z<3;z++)mt[at]=E.x,mt[at+1]=E.y,mt[at+2]=E.z,at+=3
Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglNormalBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,mt,r)}if(Ct&&Bt&&J){for(a=0,o=Ut.length;a<o;a++)if(s=Ut[a],v=Bt[s],void 0!==v)for(z=0;z<3;z++)N=v[z],pt[rt]=N.x,pt[rt+1]=N.y,rt+=2
rt>0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglUVBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,pt,r))}if(Ct&&kt&&J){for(a=0,o=Ut.length;a<o;a++)if(s=Ut[a],g=kt[s],void 0!==g)for(z=0;z<3;z++)O=g[z],dt[it]=O.x,dt[it+1]=O.y,it+=2
it>0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglUV2Buffer),Vt.bufferData(Vt.ARRAY_BUFFER,dt,r))}if(St){for(a=0,o=Ut.length;a<o;a++)bt[nt]=tt,bt[nt+1]=tt+1,bt[nt+2]=tt+2,nt+=3,_t[st]=tt,_t[st+1]=tt+1,_t[st+2]=tt,_t[st+3]=tt+2,_t[st+4]=tt+1,_t[st+5]=tt+2,st+=6,tt+=3
Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,t.__webglFaceBuffer),Vt.bufferData(Vt.ELEMENT_ARRAY_BUFFER,bt,r),Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,t.__webglLineBuffer),Vt.bufferData(Vt.ELEMENT_ARRAY_BUFFER,_t,r)}if(Ht)for(z=0,B=Ht.length;z<B;z++)if(K=Ht[z],K.__original.needsUpdate){if(ut=0,ft=0,1===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],K.array[ut]=K.value[h.a],K.array[ut+1]=K.value[h.b],K.array[ut+2]=K.value[h.c],ut+=3
else if("faces"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],K.array[ut]=q,K.array[ut+1]=q,K.array[ut+2]=q,ut+=3}else if(2===K.size){if(void 0===K.boundTo||"vertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=y.x,K.array[ut+3]=y.y,K.array[ut+4]=R.x,K.array[ut+5]=R.y,ut+=6
else if("faces"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],T=q,y=q,R=q,K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=y.x,K.array[ut+3]=y.y,K.array[ut+4]=R.x,K.array[ut+5]=R.y,ut+=6}else if(3===K.size){var Wt
if(Wt="c"===K.type?["r","g","b"]:["x","y","z"],void 0===K.boundTo||"vertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T[Wt[0]],K.array[ut+1]=T[Wt[1]],K.array[ut+2]=T[Wt[2]],K.array[ut+3]=y[Wt[0]],K.array[ut+4]=y[Wt[1]],K.array[ut+5]=y[Wt[2]],K.array[ut+6]=R[Wt[0]],K.array[ut+7]=R[Wt[1]],K.array[ut+8]=R[Wt[2]],ut+=9
else if("faces"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],T=q,y=q,R=q,K.array[ut]=T[Wt[0]],K.array[ut+1]=T[Wt[1]],K.array[ut+2]=T[Wt[2]],K.array[ut+3]=y[Wt[0]],K.array[ut+4]=y[Wt[1]],K.array[ut+5]=y[Wt[2]],K.array[ut+6]=R[Wt[0]],K.array[ut+7]=R[Wt[1]],K.array[ut+8]=R[Wt[2]],ut+=9
else if("faceVertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],T=q[0],y=q[1],R=q[2],K.array[ut]=T[Wt[0]],K.array[ut+1]=T[Wt[1]],K.array[ut+2]=T[Wt[2]],K.array[ut+3]=y[Wt[0]],K.array[ut+4]=y[Wt[1]],K.array[ut+5]=y[Wt[2]],K.array[ut+6]=R[Wt[0]],K.array[ut+7]=R[Wt[1]],K.array[ut+8]=R[Wt[2]],ut+=9}else if(4===K.size)if(void 0===K.boundTo||"vertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)h=zt[Ut[a]],T=K.value[h.a],y=K.value[h.b],R=K.value[h.c],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12
else if("faces"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],T=q,y=q,R=q,K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12
else if("faceVertices"===K.boundTo)for(a=0,o=Ut.length;a<o;a++)q=K.value[Ut[a]],T=q[0],y=q[1],R=q[2],K.array[ut]=T.x,K.array[ut+1]=T.y,K.array[ut+2]=T.z,K.array[ut+3]=T.w,K.array[ut+4]=y.x,K.array[ut+5]=y.y,K.array[ut+6]=y.z,K.array[ut+7]=y.w,K.array[ut+8]=R.x,K.array[ut+9]=R.y,K.array[ut+10]=R.z,K.array[ut+11]=R.w,ut+=12
Vt.bindBuffer(Vt.ARRAY_BUFFER,K.buffer),Vt.bufferData(Vt.ARRAY_BUFFER,K.array,r)}i&&(delete t.__inittedArrays,delete t.__colorArray,delete t.__normalArray,delete t.__tangentArray,delete t.__uvArray,delete t.__uv2Array,delete t.__faceArray,delete t.__vertexArray,delete t.__lineArray,delete t.__skinIndexArray,delete t.__skinWeightArray)}}function v(t,e){var r,i,n=t.attributes
for(r in n)i=n[r],i.needsUpdate&&("index"===r?(Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,i.buffer),Vt.bufferData(Vt.ELEMENT_ARRAY_BUFFER,i.array,e)):(Vt.bindBuffer(Vt.ARRAY_BUFFER,i.buffer),Vt.bufferData(Vt.ARRAY_BUFFER,i.array,e)),i.needsUpdate=!1)}function g(t,e,r,i){for(var n in e){var a=e[n],o=r[n]
if(a>=0)if(o){var s=o.itemSize
Vt.bindBuffer(Vt.ARRAY_BUFFER,o.buffer),y(a),Vt.vertexAttribPointer(a,s,Vt.FLOAT,!1,0,i*s*4)}else t.defaultAttributeValues&&(2===t.defaultAttributeValues[n].length?Vt.vertexAttrib2fv(a,t.defaultAttributeValues[n]):3===t.defaultAttributeValues[n].length&&Vt.vertexAttrib3fv(a,t.defaultAttributeValues[n]))}R()}function T(){for(var t=0,e=me.length;t<e;t++)me[t]=0}function y(t){me[t]=1,0===ve[t]&&(Vt.enableVertexAttribArray(t),ve[t]=1)}function R(){for(var t=0,e=ve.length;t<e;t++)ve[t]!==me[t]&&(Vt.disableVertexAttribArray(t),ve[t]=0)}function x(t,e,r){var i=t.program.attributes
if(r.morphTargetBase!==-1&&i.position>=0?(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[r.morphTargetBase]),y(i.position),Vt.vertexAttribPointer(i.position,3,Vt.FLOAT,!1,0,0)):i.position>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglVertexBuffer),y(i.position),Vt.vertexAttribPointer(i.position,3,Vt.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var n=0,a=r.morphTargetForcedOrder,o=r.morphTargetInfluences;n<t.numSupportedMorphTargets&&n<a.length;)i["morphTarget"+n]>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[a[n]]),y(i["morphTarget"+n]),Vt.vertexAttribPointer(i["morphTarget"+n],3,Vt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&t.morphNormals&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[a[n]]),y(i["morphNormal"+n]),Vt.vertexAttribPointer(i["morphNormal"+n],3,Vt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[a[n]],n++
else{var s,h,l=[],o=r.morphTargetInfluences,c=o.length
for(h=0;h<c;h++)s=o[h],s>0&&l.push([s,h])
l.length>t.numSupportedMorphTargets?(l.sort(_),l.length=t.numSupportedMorphTargets):l.length>t.numSupportedMorphNormals?l.sort(_):0===l.length&&l.push([0,0])
for(var u,n=0;n<t.numSupportedMorphTargets;)l[n]?(u=l[n][1],i["morphTarget"+n]>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[u]),y(i["morphTarget"+n]),Vt.vertexAttribPointer(i["morphTarget"+n],3,Vt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&t.morphNormals&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[u]),y(i["morphNormal"+n]),Vt.vertexAttribPointer(i["morphNormal"+n],3,Vt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[u]):r.__webglMorphTargetInfluences[n]=0,n++}null!==t.program.uniforms.morphTargetInfluences&&Vt.uniform1fv(t.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function H(t,e){return t.z!==e.z?e.z-t.z:t.id-e.id}function b(t,e){return t.z!==e.z?t.z-e.z:t.id-e.id}function _(t,e){return e[0]-t[0]}function w(t,e,r){if(e.visible!==!1){var i=t.__webglObjects[e.id]
if(i&&(e.frustumCulled===!1||ge.intersectsObject(e)===!0)){V(t,e)
for(var n=0,a=i.length;n<a;n++){var o=i[n]
L(o),o.render=!0,Wt.sortObjects===!0&&(null!==e.renderDepth?o.z=e.renderDepth:(Re.setFromMatrixPosition(e.matrixWorld),Re.applyProjection(Te),o.z=Re.z))}}for(var n=0,a=e.children.length;n<a;n++)w(t,e.children[n],r)}}function M(t,e,r){if(0!==t.length)for(var i=0,n=t.length;i<n;i++)Xt=null,Zt=null,te=-1,ne=-1,ae=-1,Jt=-1,$t=-1,Kt=-1,qt=-1,He=!0,t[i].render(e,r,pe,de),Xt=null,Zt=null,te=-1,ne=-1,ae=-1,Jt=-1,$t=-1,Kt=-1,qt=-1,He=!0}function S(t,e,r,i,n,a){for(var o,s,h,l,c=t.length-1;c!==-1;c--){if(o=t[c],s=o.object,h=o.buffer,rt(s,e),a)l=a
else{if(l=o.material,!l)continue
n&&Wt.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Wt.setDepthTest(l.depthTest),Wt.setDepthWrite(l.depthWrite),st(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Wt.setMaterialFaces(l),h instanceof THREE.BufferGeometry?Wt.renderBufferDirect(e,r,i,l,h,s):Wt.renderBuffer(e,r,i,l,h,s)}}function C(t,e,r,i,n,a,o){for(var s,h,l,c=0,u=t.length;c<u;c++)if(s=t[c],h=s.object,h.visible){if(o)l=o
else{if(l=s[e],!l)continue
a&&Wt.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),Wt.setDepthTest(l.depthTest),Wt.setDepthWrite(l.depthWrite),st(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Wt.renderImmediateObject(r,i,n,l,h)}}function A(t){var e=t.object,r=e.material
r.transparent?(t.transparent=r,t.opaque=null):(t.opaque=r,t.transparent=null)}function L(t){var e=t.object,r=t.buffer,i=e.geometry,n=e.material
if(n instanceof THREE.MeshFaceMaterial){var a=i instanceof THREE.BufferGeometry?0:r.materialIndex
n=n.materials[a],n.transparent?(t.material=n,Ut.push(t)):(t.material=n,Dt.push(t))}else n&&(n.transparent?(t.material=n,Ut.push(t)):(t.material=n,Dt.push(t)))}function P(t,i){var n,s
if(void 0===t.__webglInit&&(t.__webglInit=!0,t._modelViewMatrix=new THREE.Matrix4,t._normalMatrix=new THREE.Matrix3),n=t.geometry,void 0===n||void 0===n.__webglInit&&(n.__webglInit=!0,n.addEventListener("dispose",ze),n instanceof THREE.BufferGeometry?E(n):t instanceof THREE.Mesh?(void 0!==t.__webglActive&&k(t,i),F(i,t,n)):t instanceof THREE.Line?n.__webglVertexBuffer||(r(n),o(n,t),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0,n.lineDistancesNeedUpdate=!0):t instanceof THREE.PointCloud&&(n.__webglVertexBuffer||(e(n),a(n,t),n.verticesNeedUpdate=!0,n.colorsNeedUpdate=!0))),void 0===t.__webglActive){if(t instanceof THREE.Mesh){if(n=t.geometry,n instanceof THREE.BufferGeometry)D(i.__webglObjects,n,t)
else if(n instanceof THREE.Geometry)for(var h=0,l=n.geometryGroupsList.length;h<l;h++)s=n.geometryGroupsList[h],D(i.__webglObjects,s,t)}else t instanceof THREE.Line||t instanceof THREE.PointCloud?(n=t.geometry,D(i.__webglObjects,n,t)):(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&U(i.__webglObjectsImmediate,t)
t.__webglActive=!0}}function F(t,e,r){var n,a,o=!1
a=e.material,(void 0===r.geometryGroups||r.groupsNeedUpdate)&&(delete t.__webglObjects[e.id],r.makeGroups(a instanceof THREE.MeshFaceMaterial,It?4294967296:65535),r.groupsNeedUpdate=!1)
for(var h=0,l=r.geometryGroupsList.length;h<l;h++)n=r.geometryGroupsList[h],n.__webglVertexBuffer?o=!1:(i(n),s(n,e),r.verticesNeedUpdate=!0,r.morphTargetsNeedUpdate=!0,r.elementsNeedUpdate=!0,r.uvsNeedUpdate=!0,r.normalsNeedUpdate=!0,r.tangentsNeedUpdate=!0,r.colorsNeedUpdate=!0,o=!0),(o||void 0===e.__webglActive)&&D(t.__webglObjects,n,e)
e.__webglActive=!0}function D(t,e,r){var i=r.id
t[i]=t[i]||[],t[i].push({id:i,buffer:e,object:r,material:null,z:0})}function U(t,e){t.push({id:null,object:e,opaque:null,transparent:null,z:0})}function V(t,e){var r,i,n,a=e.geometry
if(a instanceof THREE.BufferGeometry)v(a,Vt.DYNAMIC_DRAW)
else if(e instanceof THREE.Mesh){(a.buffersNeedUpdate||a.groupsNeedUpdate)&&(a instanceof THREE.BufferGeometry?E(a):e instanceof THREE.Mesh&&F(t,e,a))
for(var o=0,l=a.geometryGroupsList.length;o<l;o++)r=a.geometryGroupsList[o],n=h(e,r),(a.buffersNeedUpdate||a.groupsNeedUpdate)&&s(r,e),i=n.attributes&&z(n),(a.verticesNeedUpdate||a.morphTargetsNeedUpdate||a.elementsNeedUpdate||a.uvsNeedUpdate||a.normalsNeedUpdate||a.colorsNeedUpdate||a.tangentsNeedUpdate||i)&&m(r,e,Vt.DYNAMIC_DRAW,!a.dynamic,n)
a.verticesNeedUpdate=!1,a.morphTargetsNeedUpdate=!1,a.elementsNeedUpdate=!1,a.uvsNeedUpdate=!1,a.normalsNeedUpdate=!1,a.colorsNeedUpdate=!1,a.tangentsNeedUpdate=!1,a.buffersNeedUpdate=!1,n.attributes&&B(n)}else e instanceof THREE.Line?(n=h(e,a),i=n.attributes&&z(n),(a.verticesNeedUpdate||a.colorsNeedUpdate||a.lineDistancesNeedUpdate||i)&&d(a,Vt.DYNAMIC_DRAW),a.verticesNeedUpdate=!1,a.colorsNeedUpdate=!1,a.lineDistancesNeedUpdate=!1,n.attributes&&B(n)):e instanceof THREE.PointCloud&&(n=h(e,a),i=n.attributes&&z(n),(a.verticesNeedUpdate||a.colorsNeedUpdate||e.sortParticles||i)&&p(a,Vt.DYNAMIC_DRAW,e),a.verticesNeedUpdate=!1,a.colorsNeedUpdate=!1,n.attributes&&B(n))}function z(t){for(var e in t.attributes)if(t.attributes[e].needsUpdate)return!0
return!1}function B(t){for(var e in t.attributes)t.attributes[e].needsUpdate=!1}function k(t,e){t instanceof THREE.Mesh||t instanceof THREE.PointCloud||t instanceof THREE.Line?N(e.__webglObjects,t):(t instanceof THREE.ImmediateRenderObject||t.immediateRenderCallback)&&O(e.__webglObjectsImmediate,t),delete t.__webglActive}function N(t,e){delete t[e.id]}function O(t,e){for(var r=t.length-1;r>=0;r--)t[r].object===e&&t.splice(r,1)}function I(t,e,r,i,n){Qt=0,i.needsUpdate&&(i.program&&je(i),Wt.initMaterial(i,e,r,n),i.needsUpdate=!1),i.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(Wt.maxMorphTargets)))
var a=!1,o=!1,s=!1,h=i.program,l=h.uniforms,c=i.__webglShader.uniforms
if(h.id!==Xt&&(Vt.useProgram(h.program),Xt=h.id,a=!0,o=!0,s=!0),i.id!==qt&&(qt===-1&&(s=!0),qt=i.id,o=!0),(a||t!==Zt)&&(Vt.uniformMatrix4fv(l.projectionMatrix,!1,t.projectionMatrix.elements),Lt&&Vt.uniform1f(l.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==Zt&&(Zt=t),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==l.cameraPosition&&(Re.setFromMatrixPosition(t.matrixWorld),Vt.uniform3f(l.cameraPosition,Re.x,Re.y,Re.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==l.viewMatrix&&Vt.uniformMatrix4fv(l.viewMatrix,!1,t.matrixWorldInverse.elements)),i.skinning)if(n.bindMatrix&&null!==l.bindMatrix&&Vt.uniformMatrix4fv(l.bindMatrix,!1,n.bindMatrix.elements),n.bindMatrixInverse&&null!==l.bindMatrixInverse&&Vt.uniformMatrix4fv(l.bindMatrixInverse,!1,n.bindMatrixInverse.elements),Ae&&n.skeleton&&n.skeleton.useVertexTexture){if(null!==l.boneTexture){var u=tt()
Vt.uniform1i(l.boneTexture,u),Wt.setTexture(n.skeleton.boneTexture,u)}null!==l.boneTextureWidth&&Vt.uniform1i(l.boneTextureWidth,n.skeleton.boneTextureWidth),null!==l.boneTextureHeight&&Vt.uniform1i(l.boneTextureHeight,n.skeleton.boneTextureHeight)}else n.skeleton&&n.skeleton.boneMatrices&&null!==l.boneGlobalMatrices&&Vt.uniformMatrix4fv(l.boneGlobalMatrices,!1,n.skeleton.boneMatrices)
return o&&(r&&i.fog&&Y(c,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(He&&(s=!0,at(e),He=!1),s?(Z(c,be),Q(c,!0)):Q(c,!1)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&G(c,i),i instanceof THREE.LineBasicMaterial?W(c,i):i instanceof THREE.LineDashedMaterial?(W(c,i),j(c,i)):i instanceof THREE.PointCloudMaterial?X(c,i):i instanceof THREE.MeshPhongMaterial?q(c,i):i instanceof THREE.MeshLambertMaterial?K(c,i):i instanceof THREE.MeshDepthMaterial?(c.mNear.value=t.near,c.mFar.value=t.far,c.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(c.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&J(c,e),et(i.uniformsList)),$(l,n),null!==l.modelMatrix&&Vt.uniformMatrix4fv(l.modelMatrix,!1,n.matrixWorld.elements),h}function G(t,e){t.opacity.value=e.opacity,Wt.gammaInput?t.diffuse.value.copyGammaToLinear(e.color):t.diffuse.value=e.color,t.map.value=e.map,t.lightMap.value=e.lightMap,t.specularMap.value=e.specularMap,t.alphaMap.value=e.alphaMap,e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale))
var r
if(e.map?r=e.map:e.specularMap?r=e.specularMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.alphaMap&&(r=e.alphaMap),void 0!==r){var i=r.offset,n=r.repeat
t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,Wt.gammaInput?t.reflectivity.value=e.reflectivity:t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio,t.combine.value=e.combine,t.useRefract.value=e.envMap&&e.envMap.mapping instanceof THREE.CubeRefractionMapping}function W(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function j(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}function X(t,e){t.psColor.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size,t.scale.value=xt.height/2,t.map.value=e.map}function Y(t,e){t.fogColor.value=e.color,e instanceof THREE.Fog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e instanceof THREE.FogExp2&&(t.fogDensity.value=e.density)}function q(t,e){t.shininess.value=e.shininess,Wt.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive),t.specular.value.copyGammaToLinear(e.specular)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive,t.specular.value=e.specular),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function K(t,e){Wt.gammaInput?(t.ambient.value.copyGammaToLinear(e.ambient),t.emissive.value.copyGammaToLinear(e.emissive)):(t.ambient.value=e.ambient,t.emissive.value=e.emissive),e.wrapAround&&t.wrapRGB.value.copy(e.wrapRGB)}function Z(t,e){t.ambientLightColor.value=e.ambient,t.directionalLightColor.value=e.directional.colors,t.directionalLightDirection.value=e.directional.positions,t.pointLightColor.value=e.point.colors,t.pointLightPosition.value=e.point.positions,t.pointLightDistance.value=e.point.distances,t.spotLightColor.value=e.spot.colors,t.spotLightPosition.value=e.spot.positions,t.spotLightDistance.value=e.spot.distances,t.spotLightDirection.value=e.spot.directions,t.spotLightAngleCos.value=e.spot.anglesCos,t.spotLightExponent.value=e.spot.exponents,t.hemisphereLightSkyColor.value=e.hemi.skyColors,t.hemisphereLightGroundColor.value=e.hemi.groundColors,t.hemisphereLightDirection.value=e.hemi.positions}function Q(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLightColor.needsUpdate=e,t.directionalLightDirection.needsUpdate=e,t.pointLightColor.needsUpdate=e,t.pointLightPosition.needsUpdate=e,t.pointLightDistance.needsUpdate=e,t.spotLightColor.needsUpdate=e,t.spotLightPosition.needsUpdate=e,t.spotLightDistance.needsUpdate=e,t.spotLightDirection.needsUpdate=e,t.spotLightAngleCos.needsUpdate=e,t.spotLightExponent.needsUpdate=e,t.hemisphereLightSkyColor.needsUpdate=e,t.hemisphereLightGroundColor.needsUpdate=e,t.hemisphereLightDirection.needsUpdate=e}function J(t,e){if(t.shadowMatrix)for(var r=0,i=0,n=e.length;i<n;i++){var a=e[i]
a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(t.shadowMap.value[r]=a.shadowMap,t.shadowMapSize.value[r]=a.shadowMapSize,t.shadowMatrix.value[r]=a.shadowMatrix,t.shadowDarkness.value[r]=a.shadowDarkness,t.shadowBias.value[r]=a.shadowBias,r++)}}function $(t,e){Vt.uniformMatrix4fv(t.modelViewMatrix,!1,e._modelViewMatrix.elements),t.normalMatrix&&Vt.uniformMatrix3fv(t.normalMatrix,!1,e._normalMatrix.elements)}function tt(){var t=Qt
return t>=_e&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+_e),Qt+=1,t}function et(t){for(var e,r,i,n=0,a=t.length;n<a;n++){var o=t[n][0]
if(o.needsUpdate!==!1){var s=o.type,h=o.value,l=t[n][1]
switch(s){case"1i":Vt.uniform1i(l,h)
break
case"1f":Vt.uniform1f(l,h)
break
case"2f":Vt.uniform2f(l,h[0],h[1])
break
case"3f":Vt.uniform3f(l,h[0],h[1],h[2])
break
case"4f":Vt.uniform4f(l,h[0],h[1],h[2],h[3])
break
case"1iv":Vt.uniform1iv(l,h)
break
case"3iv":Vt.uniform3iv(l,h)
break
case"1fv":Vt.uniform1fv(l,h)
break
case"2fv":Vt.uniform2fv(l,h)
break
case"3fv":Vt.uniform3fv(l,h)
break
case"4fv":Vt.uniform4fv(l,h)
break
case"Matrix3fv":Vt.uniformMatrix3fv(l,!1,h)
break
case"Matrix4fv":Vt.uniformMatrix4fv(l,!1,h)
break
case"i":Vt.uniform1i(l,h)
break
case"f":Vt.uniform1f(l,h)
break
case"v2":Vt.uniform2f(l,h.x,h.y)
break
case"v3":Vt.uniform3f(l,h.x,h.y,h.z)
break
case"v4":Vt.uniform4f(l,h.x,h.y,h.z,h.w)
break
case"c":Vt.uniform3f(l,h.r,h.g,h.b)
break
case"iv1":Vt.uniform1iv(l,h)
break
case"iv":Vt.uniform3iv(l,h)
break
case"fv1":Vt.uniform1fv(l,h)
break
case"fv":Vt.uniform3fv(l,h)
break
case"v2v":void 0===o._array&&(o._array=new Float32Array(2*h.length))
for(var c=0,u=h.length;c<u;c++)i=2*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y
Vt.uniform2fv(l,o._array)
break
case"v3v":void 0===o._array&&(o._array=new Float32Array(3*h.length))
for(var c=0,u=h.length;c<u;c++)i=3*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y,o._array[i+2]=h[c].z
Vt.uniform3fv(l,o._array)
break
case"v4v":void 0===o._array&&(o._array=new Float32Array(4*h.length))
for(var c=0,u=h.length;c<u;c++)i=4*c,o._array[i]=h[c].x,o._array[i+1]=h[c].y,o._array[i+2]=h[c].z,o._array[i+3]=h[c].w
Vt.uniform4fv(l,o._array)
break
case"m3":Vt.uniformMatrix3fv(l,!1,h.elements)
break
case"m3v":void 0===o._array&&(o._array=new Float32Array(9*h.length))
for(var c=0,u=h.length;c<u;c++)h[c].flattenToArrayOffset(o._array,9*c)
Vt.uniformMatrix3fv(l,!1,o._array)
break
case"m4":Vt.uniformMatrix4fv(l,!1,h.elements)
break
case"m4v":void 0===o._array&&(o._array=new Float32Array(16*h.length))
for(var c=0,u=h.length;c<u;c++)h[c].flattenToArrayOffset(o._array,16*c)
Vt.uniformMatrix4fv(l,!1,o._array)
break
case"t":if(e=h,r=tt(),Vt.uniform1i(l,r),!e)continue
e instanceof THREE.CubeTexture||e.image instanceof Array&&6===e.image.length?ct(e,r):e instanceof THREE.WebGLRenderTargetCube?ut(e,r):Wt.setTexture(e,r)
break
case"tv":void 0===o._array&&(o._array=[])
for(var c=0,u=o.value.length;c<u;c++)o._array[c]=tt()
Vt.uniform1iv(l,o._array)
for(var c=0,u=o.value.length;c<u;c++)e=o.value[c],r=o._array[c],e&&Wt.setTexture(e,r)
break
default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+s)}}}}function rt(t,e){t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t._normalMatrix.getNormalMatrix(t._modelViewMatrix)}function it(t,e,r,i){t[e]=r.r*r.r*i,t[e+1]=r.g*r.g*i,t[e+2]=r.b*r.b*i}function nt(t,e,r,i){t[e]=r.r*i,t[e+1]=r.g*i,t[e+2]=r.b*i}function at(t){var e,r,i,n,a,o,s,h,l,c=0,u=0,f=0,E=be,p=E.directional.colors,d=E.directional.positions,m=E.point.colors,v=E.point.positions,g=E.point.distances,T=E.spot.colors,y=E.spot.positions,R=E.spot.distances,x=E.spot.directions,H=E.spot.anglesCos,b=E.spot.exponents,_=E.hemi.skyColors,w=E.hemi.groundColors,M=E.hemi.positions,S=0,C=0,A=0,L=0,P=0,F=0,D=0,U=0,V=0,z=0,B=0,k=0
for(e=0,r=t.length;e<r;e++)if(i=t[e],!i.onlyShadow)if(n=i.color,s=i.intensity,l=i.distance,i instanceof THREE.AmbientLight){if(!i.visible)continue
Wt.gammaInput?(c+=n.r*n.r,u+=n.g*n.g,f+=n.b*n.b):(c+=n.r,u+=n.g,f+=n.b)}else if(i instanceof THREE.DirectionalLight){if(P+=1,!i.visible)continue
xe.setFromMatrixPosition(i.matrixWorld),Re.setFromMatrixPosition(i.target.matrixWorld),xe.sub(Re),xe.normalize(),V=3*S,d[V]=xe.x,d[V+1]=xe.y,d[V+2]=xe.z,Wt.gammaInput?it(p,V,n,s*s):nt(p,V,n,s),S+=1}else if(i instanceof THREE.PointLight){if(F+=1,!i.visible)continue
z=3*C,Wt.gammaInput?it(m,z,n,s*s):nt(m,z,n,s),Re.setFromMatrixPosition(i.matrixWorld),v[z]=Re.x,v[z+1]=Re.y,v[z+2]=Re.z,g[C]=l,C+=1}else if(i instanceof THREE.SpotLight){if(D+=1,!i.visible)continue
B=3*A,Wt.gammaInput?it(T,B,n,s*s):nt(T,B,n,s),Re.setFromMatrixPosition(i.matrixWorld),y[B]=Re.x,y[B+1]=Re.y,y[B+2]=Re.z,R[A]=l,xe.copy(Re),Re.setFromMatrixPosition(i.target.matrixWorld),xe.sub(Re),xe.normalize(),x[B]=xe.x,x[B+1]=xe.y,x[B+2]=xe.z,H[A]=Math.cos(i.angle),b[A]=i.exponent,A+=1}else if(i instanceof THREE.HemisphereLight){if(U+=1,!i.visible)continue
xe.setFromMatrixPosition(i.matrixWorld),xe.normalize(),k=3*L,M[k]=xe.x,M[k+1]=xe.y,M[k+2]=xe.z,a=i.color,o=i.groundColor,Wt.gammaInput?(h=s*s,it(_,k,a,h),it(w,k,o,h)):(nt(_,k,a,s),nt(w,k,o,s)),L+=1}for(e=3*S,r=Math.max(p.length,3*P);e<r;e++)p[e]=0
for(e=3*C,r=Math.max(m.length,3*F);e<r;e++)m[e]=0
for(e=3*A,r=Math.max(T.length,3*D);e<r;e++)T[e]=0
for(e=3*L,r=Math.max(_.length,3*U);e<r;e++)_[e]=0
for(e=3*L,r=Math.max(w.length,3*U);e<r;e++)w[e]=0
E.directional.length=S,E.point.length=C,E.spot.length=A,E.hemi.length=L,E.ambient[0]=c,E.ambient[1]=u,E.ambient[2]=f}function ot(t){t!==le&&(Vt.lineWidth(t),le=t)}function st(t,e,r){oe!==t&&(t?Vt.enable(Vt.POLYGON_OFFSET_FILL):Vt.disable(Vt.POLYGON_OFFSET_FILL),oe=t),!t||se===e&&he===r||(Vt.polygonOffset(e,r),se=e,he=r)}function ht(t,e,r){r?(Vt.texParameteri(t,Vt.TEXTURE_WRAP_S,mt(e.wrapS)),Vt.texParameteri(t,Vt.TEXTURE_WRAP_T,mt(e.wrapT)),Vt.texParameteri(t,Vt.TEXTURE_MAG_FILTER,mt(e.magFilter)),Vt.texParameteri(t,Vt.TEXTURE_MIN_FILTER,mt(e.minFilter))):(Vt.texParameteri(t,Vt.TEXTURE_WRAP_S,Vt.CLAMP_TO_EDGE),Vt.texParameteri(t,Vt.TEXTURE_WRAP_T,Vt.CLAMP_TO_EDGE),Vt.texParameteri(t,Vt.TEXTURE_MAG_FILTER,dt(e.magFilter)),Vt.texParameteri(t,Vt.TEXTURE_MIN_FILTER,dt(e.minFilter))),Nt&&e.type!==THREE.FloatType&&(e.anisotropy>1||e.__oldAnisotropy)&&(Vt.texParameterf(t,Nt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,Se)),e.__oldAnisotropy=e.anisotropy)}function lt(t,e){if(t.width<=e&&t.height<=e)return t
var r=Math.max(t.width,t.height),i=Math.floor(t.width*e/r),n=Math.floor(t.height*e/r),a=document.createElement("canvas")
a.width=i,a.height=n
var o=a.getContext("2d")
return o.drawImage(t,0,0,t.width,t.height,0,0,i,n),a}function ct(t,e){if(6===t.image.length)if(t.needsUpdate){t.image.__webglTextureCube||(t.addEventListener("dispose",Be),t.image.__webglTextureCube=Vt.createTexture(),Wt.info.memory.textures++),Vt.activeTexture(Vt.TEXTURE0+e),Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,t.image.__webglTextureCube),Vt.pixelStorei(Vt.UNPACK_FLIP_Y_WEBGL,t.flipY)
for(var r=t instanceof THREE.CompressedTexture,i=[],n=0;n<6;n++)Wt.autoScaleCubemaps&&!r?i[n]=lt(t.image[n],Me):i[n]=t.image[n]
var a=i[0],o=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),s=mt(t.format),h=mt(t.type)
ht(Vt.TEXTURE_CUBE_MAP,t,o)
for(var n=0;n<6;n++)if(r)for(var l,c=i[n].mipmaps,u=0,f=c.length;u<f;u++)l=c[u],t.format!==THREE.RGBAFormat?Vt.compressedTexImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,l.data):Vt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,l.width,l.height,0,s,h,l.data)
else Vt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,h,i[n])
t.generateMipmaps&&o&&Vt.generateMipmap(Vt.TEXTURE_CUBE_MAP),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Vt.activeTexture(Vt.TEXTURE0+e),Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,t.image.__webglTextureCube)}function ut(t,e){Vt.activeTexture(Vt.TEXTURE0+e),Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,t.__webglTexture)}function ft(t,e,r){Vt.bindFramebuffer(Vt.FRAMEBUFFER,t),Vt.framebufferTexture2D(Vt.FRAMEBUFFER,Vt.COLOR_ATTACHMENT0,r,e.__webglTexture,0)}function Et(t,e){Vt.bindRenderbuffer(Vt.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(Vt.renderbufferStorage(Vt.RENDERBUFFER,Vt.DEPTH_COMPONENT16,e.width,e.height),Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER,Vt.DEPTH_ATTACHMENT,Vt.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(Vt.renderbufferStorage(Vt.RENDERBUFFER,Vt.DEPTH_STENCIL,e.width,e.height),Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER,Vt.DEPTH_STENCIL_ATTACHMENT,Vt.RENDERBUFFER,t)):Vt.renderbufferStorage(Vt.RENDERBUFFER,Vt.RGBA4,e.width,e.height)}function pt(t){t instanceof THREE.WebGLRenderTargetCube?(Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,t.__webglTexture),Vt.generateMipmap(Vt.TEXTURE_CUBE_MAP),Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,null)):(Vt.bindTexture(Vt.TEXTURE_2D,t.__webglTexture),Vt.generateMipmap(Vt.TEXTURE_2D),Vt.bindTexture(Vt.TEXTURE_2D,null))}function dt(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?Vt.NEAREST:Vt.LINEAR}function mt(t){if(t===THREE.RepeatWrapping)return Vt.REPEAT
if(t===THREE.ClampToEdgeWrapping)return Vt.CLAMP_TO_EDGE
if(t===THREE.MirroredRepeatWrapping)return Vt.MIRRORED_REPEAT
if(t===THREE.NearestFilter)return Vt.NEAREST
if(t===THREE.NearestMipMapNearestFilter)return Vt.NEAREST_MIPMAP_NEAREST
if(t===THREE.NearestMipMapLinearFilter)return Vt.NEAREST_MIPMAP_LINEAR
if(t===THREE.LinearFilter)return Vt.LINEAR
if(t===THREE.LinearMipMapNearestFilter)return Vt.LINEAR_MIPMAP_NEAREST
if(t===THREE.LinearMipMapLinearFilter)return Vt.LINEAR_MIPMAP_LINEAR
if(t===THREE.UnsignedByteType)return Vt.UNSIGNED_BYTE
if(t===THREE.UnsignedShort4444Type)return Vt.UNSIGNED_SHORT_4_4_4_4
if(t===THREE.UnsignedShort5551Type)return Vt.UNSIGNED_SHORT_5_5_5_1
if(t===THREE.UnsignedShort565Type)return Vt.UNSIGNED_SHORT_5_6_5
if(t===THREE.ByteType)return Vt.BYTE
if(t===THREE.ShortType)return Vt.SHORT
if(t===THREE.UnsignedShortType)return Vt.UNSIGNED_SHORT
if(t===THREE.IntType)return Vt.INT
if(t===THREE.UnsignedIntType)return Vt.UNSIGNED_INT
if(t===THREE.FloatType)return Vt.FLOAT
if(t===THREE.AlphaFormat)return Vt.ALPHA
if(t===THREE.RGBFormat)return Vt.RGB
if(t===THREE.RGBAFormat)return Vt.RGBA
if(t===THREE.LuminanceFormat)return Vt.LUMINANCE
if(t===THREE.LuminanceAlphaFormat)return Vt.LUMINANCE_ALPHA
if(t===THREE.AddEquation)return Vt.FUNC_ADD
if(t===THREE.SubtractEquation)return Vt.FUNC_SUBTRACT
if(t===THREE.ReverseSubtractEquation)return Vt.FUNC_REVERSE_SUBTRACT
if(t===THREE.ZeroFactor)return Vt.ZERO
if(t===THREE.OneFactor)return Vt.ONE
if(t===THREE.SrcColorFactor)return Vt.SRC_COLOR
if(t===THREE.OneMinusSrcColorFactor)return Vt.ONE_MINUS_SRC_COLOR
if(t===THREE.SrcAlphaFactor)return Vt.SRC_ALPHA
if(t===THREE.OneMinusSrcAlphaFactor)return Vt.ONE_MINUS_SRC_ALPHA
if(t===THREE.DstAlphaFactor)return Vt.DST_ALPHA
if(t===THREE.OneMinusDstAlphaFactor)return Vt.ONE_MINUS_DST_ALPHA
if(t===THREE.DstColorFactor)return Vt.DST_COLOR
if(t===THREE.OneMinusDstColorFactor)return Vt.ONE_MINUS_DST_COLOR
if(t===THREE.SrcAlphaSaturateFactor)return Vt.SRC_ALPHA_SATURATE
if(void 0!==Ot){if(t===THREE.RGB_S3TC_DXT1_Format)return Ot.COMPRESSED_RGB_S3TC_DXT1_EXT
if(t===THREE.RGBA_S3TC_DXT1_Format)return Ot.COMPRESSED_RGBA_S3TC_DXT1_EXT
if(t===THREE.RGBA_S3TC_DXT3_Format)return Ot.COMPRESSED_RGBA_S3TC_DXT3_EXT
if(t===THREE.RGBA_S3TC_DXT5_Format)return Ot.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function vt(t){if(Ae&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024
var e=Vt.getParameter(Vt.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((e-20)/4),i=r
return void 0!==t&&t instanceof THREE.SkinnedMesh&&(i=Math.min(t.skeleton.bones.length,i),i<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function gt(t){for(var e=0,r=0,i=0,n=0,a=0,o=t.length;a<o;a++){var s=t[a]
s.onlyShadow||s.visible===!1||(s instanceof THREE.DirectionalLight&&e++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&n++)}return{directional:e,point:r,spot:i,hemi:n}}function Tt(t){for(var e=0,r=0,i=t.length;r<i;r++){var n=t[r]
n.castShadow&&(n instanceof THREE.SpotLight&&e++,n instanceof THREE.DirectionalLight&&!n.shadowCascade&&e++)}return e}function yt(){try{var t={alpha:_t,depth:wt,stencil:Mt,antialias:St,premultipliedAlpha:Ct,preserveDrawingBuffer:At}
if(Vt=Ht||xt.getContext("webgl",t)||xt.getContext("experimental-webgl",t),null===Vt)throw"Error creating WebGL context."}catch(t){console.error(t)}zt=Vt.getExtension("OES_texture_float"),Bt=Vt.getExtension("OES_texture_float_linear"),kt=Vt.getExtension("OES_standard_derivatives"),Nt=Vt.getExtension("EXT_texture_filter_anisotropic")||Vt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Vt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Ot=Vt.getExtension("WEBGL_compressed_texture_s3tc")||Vt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Vt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),It=Vt.getExtension("OES_element_index_uint"),null===zt&&console.log("THREE.WebGLRenderer: Float textures not supported."),null===kt&&console.log("THREE.WebGLRenderer: Standard derivatives not supported."),null===Nt&&console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),null===Ot&&console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),null===It&&console.log("THREE.WebGLRenderer: elementindex as unsigned integer not supported."),void 0===Vt.getShaderPrecisionFormat&&(Vt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),Lt&&(Gt=Vt.getExtension("EXT_frag_depth"))}function Rt(){Vt.clearColor(0,0,0,1),Vt.clearDepth(1),Vt.clearStencil(0),Vt.enable(Vt.DEPTH_TEST),Vt.depthFunc(Vt.LEQUAL),Vt.frontFace(Vt.CCW),Vt.cullFace(Vt.BACK),Vt.enable(Vt.CULL_FACE),Vt.enable(Vt.BLEND),Vt.blendEquation(Vt.FUNC_ADD),Vt.blendFunc(Vt.SRC_ALPHA,Vt.ONE_MINUS_SRC_ALPHA),Vt.viewport(ce,ue,fe,Ee),Vt.clearColor(Pt.r,Pt.g,Pt.b,Ft)}console.log("THREE.WebGLRenderer",THREE.REVISION),t=t||{}
var xt=void 0!==t.canvas?t.canvas:document.createElement("canvas"),Ht=void 0!==t.context?t.context:null,bt=void 0!==t.precision?t.precision:"highp",_t=void 0!==t.alpha&&t.alpha,wt=void 0===t.depth||t.depth,Mt=void 0===t.stencil||t.stencil,St=void 0!==t.antialias&&t.antialias,Ct=void 0===t.premultipliedAlpha||t.premultipliedAlpha,At=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,Lt=void 0!==t.logarithmicDepthBuffer&&t.logarithmicDepthBuffer,Pt=new THREE.Color(0),Ft=0,Dt=[],Ut=[]
this.domElement=xt,this.context=null,this.devicePixelRatio=void 0!==t.devicePixelRatio?t.devicePixelRatio:void 0!==self.devicePixelRatio?self.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}}
var Vt,zt,Bt,kt,Nt,Ot,It,Gt,Wt=this,jt=[],Xt=null,Yt=null,qt=-1,Kt=null,Zt=null,Qt=0,Jt=-1,$t=-1,te=-1,ee=-1,re=-1,ie=-1,ne=-1,ae=-1,oe=null,se=null,he=null,le=null,ce=0,ue=0,fe=xt.width,Ee=xt.height,pe=0,de=0,me=new Uint8Array(16),ve=new Uint8Array(16),ge=new THREE.Frustum,Te=new THREE.Matrix4,ye=new THREE.Matrix4,Re=new THREE.Vector3,xe=new THREE.Vector3,He=!0,be={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}}
yt(),Rt(),this.context=Vt
var _e=Vt.getParameter(Vt.MAX_TEXTURE_IMAGE_UNITS),we=Vt.getParameter(Vt.MAX_VERTEX_TEXTURE_IMAGE_UNITS),Me=(Vt.getParameter(Vt.MAX_TEXTURE_SIZE),Vt.getParameter(Vt.MAX_CUBE_MAP_TEXTURE_SIZE)),Se=Nt?Vt.getParameter(Nt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Ce=we>0,Ae=Ce&&zt,Le=(Ot?Vt.getParameter(Vt.COMPRESSED_TEXTURE_FORMATS):[],Vt.getShaderPrecisionFormat(Vt.VERTEX_SHADER,Vt.HIGH_FLOAT)),Pe=Vt.getShaderPrecisionFormat(Vt.VERTEX_SHADER,Vt.MEDIUM_FLOAT),Fe=(Vt.getShaderPrecisionFormat(Vt.VERTEX_SHADER,Vt.LOW_FLOAT),Vt.getShaderPrecisionFormat(Vt.FRAGMENT_SHADER,Vt.HIGH_FLOAT)),De=Vt.getShaderPrecisionFormat(Vt.FRAGMENT_SHADER,Vt.MEDIUM_FLOAT),Ue=(Vt.getShaderPrecisionFormat(Vt.FRAGMENT_SHADER,Vt.LOW_FLOAT),Le.precision>0&&Fe.precision>0),Ve=Pe.precision>0&&De.precision>0
"highp"!==bt||Ue||(Ve?(bt="mediump",console.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(bt="lowp",console.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==bt||Ve||(bt="lowp",console.warn("THREE.WebGLRenderer: mediump not supported, using lowp.")),this.getContext=function(){return Vt},this.supportsVertexTextures=function(){return Ce},this.supportsFloatTextures=function(){return zt},this.supportsStandardDerivatives=function(){return kt},this.supportsCompressedTextureS3TC=function(){return Ot},this.getMaxAnisotropy=function(){return Se},this.getPrecision=function(){return bt},this.setSize=function(t,e,r){xt.width=t*this.devicePixelRatio,xt.height=e*this.devicePixelRatio,r!==!1&&(xt.style.width=t+"px",xt.style.height=e+"px"),this.setViewport(0,0,t,e)},this.setViewport=function(t,e,r,i){ce=t*this.devicePixelRatio,ue=e*this.devicePixelRatio,fe=r*this.devicePixelRatio,Ee=i*this.devicePixelRatio,Vt.viewport(ce,ue,fe,Ee)},this.setScissor=function(t,e,r,i){Vt.scissor(t*this.devicePixelRatio,e*this.devicePixelRatio,r*this.devicePixelRatio,i*this.devicePixelRatio)},this.enableScissorTest=function(t){t?Vt.enable(Vt.SCISSOR_TEST):Vt.disable(Vt.SCISSOR_TEST)},this.setClearColor=function(t,e){Pt.set(t),Ft=void 0!==e?e:1,Vt.clearColor(Pt.r,Pt.g,Pt.b,Ft)},this.setClearColorHex=function(t,e){console.warn("THREE.WebGLRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(t,e)},this.getClearColor=function(){return Pt},this.getClearAlpha=function(){return Ft},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=Vt.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=Vt.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Vt.STENCIL_BUFFER_BIT),Vt.clear(i)},this.clearColor=function(){Vt.clear(Vt.COLOR_BUFFER_BIT)},this.clearDepth=function(){Vt.clear(Vt.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Vt.clear(Vt.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.addPostPlugin=function(t){t.init(this),this.renderPluginsPost.push(t)},this.addPrePlugin=function(t){t.init(this),this.renderPluginsPre.push(t)},this.updateShadowMap=function(t,e){Xt=null,te=-1,ne=-1,ae=-1,Kt=-1,qt=-1,He=!0,Jt=-1,$t=-1,Xe(t),this.shadowMapPlugin.update(t,e)}
var ze=function(t){var e=t.target
e.removeEventListener("dispose",ze),Ie(e)},Be=function(t){var e=t.target
e.removeEventListener("dispose",Be),Ge(e),Wt.info.memory.textures--},ke=function(t){var e=t.target
e.removeEventListener("dispose",ke),We(e),Wt.info.memory.textures--},Ne=function(t){var e=t.target
e.removeEventListener("dispose",Ne),je(e)},Oe=function(t){if(void 0!==t.__webglVertexBuffer&&Vt.deleteBuffer(t.__webglVertexBuffer),void 0!==t.__webglNormalBuffer&&Vt.deleteBuffer(t.__webglNormalBuffer),void 0!==t.__webglTangentBuffer&&Vt.deleteBuffer(t.__webglTangentBuffer),void 0!==t.__webglColorBuffer&&Vt.deleteBuffer(t.__webglColorBuffer),void 0!==t.__webglUVBuffer&&Vt.deleteBuffer(t.__webglUVBuffer),void 0!==t.__webglUV2Buffer&&Vt.deleteBuffer(t.__webglUV2Buffer),void 0!==t.__webglSkinIndicesBuffer&&Vt.deleteBuffer(t.__webglSkinIndicesBuffer),void 0!==t.__webglSkinWeightsBuffer&&Vt.deleteBuffer(t.__webglSkinWeightsBuffer),void 0!==t.__webglFaceBuffer&&Vt.deleteBuffer(t.__webglFaceBuffer),void 0!==t.__webglLineBuffer&&Vt.deleteBuffer(t.__webglLineBuffer),void 0!==t.__webglLineDistanceBuffer&&Vt.deleteBuffer(t.__webglLineDistanceBuffer),void 0!==t.__webglCustomAttributesList)for(var e in t.__webglCustomAttributesList)Vt.deleteBuffer(t.__webglCustomAttributesList[e].buffer)
Wt.info.memory.geometries--},Ie=function(t){if(t.__webglInit=void 0,t instanceof THREE.BufferGeometry){var e=t.attributes
for(var r in e)void 0!==e[r].buffer&&Vt.deleteBuffer(e[r].buffer)
Wt.info.memory.geometries--}else if(void 0!==t.geometryGroups)for(var i=0,n=t.geometryGroupsList.length;i<n;i++){var a=t.geometryGroupsList[i]
if(void 0!==a.numMorphTargets)for(var o=0,s=a.numMorphTargets;o<s;o++)Vt.deleteBuffer(a.__webglMorphTargetsBuffers[o])
if(void 0!==a.numMorphNormals)for(var o=0,s=a.numMorphNormals;o<s;o++)Vt.deleteBuffer(a.__webglMorphNormalsBuffers[o])
Oe(a)}else Oe(t)},Ge=function(t){if(t.image&&t.image.__webglTextureCube)Vt.deleteTexture(t.image.__webglTextureCube)
else{if(!t.__webglInit)return
t.__webglInit=!1,Vt.deleteTexture(t.__webglTexture)}},We=function(t){if(t&&t.__webglTexture)if(Vt.deleteTexture(t.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var e=0;e<6;e++)Vt.deleteFramebuffer(t.__webglFramebuffer[e]),Vt.deleteRenderbuffer(t.__webglRenderbuffer[e])
else Vt.deleteFramebuffer(t.__webglFramebuffer),Vt.deleteRenderbuffer(t.__webglRenderbuffer)},je=function(t){var e=t.program.program
if(void 0!==e){t.program=void 0
var r,i,n,a=!1
for(r=0,i=jt.length;r<i;r++)if(n=jt[r],n.program===e){n.usedTimes--,0===n.usedTimes&&(a=!0)
break}if(a===!0){var o=[]
for(r=0,i=jt.length;r<i;r++)n=jt[r],n.program!==e&&o.push(n)
jt=o,Vt.deleteProgram(e),Wt.info.memory.programs--}}}
this.renderBufferImmediate=function(t,e,r){if(T(),t.hasPositions&&!t.__webglVertexBuffer&&(t.__webglVertexBuffer=Vt.createBuffer()),t.hasNormals&&!t.__webglNormalBuffer&&(t.__webglNormalBuffer=Vt.createBuffer()),t.hasUvs&&!t.__webglUvBuffer&&(t.__webglUvBuffer=Vt.createBuffer()),t.hasColors&&!t.__webglColorBuffer&&(t.__webglColorBuffer=Vt.createBuffer()),t.hasPositions&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglVertexBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,t.positionArray,Vt.DYNAMIC_DRAW),y(e.attributes.position),Vt.vertexAttribPointer(e.attributes.position,3,Vt.FLOAT,!1,0,0)),t.hasNormals){if(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,a,o,s,h,l,c,u,f,E,p,d,m,v=3*t.count
for(m=0;m<v;m+=9)d=t.normalArray,o=d[m],l=d[m+1],f=d[m+2],s=d[m+3],c=d[m+4],E=d[m+5],h=d[m+6],u=d[m+7],p=d[m+8],i=(o+s+h)/3,n=(l+c+u)/3,a=(f+E+p)/3,d[m]=i,d[m+1]=n,d[m+2]=a,d[m+3]=i,d[m+4]=n,d[m+5]=a,d[m+6]=i,d[m+7]=n,d[m+8]=a}Vt.bufferData(Vt.ARRAY_BUFFER,t.normalArray,Vt.DYNAMIC_DRAW),y(e.attributes.normal),Vt.vertexAttribPointer(e.attributes.normal,3,Vt.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglUvBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,t.uvArray,Vt.DYNAMIC_DRAW),y(e.attributes.uv),Vt.vertexAttribPointer(e.attributes.uv,2,Vt.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,t.__webglColorBuffer),Vt.bufferData(Vt.ARRAY_BUFFER,t.colorArray,Vt.DYNAMIC_DRAW),y(e.attributes.color),Vt.vertexAttribPointer(e.attributes.color,3,Vt.FLOAT,!1,0,0)),R(),Vt.drawArrays(Vt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,a){if(i.visible!==!1){var o=I(t,e,r,i,a),s=o.attributes,h=n.attributes,l=!1,c=i.wireframe?1:0,u=16777215*n.id+2*o.id+c
if(u!==Kt&&(Kt=u,l=!0),l&&T(),a instanceof THREE.Mesh){var f=h.index
if(f){var E,p
f.array instanceof Uint32Array?(E=Vt.UNSIGNED_INT,p=4):(E=Vt.UNSIGNED_SHORT,p=2)
var d=n.offsets
if(0===d.length)l&&(g(i,s,h,0),Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,f.buffer)),Vt.drawElements(Vt.TRIANGLES,f.array.length,E,0),Wt.info.render.calls++,Wt.info.render.vertices+=f.array.length,Wt.info.render.faces+=f.array.length/3
else{l=!0
for(var m=0,v=d.length;m<v;m++){var y=d[m].index
l&&(g(i,s,h,y),Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,f.buffer)),Vt.drawElements(Vt.TRIANGLES,d[m].count,E,d[m].start*p),Wt.info.render.calls++,Wt.info.render.vertices+=d[m].count,Wt.info.render.faces+=d[m].count/3}}}else{l&&g(i,s,h,0)
var R=n.attributes.position
Vt.drawArrays(Vt.TRIANGLES,0,R.array.length/3),Wt.info.render.calls++,Wt.info.render.vertices+=R.array.length/3,Wt.info.render.faces+=R.array.length/9}}else if(a instanceof THREE.PointCloud){l&&g(i,s,h,0)
var R=h.position
Vt.drawArrays(Vt.POINTS,0,R.array.length/3),Wt.info.render.calls++,Wt.info.render.points+=R.array.length/3}else if(a instanceof THREE.Line){var x=a.type===THREE.LineStrip?Vt.LINE_STRIP:Vt.LINES
ot(i.linewidth)
var f=h.index
if(f){var E,p
f.array instanceof Uint32Array?(E=Vt.UNSIGNED_INT,p=4):(E=Vt.UNSIGNED_SHORT,p=2)
var d=n.offsets
if(0===d.length)l&&(g(i,s,h,0),Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,f.buffer)),Vt.drawElements(x,f.array.length,E,0),Wt.info.render.calls++,Wt.info.render.vertices+=f.array.length
else{d.length>1&&(l=!0)
for(var m=0,v=d.length;m<v;m++){var y=d[m].index
l&&(g(i,s,h,y),Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,f.buffer)),Vt.drawElements(x,d[m].count,E,d[m].start*p),Wt.info.render.calls++,Wt.info.render.vertices+=d[m].count}}}else{l&&g(i,s,h,0)
var R=h.position
Vt.drawArrays(x,0,R.array.length/3),Wt.info.render.calls++,Wt.info.render.points+=R.array.length/3}}}},this.renderBuffer=function(t,e,r,i,n,a){if(i.visible!==!1){var o,s,h,l=I(t,e,r,i,a),c=l.attributes,u=!1,f=i.wireframe?1:0,E=16777215*n.id+2*l.id+f
if(E!==Kt&&(Kt=E,u=!0),u&&T(),!i.morphTargets&&c.position>=0?u&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglVertexBuffer),y(c.position),Vt.vertexAttribPointer(c.position,3,Vt.FLOAT,!1,0,0)):a.morphTargetBase&&x(i,n,a),u){if(n.__webglCustomAttributesList)for(s=0,h=n.__webglCustomAttributesList.length;s<h;s++)o=n.__webglCustomAttributesList[s],c[o.buffer.belongsToAttribute]>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,o.buffer),y(c[o.buffer.belongsToAttribute]),Vt.vertexAttribPointer(c[o.buffer.belongsToAttribute],o.size,Vt.FLOAT,!1,0,0))
c.color>=0&&(a.geometry.colors.length>0||a.geometry.faces.length>0?(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglColorBuffer),y(c.color),Vt.vertexAttribPointer(c.color,3,Vt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Vt.vertexAttrib3fv(c.color,i.defaultAttributeValues.color)),c.normal>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglNormalBuffer),y(c.normal),Vt.vertexAttribPointer(c.normal,3,Vt.FLOAT,!1,0,0)),c.tangent>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglTangentBuffer),y(c.tangent),Vt.vertexAttribPointer(c.tangent,4,Vt.FLOAT,!1,0,0)),c.uv>=0&&(a.geometry.faceVertexUvs[0]?(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglUVBuffer),y(c.uv),Vt.vertexAttribPointer(c.uv,2,Vt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Vt.vertexAttrib2fv(c.uv,i.defaultAttributeValues.uv)),c.uv2>=0&&(a.geometry.faceVertexUvs[1]?(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglUV2Buffer),y(c.uv2),Vt.vertexAttribPointer(c.uv2,2,Vt.FLOAT,!1,0,0)):i.defaultAttributeValues&&Vt.vertexAttrib2fv(c.uv2,i.defaultAttributeValues.uv2)),i.skinning&&c.skinIndex>=0&&c.skinWeight>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),y(c.skinIndex),Vt.vertexAttribPointer(c.skinIndex,4,Vt.FLOAT,!1,0,0),Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),y(c.skinWeight),Vt.vertexAttribPointer(c.skinWeight,4,Vt.FLOAT,!1,0,0)),c.lineDistance>=0&&(Vt.bindBuffer(Vt.ARRAY_BUFFER,n.__webglLineDistanceBuffer),y(c.lineDistance),Vt.vertexAttribPointer(c.lineDistance,1,Vt.FLOAT,!1,0,0))}if(R(),a instanceof THREE.Mesh){var p=n.__typeArray===Uint32Array?Vt.UNSIGNED_INT:Vt.UNSIGNED_SHORT
i.wireframe?(ot(i.wireframeLinewidth),u&&Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Vt.drawElements(Vt.LINES,n.__webglLineCount,p,0)):(u&&Vt.bindBuffer(Vt.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Vt.drawElements(Vt.TRIANGLES,n.__webglFaceCount,p,0)),Wt.info.render.calls++,Wt.info.render.vertices+=n.__webglFaceCount,Wt.info.render.faces+=n.__webglFaceCount/3}else if(a instanceof THREE.Line){var d=a.type===THREE.LineStrip?Vt.LINE_STRIP:Vt.LINES
ot(i.linewidth),Vt.drawArrays(d,0,n.__webglLineCount),Wt.info.render.calls++}else a instanceof THREE.PointCloud&&(Vt.drawArrays(Vt.POINTS,0,n.__webglParticleCount),Wt.info.render.calls++,Wt.info.render.points+=n.__webglParticleCount)}},this.render=function(t,e,r,i){function n(t){t instanceof THREE.SkinnedMesh&&t.skeleton.update()
for(var e=0,r=t.children.length;e<r;e++)n(t.children[e])}if(e instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
var a,o,s,h,l,c=t.__lights,u=t.fog
for(qt=-1,Zt=null,He=!0,t.autoUpdate===!0&&t.updateMatrixWorld(),void 0===e.parent&&e.updateMatrixWorld(),n(t),e.matrixWorldInverse.getInverse(e.matrixWorld),Te.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),ge.setFromMatrix(Te),Xe(t),Dt.length=0,Ut.length=0,w(t,t,e),Wt.sortObjects===!0&&(Dt.sort(H),Ut.sort(b)),M(this.renderPluginsPre,t,e),Wt.info.render.calls=0,Wt.info.render.vertices=0,Wt.info.render.faces=0,Wt.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=t.__webglObjectsImmediate,a=0,o=l.length;a<o;a++)s=l[a],h=s.object,h.visible&&(rt(h,e),A(s))
if(t.overrideMaterial){var f=t.overrideMaterial
this.setBlending(f.blending,f.blendEquation,f.blendSrc,f.blendDst),this.setDepthTest(f.depthTest),this.setDepthWrite(f.depthWrite),st(f.polygonOffset,f.polygonOffsetFactor,f.polygonOffsetUnits),S(Dt,e,c,u,!0,f),S(Ut,e,c,u,!0,f),C(t.__webglObjectsImmediate,"",e,c,u,!1,f)}else{var f=null
this.setBlending(THREE.NoBlending),S(Dt,e,c,u,!1,f),C(t.__webglObjectsImmediate,"opaque",e,c,u,!1,f),S(Ut,e,c,u,!0,f),C(t.__webglObjectsImmediate,"transparent",e,c,u,!0,f)}M(this.renderPluginsPost,t,e),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&pt(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(t,e,r,i,n){var a=I(t,e,r,i,n)
Kt=-1,Wt.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(a,Vt,ge):n.render(function(t){Wt.renderBufferImmediate(t,a,i)})}
var Xe=function(t){for(t.__webglObjects||(t.__webglObjects={},t.__webglObjectsImmediate=[]);t.__objectsAdded.length;)P(t.__objectsAdded[0],t),t.__objectsAdded.splice(0,1)
for(;t.__objectsRemoved.length;)k(t.__objectsRemoved[0],t),t.__objectsRemoved.splice(0,1)}
this.initMaterial=function(t,e,r,i){t.addEventListener("dispose",Ne)
var n,a,o,s,h,l,c
if(t instanceof THREE.MeshDepthMaterial?c="depth":t instanceof THREE.MeshNormalMaterial?c="normal":t instanceof THREE.MeshBasicMaterial?c="basic":t instanceof THREE.MeshLambertMaterial?c="lambert":t instanceof THREE.MeshPhongMaterial?c="phong":t instanceof THREE.LineBasicMaterial?c="basic":t instanceof THREE.LineDashedMaterial?c="dashed":t instanceof THREE.PointCloudMaterial&&(c="particle_basic"),c){var u=THREE.ShaderLib[c]
t.__webglShader={uniforms:THREE.UniformsUtils.clone(u.uniforms),vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}}else t.__webglShader={uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}
s=gt(e),l=Tt(e),h=vt(i),o={precision:bt,supportsVertexTextures:Ce,map:!!t.map,envMap:!!t.envMap,lightMap:!!t.lightMap,bumpMap:!!t.bumpMap,normalMap:!!t.normalMap,specularMap:!!t.specularMap,alphaMap:!!t.alphaMap,vertexColors:t.vertexColors,fog:r,useFog:t.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:t.sizeAttenuation,logarithmicDepthBuffer:Lt,skinning:t.skinning,maxBones:h,useVertexTexture:Ae&&i&&i.skeleton&&i.skeleton.useVertexTexture,morphTargets:t.morphTargets,morphNormals:t.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow&&l>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:t.alphaTest,metal:t.metal,wrapAround:t.wrapAround,doubleSided:t.side===THREE.DoubleSide,flipSided:t.side===THREE.BackSide}
var f=[]
c?f.push(c):(f.push(t.fragmentShader),f.push(t.vertexShader))
for(var E in t.defines)f.push(E),f.push(t.defines[E])
for(var p in o)f.push(p),f.push(o[p])
for(var d,m=f.join(),p=0,v=jt.length;p<v;p++){var g=jt[p]
if(g.code===m){d=g,d.usedTimes++
break}}void 0===d&&(d=new THREE.WebGLProgram(this,m,t,o),jt.push(d),Wt.info.memory.programs=jt.length),t.program=d
var T=t.program.attributes
if(t.morphTargets){t.numSupportedMorphTargets=0
var y,R="morphTarget"
for(a=0;a<this.maxMorphTargets;a++)y=R+a,T[y]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0
var y,R="morphNormal"
for(a=0;a<this.maxMorphNormals;a++)y=R+a,T[y]>=0&&t.numSupportedMorphNormals++}t.uniformsList=[]
for(n in t.__webglShader.uniforms){var x=t.program.uniforms[n]
x&&t.uniformsList.push([t.__webglShader.uniforms[n],x])}},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?Vt.disable(Vt.CULL_FACE):(e===THREE.FrontFaceDirectionCW?Vt.frontFace(Vt.CW):Vt.frontFace(Vt.CCW),t===THREE.CullFaceBack?Vt.cullFace(Vt.BACK):t===THREE.CullFaceFront?Vt.cullFace(Vt.FRONT):Vt.cullFace(Vt.FRONT_AND_BACK),Vt.enable(Vt.CULL_FACE))},this.setMaterialFaces=function(t){var e=t.side===THREE.DoubleSide,r=t.side===THREE.BackSide
Jt!==e&&(e?Vt.disable(Vt.CULL_FACE):Vt.enable(Vt.CULL_FACE),Jt=e),$t!==r&&(r?Vt.frontFace(Vt.CW):Vt.frontFace(Vt.CCW),$t=r)},this.setDepthTest=function(t){ne!==t&&(t?Vt.enable(Vt.DEPTH_TEST):Vt.disable(Vt.DEPTH_TEST),ne=t)},this.setDepthWrite=function(t){ae!==t&&(Vt.depthMask(t),ae=t)},this.setBlending=function(t,e,r,i){t!==te&&(t===THREE.NoBlending?Vt.disable(Vt.BLEND):t===THREE.AdditiveBlending?(Vt.enable(Vt.BLEND),Vt.blendEquation(Vt.FUNC_ADD),Vt.blendFunc(Vt.SRC_ALPHA,Vt.ONE)):t===THREE.SubtractiveBlending?(Vt.enable(Vt.BLEND),Vt.blendEquation(Vt.FUNC_ADD),Vt.blendFunc(Vt.ZERO,Vt.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?(Vt.enable(Vt.BLEND),Vt.blendEquation(Vt.FUNC_ADD),Vt.blendFunc(Vt.ZERO,Vt.SRC_COLOR)):t===THREE.CustomBlending?Vt.enable(Vt.BLEND):(Vt.enable(Vt.BLEND),Vt.blendEquationSeparate(Vt.FUNC_ADD,Vt.FUNC_ADD),Vt.blendFuncSeparate(Vt.SRC_ALPHA,Vt.ONE_MINUS_SRC_ALPHA,Vt.ONE,Vt.ONE_MINUS_SRC_ALPHA)),te=t),t===THREE.CustomBlending?(e!==ee&&(Vt.blendEquation(mt(e)),ee=e),r===re&&i===ie||(Vt.blendFunc(mt(r),mt(i)),re=r,ie=i)):(ee=null,re=null,ie=null)},this.setTexture=function(t,e){if(t.needsUpdate){t.__webglInit||(t.__webglInit=!0,t.addEventListener("dispose",Be),t.__webglTexture=Vt.createTexture(),Wt.info.memory.textures++),Vt.activeTexture(Vt.TEXTURE0+e),Vt.bindTexture(Vt.TEXTURE_2D,t.__webglTexture),Vt.pixelStorei(Vt.UNPACK_FLIP_Y_WEBGL,t.flipY),Vt.pixelStorei(Vt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Vt.pixelStorei(Vt.UNPACK_ALIGNMENT,t.unpackAlignment)
var r=t.image,i=THREE.Math.isPowerOfTwo(r.width)&&THREE.Math.isPowerOfTwo(r.height),n=mt(t.format),a=mt(t.type)
ht(Vt.TEXTURE_2D,t,i)
var o,s=t.mipmaps
if(t instanceof THREE.DataTexture)if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)o=s[h],Vt.texImage2D(Vt.TEXTURE_2D,h,n,o.width,o.height,0,n,a,o.data)
t.generateMipmaps=!1}else Vt.texImage2D(Vt.TEXTURE_2D,0,n,r.width,r.height,0,n,a,r.data)
else if(t instanceof THREE.CompressedTexture)for(var h=0,l=s.length;h<l;h++)o=s[h],t.format!==THREE.RGBAFormat?Vt.compressedTexImage2D(Vt.TEXTURE_2D,h,n,o.width,o.height,0,o.data):Vt.texImage2D(Vt.TEXTURE_2D,h,n,o.width,o.height,0,n,a,o.data)
else if(s.length>0&&i){for(var h=0,l=s.length;h<l;h++)o=s[h],Vt.texImage2D(Vt.TEXTURE_2D,h,n,n,a,o)
t.generateMipmaps=!1}else Vt.texImage2D(Vt.TEXTURE_2D,0,n,n,a,t.image)
t.generateMipmaps&&i&&Vt.generateMipmap(Vt.TEXTURE_2D),t.needsUpdate=!1,t.onUpdate&&t.onUpdate()}else Vt.activeTexture(Vt.TEXTURE0+e),Vt.bindTexture(Vt.TEXTURE_2D,t.__webglTexture)},this.setRenderTarget=function(t){var e=t instanceof THREE.WebGLRenderTargetCube
if(t&&!t.__webglFramebuffer){void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",ke),t.__webglTexture=Vt.createTexture(),Wt.info.memory.textures++
var r=THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height),i=mt(t.format),n=mt(t.type)
if(e){t.__webglFramebuffer=[],t.__webglRenderbuffer=[],Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,t.__webglTexture),ht(Vt.TEXTURE_CUBE_MAP,t,r)
for(var a=0;a<6;a++)t.__webglFramebuffer[a]=Vt.createFramebuffer(),t.__webglRenderbuffer[a]=Vt.createRenderbuffer(),Vt.texImage2D(Vt.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,i,t.width,t.height,0,i,n,null),ft(t.__webglFramebuffer[a],t,Vt.TEXTURE_CUBE_MAP_POSITIVE_X+a),Et(t.__webglRenderbuffer[a],t)
r&&Vt.generateMipmap(Vt.TEXTURE_CUBE_MAP)}else t.__webglFramebuffer=Vt.createFramebuffer(),t.shareDepthFrom?t.__webglRenderbuffer=t.shareDepthFrom.__webglRenderbuffer:t.__webglRenderbuffer=Vt.createRenderbuffer(),Vt.bindTexture(Vt.TEXTURE_2D,t.__webglTexture),ht(Vt.TEXTURE_2D,t,r),Vt.texImage2D(Vt.TEXTURE_2D,0,i,t.width,t.height,0,i,n,null),ft(t.__webglFramebuffer,t,Vt.TEXTURE_2D),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER,Vt.DEPTH_ATTACHMENT,Vt.RENDERBUFFER,t.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&Vt.framebufferRenderbuffer(Vt.FRAMEBUFFER,Vt.DEPTH_STENCIL_ATTACHMENT,Vt.RENDERBUFFER,t.__webglRenderbuffer):Et(t.__webglRenderbuffer,t),r&&Vt.generateMipmap(Vt.TEXTURE_2D)
e?Vt.bindTexture(Vt.TEXTURE_CUBE_MAP,null):Vt.bindTexture(Vt.TEXTURE_2D,null),Vt.bindRenderbuffer(Vt.RENDERBUFFER,null),Vt.bindFramebuffer(Vt.FRAMEBUFFER,null)}var o,s,h,l,c
t?(o=e?t.__webglFramebuffer[t.activeCubeFace]:t.__webglFramebuffer,s=t.width,h=t.height,l=0,c=0):(o=null,s=fe,h=Ee,l=ce,c=ue),o!==Yt&&(Vt.bindFramebuffer(Vt.FRAMEBUFFER,o),Vt.viewport(l,c,s,h),Yt=o),pe=s,de=h},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(t,e,r){this.width=t,this.height=e,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(t,e){this.width=t,this.height=e},clone:function(){var t=new THREE.WebGLRenderTarget(this.width,this.height)
return t.wrapS=this.wrapS,t.wrapT=this.wrapT,t.magFilter=this.magFilter,t.minFilter=this.minFilter,t.anisotropy=this.anisotropy,t.offset.copy(this.offset),t.repeat.copy(this.repeat),t.format=this.format,t.type=this.type,t.depthBuffer=this.depthBuffer,t.stencilBuffer=this.stencilBuffer,t.generateMipmaps=this.generateMipmaps,t.shareDepthFrom=this.shareDepthFrom,t},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLProgram=function(){var t=0,e=function(t){var e,r,i=[]
for(var n in t)e=t[n],e!==!1&&(r="#define "+n+" "+e,i.push(r))
return i.join("\n")},r=function(t,e,r){for(var i={},n=0,a=r.length;n<a;n++){var o=r[n]
i[o]=t.getUniformLocation(e,o)}return i},i=function(t,e,r){for(var i={},n=0,a=r.length;n<a;n++){var o=r[n]
i[o]=t.getAttribLocation(e,o)}return i}
return function(n,a,o,s){var h=n,l=h.context,c=o.defines,u=o.__webglShader.uniforms,f=o.attributes,E=o.__webglShader.vertexShader,p=o.__webglShader.fragmentShader,d=o.index0AttributeName
void 0===d&&s.morphTargets===!0&&(d="position")
var m="SHADOWMAP_TYPE_BASIC"
s.shadowMapType===THREE.PCFShadowMap?m="SHADOWMAP_TYPE_PCF":s.shadowMapType===THREE.PCFSoftShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT")
var v,g,T=e(c),y=l.createProgram()
o instanceof THREE.RawShaderMaterial?(v="",g=""):(v=["precision "+s.precision+" float;","precision "+s.precision+" int;",T,s.supportsVertexTextures?"#define VERTEX_TEXTURES":"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"","#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,"#define MAX_BONES "+s.maxBones,s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.skinning?"#define USE_SKINNING":"",s.useVertexTexture?"#define BONE_TEXTURE":"",s.morphTargets?"#define USE_MORPHTARGETS":"",s.morphNormals?"#define USE_MORPHNORMALS":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.sizeAttenuation?"#define USE_SIZEATTENUATION":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif",""].join("\n"),g=["precision "+s.precision+" float;","precision "+s.precision+" int;",s.bumpMap||s.normalMap?"#extension GL_OES_standard_derivatives : enable":"",T,"#define MAX_DIR_LIGHTS "+s.maxDirLights,"#define MAX_POINT_LIGHTS "+s.maxPointLights,"#define MAX_SPOT_LIGHTS "+s.maxSpotLights,"#define MAX_HEMI_LIGHTS "+s.maxHemiLights,"#define MAX_SHADOWS "+s.maxShadows,s.alphaTest?"#define ALPHATEST "+s.alphaTest:"",h.gammaInput?"#define GAMMA_INPUT":"",h.gammaOutput?"#define GAMMA_OUTPUT":"",s.useFog&&s.fog?"#define USE_FOG":"",s.useFog&&s.fogExp?"#define FOG_EXP2":"",s.map?"#define USE_MAP":"",s.envMap?"#define USE_ENVMAP":"",s.lightMap?"#define USE_LIGHTMAP":"",s.bumpMap?"#define USE_BUMPMAP":"",s.normalMap?"#define USE_NORMALMAP":"",s.specularMap?"#define USE_SPECULARMAP":"",s.alphaMap?"#define USE_ALPHAMAP":"",s.vertexColors?"#define USE_COLOR":"",s.metal?"#define METAL":"",s.wrapAround?"#define WRAP_AROUND":"",s.doubleSided?"#define DOUBLE_SIDED":"",s.flipSided?"#define FLIP_SIDED":"",s.shadowMapEnabled?"#define USE_SHADOWMAP":"",s.shadowMapEnabled?"#define "+m:"",s.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",s.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",s.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"))
var R=new THREE.WebGLShader(l,l.VERTEX_SHADER,v+E),x=new THREE.WebGLShader(l,l.FRAGMENT_SHADER,g+p)
l.attachShader(y,R),l.attachShader(y,x),void 0!==d&&l.bindAttribLocation(y,0,d),l.linkProgram(y),l.getProgramParameter(y,l.LINK_STATUS)===!1&&(console.error("THREE.WebGLProgram: Could not initialise shader."),console.error("gl.VALIDATE_STATUS",l.getProgramParameter(y,l.VALIDATE_STATUS)),console.error("gl.getError()",l.getError())),""!==l.getProgramInfoLog(y)&&console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",l.getProgramInfoLog(y)),l.deleteShader(R),l.deleteShader(x)
var H=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"]
s.useVertexTexture?(H.push("boneTexture"),H.push("boneTextureWidth"),H.push("boneTextureHeight")):H.push("boneGlobalMatrices"),s.logarithmicDepthBuffer&&H.push("logDepthBufFC")
for(var b in u)H.push(b)
this.uniforms=r(l,y,H),H=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"]
for(var _=0;_<s.maxMorphTargets;_++)H.push("morphTarget"+_)
for(var _=0;_<s.maxMorphNormals;_++)H.push("morphNormal"+_)
for(var w in f)H.push(w)
return this.attributes=i(l,y,H),this.id=t++,this.code=a,this.usedTimes=1,this.program=y,this.vertexShader=R,this.fragmentShader=x,this}}(),THREE.WebGLShader=function(){var t=function(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r]
return e.join("\n")}
return function(e,r,i){var n=e.createShader(r)
return e.shaderSource(n,i),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==e.getShaderInfoLog(n)&&(console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e.getShaderInfoLog(n)),console.warn(t(i))),n}}(),THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(t){this.positionWorld.copy(t.positionWorld),this.positionScreen.copy(t.positionScreen)},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0}
THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null}
THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.GeometryUtils={merge:function(t,e,r){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.")
var i
e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){var n=new THREE.ImageLoader
n.crossOrigin=this.crossOrigin
var a=new THREE.Texture(void 0,e)
return n.load(t,function(t){a.image=t,a.needsUpdate=!0,r&&r(a)},void 0,function(t){i&&i(t)}),a.sourceFile=t,a},loadTextureCube:function(t,e,r,i){var n=[],a=new THREE.ImageLoader
a.crossOrigin=this.crossOrigin
var o=new THREE.CubeTexture(n,e)
o.flipY=!1
for(var s=0,h=function(e){a.load(t[e],function(t){o.images[e]=t,s+=1,6===s&&(o.needsUpdate=!0,r&&r(o))})},l=0,c=t.length;l<c;++l)h(l)
return o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(t,e){var r=function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]},i=function(t,e){return[t[0]-e[0],t[1]-e[1],t[2]-e[2]]},n=function(t){var e=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])
return[t[0]/e,t[1]/e,t[2]/e]}
e=1|e
var a=t.width,o=t.height,s=document.createElement("canvas")
s.width=a,s.height=o
var h=s.getContext("2d")
h.drawImage(t,0,0)
for(var l=h.getImageData(0,0,a,o).data,c=h.createImageData(a,o),u=c.data,f=0;f<a;f++)for(var E=0;E<o;E++){var p=E-1<0?0:E-1,d=E+1>o-1?o-1:E+1,m=f-1<0?0:f-1,v=f+1>a-1?a-1:f+1,g=[],T=[0,0,l[4*(E*a+f)]/255*e]
g.push([-1,0,l[4*(E*a+m)]/255*e]),g.push([-1,-1,l[4*(p*a+m)]/255*e]),g.push([0,-1,l[4*(p*a+f)]/255*e]),g.push([1,-1,l[4*(p*a+v)]/255*e]),g.push([1,0,l[4*(E*a+v)]/255*e]),g.push([1,1,l[4*(d*a+v)]/255*e]),g.push([0,1,l[4*(d*a+f)]/255*e]),g.push([-1,1,l[4*(d*a+m)]/255*e])
for(var y=[],R=g.length,x=0;x<R;x++){var H=g[x],b=g[(x+1)%R]
H=i(H,T),b=i(b,T),y.push(n(r(H,b)))}for(var _=[0,0,0],x=0;x<y.length;x++)_[0]+=y[x][0],_[1]+=y[x][1],_[2]+=y[x][2]
_[0]/=y.length,_[1]/=y.length,_[2]/=y.length
var w=4*(E*a+f)
u[w]=(_[0]+1)/2*255|0,u[w+1]=(_[1]+1)/2*255|0,u[w+2]=255*_[2]|0,u[w+3]=255}return h.putImageData(c,0,0),s},generateDataTexture:function(t,e,r){for(var i=t*e,n=new Uint8Array(3*i),a=Math.floor(255*r.r),o=Math.floor(255*r.g),s=Math.floor(255*r.b),h=0;h<i;h++)n[3*h]=a,n[3*h+1]=o,n[3*h+2]=s
var l=new THREE.DataTexture(n,t,e,THREE.RGBFormat)
return l.needsUpdate=!0,l}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Object3D,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]))
return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4
i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(t){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(t){var e=t.familyName.toLowerCase(),r=this
r.faces[e]=r.faces[e]||{},r.faces[e][t.cssFontWeight]=r.faces[e][t.cssFontWeight]||{},r.faces[e][t.cssFontWeight][t.cssFontStyle]=t
r.faces[e][t.cssFontWeight][t.cssFontStyle]=t
return t},drawText:function(t){var e,r=this.getFace(),i=this.size/r.resolution,n=0,a=String(t).split(""),o=a.length,s=[]
for(e=0;e<o;e++){var h=new THREE.Path,l=this.extractGlyphPoints(a[e],r,i,n,h)
n+=l.offset,s.push(l.path)}var c=n/2
return{paths:s,offset:c}},extractGlyphPoints:function(t,e,r,i,n){var a,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b=[],_=e.glyphs[t]||e.glyphs["?"]
if(_){if(_.o)for(h=_._cachedOutline||(_._cachedOutline=_.o.split(" ")),c=h.length,u=r,f=r,a=0;a<c;)switch(l=h[a++]){case"m":E=h[a++]*u+i,p=h[a++]*f,n.moveTo(E,p)
break
case"l":E=h[a++]*u+i,p=h[a++]*f,n.lineTo(E,p)
break
case"q":if(d=h[a++]*u+i,m=h[a++]*f,T=h[a++]*u+i,y=h[a++]*f,n.quadraticCurveTo(T,y,d,m),H=b[b.length-1])for(v=H.x,g=H.y,o=1,s=this.divisions;o<=s;o++){var w=o/s
THREE.Shape.Utils.b2(w,v,T,d),THREE.Shape.Utils.b2(w,g,y,m)}break
case"b":if(d=h[a++]*u+i,m=h[a++]*f,T=h[a++]*u+i,y=h[a++]*f,R=h[a++]*u+i,x=h[a++]*f,n.bezierCurveTo(T,y,R,x,d,m),H=b[b.length-1])for(v=H.x,g=H.y,o=1,s=this.divisions;o<=s;o++){var w=o/s
THREE.Shape.Utils.b3(w,v,T,R,d),THREE.Shape.Utils.b3(w,g,y,x,m)}}return{offset:_.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(t,e){e=e||{}
var r=void 0!==e.size?e.size:100,i=void 0!==e.curveSegments?e.curveSegments:4,n=void 0!==e.font?e.font:"helvetiker",a=void 0!==e.weight?e.weight:"normal",o=void 0!==e.style?e.style:"normal"
THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=a,THREE.FontUtils.style=o
for(var s=THREE.FontUtils.drawText(t),h=s.paths,l=[],c=0,u=h.length;c<u;c++)Array.prototype.push.apply(l,h[c].toShapes())
return l},function(t){var e=1e-10,r=function(t,e){var r=t.length
if(r<3)return null
var a,o,s,h=[],l=[],c=[]
if(i(t)>0)for(o=0;o<r;o++)l[o]=o
else for(o=0;o<r;o++)l[o]=r-1-o
var u=r,f=2*u
for(o=u-1;u>2;){if(f--<=0)return console.log("Warning, unable to triangulate polygon!"),e?c:h
if(a=o,u<=a&&(a=0),o=a+1,u<=o&&(o=0),s=o+1,u<=s&&(s=0),n(t,a,o,s,u,l)){var E,p,d,m,v
for(E=l[a],p=l[o],d=l[s],h.push([t[E],t[p],t[d]]),c.push([l[a],l[o],l[s]]),m=o,v=o+1;v<u;m++,v++)l[m]=l[v]
u--,f=2*u}}return e?c:h},i=function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y
return.5*r},n=function(t,r,i,n,a,o){var s,h,l,c,u,f,E,p,d
if(h=t[o[r]].x,l=t[o[r]].y,c=t[o[i]].x,u=t[o[i]].y,f=t[o[n]].x,E=t[o[n]].y,e>(c-h)*(E-l)-(u-l)*(f-h))return!1
var m,v,g,T,y,R,x,H,b,_,w,M,S,C,A
for(m=f-c,v=E-u,g=h-f,T=l-E,y=c-h,R=u-l,s=0;s<a;s++)if(p=t[o[s]].x,d=t[o[s]].y,!(p===h&&d===l||p===c&&d===u||p===f&&d===E)&&(x=p-h,H=d-l,b=p-c,_=d-u,w=p-f,M=d-E,A=m*_-v*b,S=y*H-R*x,C=g*M-T*w,A>=-e&&C>=-e&&S>=-e))return!1
return!0}
return t.Triangulate=r,t.Triangulate.area=i,t}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(t){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(t){var e=this.getUtoTmapping(t)
return this.getPoint(e)},THREE.Curve.prototype.getPoints=function(t){t||(t=5)
var e,r=[]
for(e=0;e<=t;e++)r.push(this.getPoint(e/t))
return r},THREE.Curve.prototype.getSpacedPoints=function(t){t||(t=5)
var e,r=[]
for(e=0;e<=t;e++)r.push(this.getPointAt(e/t))
return r},THREE.Curve.prototype.getLength=function(){var t=this.getLengths()
return t[t.length-1]},THREE.Curve.prototype.getLengths=function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==t+1&&!this.needsUpdate)return this.cacheArcLengths
this.needsUpdate=!1
var e,r,i=[],n=this.getPoint(0),a=0
for(i.push(0),r=1;r<=t;r++)e=this.getPoint(r/t),a+=e.distanceTo(n),i.push(a),n=e
return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(t,e){var r,i=this.getLengths(),n=0,a=i.length
r=e?e:t*i[a-1]
for(var o,s=0,h=a-1;s<=h;)if(n=Math.floor(s+(h-s)/2),o=i[n]-r,o<0)s=n+1
else{if(!(o>0)){h=n
break}h=n-1}if(n=h,i[n]==r){var l=n/(a-1)
return l}var c=i[n],u=i[n+1],f=u-c,E=(r-c)/f,l=(n+E)/(a-1)
return l},THREE.Curve.prototype.getTangent=function(t){var e=1e-4,r=t-e,i=t+e
r<0&&(r=0),i>1&&(i=1)
var n=this.getPoint(r),a=this.getPoint(i),o=a.clone().sub(n)
return o.normalize()},THREE.Curve.prototype.getTangentAt=function(t){var e=this.getUtoTmapping(t)
return this.getTangent(e)},THREE.Curve.Utils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t,e,r,i,n){var a=6*t*t-6*t,o=3*t*t-4*t+1,s=-6*t*t+6*t,h=3*t*t-2*t
return a+o+s+h},interpolate:function(t,e,r,i,n){var a=.5*(r-t),o=.5*(i-e),s=n*n,h=n*s
return(2*e-2*r+a+o)*h+(-3*e+3*r-2*a-o)*s+a*n+e}},THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),t.prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1)
t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){for(var e,r,i=t*this.getLength(),n=this.getCurveLengths(),a=0;a<n.length;){if(n[a]>=i){e=n[a]-i,r=this.curves[a]
var o=1-e/r.getLength()
return r.getPointAt(o)}a++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths()
return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths
var t,e=[],r=0,i=this.curves.length
for(t=0;t<i;t++)r+=this.curves[t].getLength(),e.push(r)
return this.cacheLengths=e,e},THREE.CurvePath.prototype.getBoundingBox=function(){var t,e,r,i,n,a,o=this.getPoints()
t=e=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY
var s,h,l,c,u=o[0]instanceof THREE.Vector3
for(c=u?new THREE.Vector3:new THREE.Vector2,h=0,l=o.length;h<l;h++)s=o[h],s.x>t?t=s.x:s.x<i&&(i=s.x),s.y>e?e=s.y:s.y<n&&(n=s.y),u&&(s.z>r?r=s.z:s.z<a&&(a=s.z)),c.add(s)
var f={minX:i,minY:n,maxX:t,maxY:e}
return u&&(f.maxZ=r,f.minZ=a),f},THREE.CurvePath.prototype.createPointsGeometry=function(t){var e=this.getPoints(t,!0)
return this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){var e=this.getSpacedPoints(t,!0)
return this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0;r<t.length;r++)e.vertices.push(new THREE.Vector3(t[r].x,t[r].y,t[r].z||0))
return e},THREE.CurvePath.prototype.addWrapPath=function(t){this.bends.push(t)},THREE.CurvePath.prototype.getTransformedPoints=function(t,e){var r,i,n=this.getPoints(t)
for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r])
return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(t,e){var r,i,n=this.getSpacedPoints(t)
for(e||(e=this.bends),r=0,i=e.length;r<i;r++)n=this.getWrapPoints(n,e[r])
return n},THREE.CurvePath.prototype.getWrapPoints=function(t,e){var r,i,n,a,o,s,h=this.getBoundingBox()
for(r=0,i=t.length;r<i;r++){n=t[r],a=n.x,o=n.y,s=a/h.maxX,s=e.getUtoTmapping(s,a)
var l=e.getPoint(s),c=e.getTangent(s)
c.set(-c.y,c.x).multiplyScalar(o),n.x=l.x+c.x,n.y=l.y+c.y}return t},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.quaternionWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.quaternionObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.quaternionObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0)
for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.quaternionWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.quaternionObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y)
for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(t,e){var r=Array.prototype.slice.call(arguments)
this.actions.push({action:THREE.PathActions.MOVE_TO,args:r})},THREE.Path.prototype.lineTo=function(t,e){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],a=i[i.length-1],o=new THREE.LineCurve(new THREE.Vector2(n,a),new THREE.Vector2(t,e))
this.curves.push(o),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,o=a[a.length-2],s=a[a.length-1],h=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,s),new THREE.Vector2(t,e),new THREE.Vector2(r,i))
this.curves.push(h),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,a){var o=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(h,l),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,a))
this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],a=[new THREE.Vector2(i,n)]
Array.prototype.push.apply(a,t)
var o=new THREE.SplineCurve(a)
this.curves.push(o),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,a){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],h=o[o.length-1]
this.absarc(t+s,e+h,r,i,n,a)},THREE.Path.prototype.absarc=function(t,e,r,i,n,a){this.absellipse(t,e,r,r,i,n,a)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,a,o){var s=this.actions[this.actions.length-1].args,h=s[s.length-2],l=s[s.length-1]
this.absellipse(t+h,e+l,r,i,n,a,o)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,a,o){var s=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(t,e,r,i,n,a,o)
this.curves.push(h)
var l=h.getPoint(1)
s.push(l.x),s.push(l.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(t,e){t||(t=40)
for(var r=[],i=0;i<t;i++)r.push(this.getPoint(i/t))
return r},THREE.Path.prototype.getPoints=function(t,e){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(t,e)
t=t||12
var r,i,n,a,o,s,h,l,c,u,f,E,p,d,m,v,g,T,y=[]
for(r=0,i=this.actions.length;r<i;r++)switch(n=this.actions[r],a=n.action,o=n.args,a){case THREE.PathActions.MOVE_TO:y.push(new THREE.Vector2(o[0],o[1]))
break
case THREE.PathActions.LINE_TO:y.push(new THREE.Vector2(o[0],o[1]))
break
case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=o[2],h=o[3],u=o[0],f=o[1],y.length>0?(d=y[y.length-1],E=d.x,p=d.y):(d=this.actions[r-1].args,E=d[d.length-2],p=d[d.length-1]),m=1;m<=t;m++)v=m/t,g=THREE.Shape.Utils.b2(v,E,u,s),T=THREE.Shape.Utils.b2(v,p,f,h),y.push(new THREE.Vector2(g,T))
break
case THREE.PathActions.BEZIER_CURVE_TO:for(s=o[4],h=o[5],u=o[0],f=o[1],l=o[2],c=o[3],y.length>0?(d=y[y.length-1],E=d.x,p=d.y):(d=this.actions[r-1].args,E=d[d.length-2],p=d[d.length-1]),m=1;m<=t;m++)v=m/t,g=THREE.Shape.Utils.b3(v,E,u,l,s),T=THREE.Shape.Utils.b3(v,p,f,c,h),y.push(new THREE.Vector2(g,T))
break
case THREE.PathActions.CSPLINE_THRU:d=this.actions[r-1].args
var R=new THREE.Vector2(d[d.length-2],d[d.length-1]),x=[R],H=t*o[0].length
x=x.concat(o[0])
var b=new THREE.SplineCurve(x)
for(m=1;m<=H;m++)y.push(b.getPointAt(m/H))
break
case THREE.PathActions.ARC:var _,w=o[0],M=o[1],S=o[2],C=o[3],A=o[4],L=!!o[5],P=A-C,F=2*t
for(m=1;m<=F;m++)v=m/F,L||(v=1-v),_=C+v*P,g=w+S*Math.cos(_),T=M+S*Math.sin(_),y.push(new THREE.Vector2(g,T))
break
case THREE.PathActions.ELLIPSE:var _,w=o[0],M=o[1],D=o[2],U=o[3],C=o[4],A=o[5],L=!!o[6],P=A-C,F=2*t
for(m=1;m<=F;m++)v=m/F,L||(v=1-v),_=C+v*P,g=w+D*Math.cos(_),T=M+U*Math.sin(_),y.push(new THREE.Vector2(g,T))}var V=y[y.length-1],z=1e-10
return Math.abs(V.x-y[0].x)<z&&Math.abs(V.y-y[0].y)<z&&y.splice(y.length-1,1),e&&y.push(y[0]),y},THREE.Path.prototype.toShapes=function(t,e){function r(t){var e,r,i,n,a,o=[],s=new THREE.Path
for(e=0,r=t.length;e<r;e++)i=t[e],a=i.args,n=i.action,n==THREE.PathActions.MOVE_TO&&0!=s.actions.length&&(o.push(s),s=new THREE.Path),s[n].apply(s,a)
return 0!=s.actions.length&&o.push(s),o}function i(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],a=new THREE.Shape
a.actions=n.actions,a.curves=n.curves,e.push(a)}return e}function n(t,e){for(var r=1e-10,i=e.length,n=!1,a=i-1,o=0;o<i;a=o++){var s=e[a],h=e[o],l=h.x-s.x,c=h.y-s.y
if(Math.abs(c)>r){if(c<0&&(s=e[o],l=-l,h=e[a],c=-c),t.y<s.y||t.y>h.y)continue
if(t.y==s.y){if(t.x==s.x)return!0}else{var u=c*(t.x-s.x)-l*(t.y-s.y)
if(0==u)return!0
if(u<0)continue
n=!n}}else{if(t.y!=s.y)continue
if(h.x<=t.x&&t.x<=s.x||s.x<=t.x&&t.x<=h.x)return!0}}return n}var a=r(this.actions)
if(0==a.length)return[]
if(e===!0)return i(a)
var o,s,h,l=[]
if(1==a.length)return s=a[0],h=new THREE.Shape,h.actions=s.actions,h.curves=s.curves,l.push(h),l
var c=!THREE.Shape.Utils.isClockWise(a[0].getPoints())
c=t?!c:c
var u,f=[],E=[],p=[],d=0
E[d]=void 0,p[d]=[]
var m,v
for(m=0,v=a.length;m<v;m++)s=a[m],u=s.getPoints(),o=THREE.Shape.Utils.isClockWise(u),o=t?!o:o,o?(!c&&E[d]&&d++,E[d]={s:new THREE.Shape,p:u},E[d].s.actions=s.actions,E[d].s.curves=s.curves,c&&d++,p[d]=[]):p[d].push({h:s,p:u[0]})
if(!E[0])return i(a)
if(E.length>1){for(var g=!1,T=[],y=0,R=E.length;y<R;y++)f[y]=[]
for(var y=0,R=E.length;y<R;y++)for(var x=(E[y],p[y]),H=0;H<x.length;H++){for(var b=x[H],_=!0,w=0;w<E.length;w++)n(b.p,E[w].p)&&(y!=w&&T.push({froms:y,tos:w,hole:H}),_?(_=!1,f[w].push(b)):g=!0)
_&&f[y].push(b)}T.length>0&&(g||(p=f))}var M,S,C
for(m=0,v=E.length;m<v;m++)for(h=E[m].s,l.push(h),M=p[m],S=0,C=M.length;S<C;S++)h.holes.push(M[S].h)
return l},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(t){var e=new THREE.ExtrudeGeometry(this,t)
return e},THREE.Shape.prototype.makeGeometry=function(t){var e=new THREE.ShapeGeometry(this,t)
return e},THREE.Shape.prototype.getPointsHoles=function(t){var e,r=this.holes.length,i=[]
for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedPoints(t,this.bends)
return i},THREE.Shape.prototype.getSpacedPointsHoles=function(t){var e,r=this.holes.length,i=[]
for(e=0;e<r;e++)i[e]=this.holes[e].getTransformedSpacedPoints(t,this.bends)
return i},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getTransformedPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.useSpacedPoints?this.extractAllSpacedPoints(t):this.extractAllPoints(t)},THREE.Shape.prototype.extractAllSpacedPoints=function(t){return{shape:this.getTransformedSpacedPoints(t),holes:this.getSpacedPointsHoles(t)}},THREE.Shape.Utils={triangulateShape:function(t,e){function r(t,e,r){return t.x!=e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function i(t,e,i,n,a){var o=1e-10,s=e.x-t.x,h=e.y-t.y,l=n.x-i.x,c=n.y-i.y,u=t.x-i.x,f=t.y-i.y,E=h*l-s*c,p=h*u-s*f
if(Math.abs(E)>o){var d
if(E>0){if(p<0||p>E)return[]
if(d=c*u-l*f,d<0||d>E)return[]}else{if(p>0||p<E)return[]
if(d=c*u-l*f,d>0||d<E)return[]}if(0==d)return!a||0!=p&&p!=E?[t]:[]
if(d==E)return!a||0!=p&&p!=E?[e]:[]
if(0==p)return[i]
if(p==E)return[n]
var m=d/E
return[{x:t.x+m*s,y:t.y+m*h}]}if(0!=p||c*u!=l*f)return[]
var v=0==s&&0==h,g=0==l&&0==c
if(v&&g)return t.x!=i.x||t.y!=i.y?[]:[t]
if(v)return r(i,n,t)?[t]:[]
if(g)return r(t,e,i)?[i]:[]
var T,y,R,x,H,b,_,w
return 0!=s?(t.x<e.x?(T=t,R=t.x,y=e,x=e.x):(T=e,R=e.x,y=t,x=t.x),i.x<n.x?(H=i,_=i.x,b=n,w=n.x):(H=n,_=n.x,b=i,w=i.x)):(t.y<e.y?(T=t,R=t.y,y=e,x=e.y):(T=e,R=e.y,y=t,x=t.y),i.y<n.y?(H=i,_=i.y,b=n,w=n.y):(H=n,_=n.y,b=i,w=i.y)),R<=_?x<_?[]:x==_?a?[]:[H]:x<=w?[H,y]:[H,b]:R>w?[]:R==w?a?[]:[T]:x<=w?[T,y]:[T,b]}function n(t,e,r,i){var n=1e-10,a=e.x-t.x,o=e.y-t.y,s=r.x-t.x,h=r.y-t.y,l=i.x-t.x,c=i.y-t.y,u=a*h-o*s,f=a*c-o*l
if(Math.abs(u)>n){var E=l*h-c*s
return u>0?f>=0&&E>=0:f>=0||E>=0}return f>0}function a(t,e){function r(t,e){var r=g.length-1,i=t-1
i<0&&(i=r)
var a=t+1
a>r&&(a=0)
var o=n(g[t],g[i],g[a],s[e])
if(!o)return!1
var h=s.length-1,l=e-1
l<0&&(l=h)
var c=e+1
return c>h&&(c=0),o=n(s[e],s[l],s[c],g[t]),!!o}function a(t,e){var r,n,a
for(r=0;r<g.length;r++)if(n=r+1,n%=g.length,a=i(t,e,g[r],g[n],!0),a.length>0)return!0
return!1}function o(t,r){var n,a,o,s,h
for(n=0;n<T.length;n++)for(a=e[T[n]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,h=i(t,r,a[o],a[s],!0),h.length>0)return!0
return!1}for(var s,h,l,c,u,f,E,p,d,m,v,g=t.concat(),T=[],y=[],R=0,x=e.length;R<x;R++)T.push(R)
for(var H=0,b=2*T.length;T.length>0;){if(b--,b<0){console.log("Infinite Loop! Holes left:"+T.length+", Probably Hole outside Shape!")
break}for(l=H;l<g.length;l++){c=g[l],h=-1
for(var R=0;R<T.length;R++)if(f=T[R],E=c.x+":"+c.y+":"+f,void 0===y[E]){s=e[f]
for(var _=0;_<s.length;_++)if(u=s[_],r(l,_)&&!a(c,u)&&!o(c,u)){h=_,T.splice(R,1),p=g.slice(0,l+1),d=g.slice(l),m=s.slice(h),v=s.slice(0,h+1),g=p.concat(m).concat(v).concat(d),H=l
break}if(h>=0)break
y[E]=!0}if(h>=0)break}}return g}for(var o,s,h,l,c,u,f={},E=t.concat(),p=0,d=e.length;p<d;p++)Array.prototype.push.apply(E,e[p])
for(o=0,s=E.length;o<s;o++)c=E[o].x+":"+E[o].y,void 0!==f[c]&&console.log("Duplicate point",c),f[c]=o
var m=a(t,e),v=THREE.FontUtils.Triangulate(m,!1)
for(o=0,s=v.length;o<s;o++)for(l=v[o],h=0;h<3;h++)c=l[h].x+":"+l[h].y,u=f[c],void 0!==u&&(l[h]=u)
return v.concat()},isClockWise:function(t){return THREE.FontUtils.Triangulate.area(t)<0},b2p0:function(t,e){var r=1-t
return r*r*e},b2p1:function(t,e){return 2*(1-t)*t*e},b2p2:function(t,e){return t*t*e},b2:function(t,e,r,i){return this.b2p0(t,e)+this.b2p1(t,r)+this.b2p2(t,i)},b3p0:function(t,e){var r=1-t
return r*r*r*e},b3p1:function(t,e){var r=1-t
return 3*r*r*t*e},b3p2:function(t,e){var r=1-t
return 3*r*t*t*e},b3p3:function(t,e){return t*t*t*e},b3:function(t,e,r,i,n){return this.b3p0(t,e)+this.b3p1(t,r)+this.b3p2(t,i)+this.b3p3(t,n)}},THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1)
return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(t){var e=this.v2.clone().sub(this.v1)
return e.normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e,r
return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(e,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e,r
e=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(t,this.v0.y,this.v1.y,this.v2.y)
var i=new THREE.Vector2(e,r)
return i.normalize(),i},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(t){var e,r
return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(e,r)},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e,r
e=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y)
var i=new THREE.Vector2(e,r)
return i.normalize(),i},THREE.SplineCurve=function(t){this.points=void 0==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(t){var e,r,i,n=new THREE.Vector2,a=[],o=this.points
return e=(o.length-1)*t,r=Math.floor(e),i=e-r,a[0]=0==r?r:r-1,a[1]=r,a[2]=r>o.length-2?o.length-1:r+1,a[3]=r>o.length-3?o.length-1:r+2,n.x=THREE.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,i),n.y=THREE.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,i),n},THREE.EllipseCurve=function(t,e,r,i,n,a,o){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=o},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(t){var e,r=this.aEndAngle-this.aStartAngle
r<0&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),e=this.aClockwise===!0?this.aEndAngle+(1-t)*(2*Math.PI-r):this.aStartAngle+t*r
var i=this.aX+this.xRadius*Math.cos(e),n=this.aY+this.yRadius*Math.sin(e)
return new THREE.Vector2(i,n)},THREE.ArcCurve=function(t,e,r,i,n,a){THREE.EllipseCurve.call(this,t,e,r,r,i,n,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.LineCurve3=THREE.Curve.create(function(t,e){this.v1=t,this.v2=e},function(t){var e=new THREE.Vector3
return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(t,e,r){this.v0=t,this.v1=e,this.v2=r},function(t){var e,r,i
return e=THREE.Shape.Utils.b2(t,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(t,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(t,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(e,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},function(t){var e,r,i
return e=THREE.Shape.Utils.b3(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(e,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r,i,n=new THREE.Vector3,a=[],o=this.points
e=(o.length-1)*t,r=Math.floor(e),i=e-r,a[0]=0==r?r:r-1,a[1]=r,a[2]=r>o.length-2?o.length-1:r+1,a[3]=r>o.length-3?o.length-1:r+2
var s=o[a[0]],h=o[a[1]],l=o[a[2]],c=o[a[3]]
return n.x=THREE.Curve.Utils.interpolate(s.x,h.x,l.x,c.x,i),n.y=THREE.Curve.Utils.interpolate(s.y,h.y,l.y,c.y,i),n.z=THREE.Curve.Utils.interpolate(s.z,h.z,l.z,c.z,i),n}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(t){this.points=void 0==t?[]:t},function(t){var e,r,i,n=new THREE.Vector3,a=[],o=this.points
return e=(o.length-0)*t,r=Math.floor(e),i=e-r,r+=r>0?0:(Math.floor(Math.abs(r)/o.length)+1)*o.length,a[0]=(r-1)%o.length,a[1]=r%o.length,a[2]=(r+1)%o.length,a[3]=(r+2)%o.length,n.x=THREE.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,i),n.y=THREE.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,i),n.z=THREE.Curve.Utils.interpolate(o[a[0]].z,o[a[1]].z,o[a[2]].z,o[a[3]].z,i),n}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(t){if(t.initialized!==!0){for(var e=0;e<t.hierarchy.length;e++){for(var r=0;r<t.hierarchy[e].keys.length;r++)if(t.hierarchy[e].keys[r].time<0&&(t.hierarchy[e].keys[r].time=0),void 0!==t.hierarchy[e].keys[r].rot&&!(t.hierarchy[e].keys[r].rot instanceof THREE.Quaternion)){var i=t.hierarchy[e].keys[r].rot
t.hierarchy[e].keys[r].rot=(new THREE.Quaternion).fromArray(i)}if(t.hierarchy[e].keys.length&&void 0!==t.hierarchy[e].keys[0].morphTargets){for(var n={},r=0;r<t.hierarchy[e].keys.length;r++)for(var a=0;a<t.hierarchy[e].keys[r].morphTargets.length;a++){var o=t.hierarchy[e].keys[r].morphTargets[a]
n[o]=-1}t.hierarchy[e].usedMorphTargets=n
for(var r=0;r<t.hierarchy[e].keys.length;r++){var s={}
for(var o in n){for(var a=0;a<t.hierarchy[e].keys[r].morphTargets.length;a++)if(t.hierarchy[e].keys[r].morphTargets[a]===o){s[o]=t.hierarchy[e].keys[r].morphTargetsInfluences[a]
break}a===t.hierarchy[e].keys[r].morphTargets.length&&(s[o]=0)}t.hierarchy[e].keys[r].morphTargetsInfluences=s}}for(var r=1;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].time===t.hierarchy[e].keys[r-1].time&&(t.hierarchy[e].keys.splice(r,1),r--)
for(var r=0;r<t.hierarchy[e].keys.length;r++)t.hierarchy[e].keys[r].index=r}return t.initialized=!0,t}},parse:function(t){var e=function(t,r){r.push(t)
for(var i=0;i<t.children.length;i++)e(t.children[i],r)},r=[]
if(t instanceof THREE.SkinnedMesh)for(var i=0;i<t.skeleton.bones.length;i++)r.push(t.skeleton.bones[i])
else e(t,r)
return r},play:function(t){this.animations.indexOf(t)===-1&&this.animations.push(t)},stop:function(t){var e=this.animations.indexOf(t)
e!==-1&&this.animations.splice(e,1)},update:function(t){for(var e=0;e<this.animations.length;e++)this.animations[e].update(t)}},THREE.Animation=function(t,e){this.root=t,this.data=THREE.AnimationHandler.init(e),this.hierarchy=THREE.AnimationHandler.parse(t),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype.keyTypes=["pos","rot","scl"],THREE.Animation.prototype.play=function(t,e){this.currentTime=void 0!==t?t:0,this.weight=void 0!==e?e:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},THREE.Animation.prototype.reset=function(){for(var t=0,e=this.hierarchy.length;t<e;t++){var r=this.hierarchy[t]
r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={}),void 0===r.animationCache[this.data.name]&&(r.animationCache[this.data.name]={},r.animationCache[this.data.name].prevKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].nextKey={pos:0,rot:0,scl:0},r.animationCache[this.data.name].originalMatrix=r.matrix)
for(var i=r.animationCache[this.data.name],n=0;n<3;n++){for(var a=this.keyTypes[n],o=this.data.hierarchy[t].keys[0],s=this.getNextKeyWith(a,t,1);s.time<this.currentTime&&s.index>o.index;)o=s,s=this.getNextKeyWith(a,t,s.index+1)
i.prevKey[a]=o,i.nextKey[a]=s}}},THREE.Animation.prototype.update=function(){var t=[],e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Quaternion,n=function(t,e){var r,i,n,o,s,h,l,c,u,f=[],E=[]
return r=(t.length-1)*e,i=Math.floor(r),n=r-i,f[0]=0===i?i:i-1,f[1]=i,f[2]=i>t.length-2?i:i+1,f[3]=i>t.length-3?i:i+2,h=t[f[0]],l=t[f[1]],c=t[f[2]],u=t[f[3]],o=n*n,s=n*o,E[0]=a(h[0],l[0],c[0],u[0],n,o,s),E[1]=a(h[1],l[1],c[1],u[1],n,o,s),E[2]=a(h[2],l[2],c[2],u[2],n,o,s),E},a=function(t,e,r,i,n,a,o){var s=.5*(r-t),h=.5*(i-e)
return(2*(e-r)+s+h)*o+(-3*(e-r)-2*s-h)*a+s*n+e}
return function(a){if(this.isPlaying!==!1&&(this.currentTime+=a*this.timeScale,0!==this.weight)){var o=this.data.length
if(this.loop===!0&&this.currentTime>o)this.currentTime%=o,this.reset()
else if(this.loop===!1&&this.currentTime>o)return void this.stop()
for(var s=0,h=this.hierarchy.length;s<h;s++)for(var l=this.hierarchy[s],c=l.animationCache[this.data.name],u=0;u<3;u++){var f=this.keyTypes[u],E=c.prevKey[f],p=c.nextKey[f]
if(p.time<=this.currentTime){for(E=this.data.hierarchy[s].keys[0],p=this.getNextKeyWith(f,s,1);p.time<this.currentTime&&p.index>E.index;)E=p,p=this.getNextKeyWith(f,s,p.index+1)
c.prevKey[f]=E,c.nextKey[f]=p}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0
var d=(this.currentTime-E.time)/(p.time-E.time),m=E[f],v=p[f]
if(d<0&&(d=0),d>1&&(d=1),"pos"===f){if(this.interpolationType===THREE.AnimationHandler.LINEAR)if(r.x=m[0]+(v[0]-m[0])*d,r.y=m[1]+(v[1]-m[1])*d,r.z=m[2]+(v[2]-m[2])*d,l instanceof THREE.Bone){var g=this.weight/(this.weight+l.accumulatedPosWeight)
l.position.lerp(r,g),l.accumulatedPosWeight+=this.weight}else l.position.copy(r)
else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){t[0]=this.getPrevKeyWith("pos",s,E.index-1).pos,t[1]=m,t[2]=v,t[3]=this.getNextKeyWith("pos",s,p.index+1).pos,d=.33*d+.33
var T=n(t,d),g=1
l instanceof THREE.Bone&&(g=this.weight/(this.weight+l.accumulatedPosWeight),l.accumulatedPosWeight+=this.weight)
var y=l.position
if(y.x=y.x+(T[0]-y.x)*g,y.y=y.y+(T[1]-y.y)*g,y.z=y.z+(T[2]-y.z)*g,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var R=n(t,1.01*d)
e.set(R[0],R[1],R[2]),e.sub(y),e.y=0,e.normalize()
var x=Math.atan2(e.x,e.z)
l.rotation.set(0,x,0)}}}else if("rot"===f)if(THREE.Quaternion.slerp(m,v,i,d),l instanceof THREE.Bone)if(0===l.accumulatedRotWeight)l.quaternion.copy(i),l.accumulatedRotWeight=this.weight
else{var g=this.weight/(this.weight+l.accumulatedRotWeight)
THREE.Quaternion.slerp(l.quaternion,i,l.quaternion,g),l.accumulatedRotWeight+=this.weight}else l.quaternion.copy(i)
else if("scl"===f)if(r.x=m[0]+(v[0]-m[0])*d,r.y=m[1]+(v[1]-m[1])*d,r.z=m[2]+(v[2]-m[2])*d,l instanceof THREE.Bone){var g=this.weight/(this.weight+l.accumulatedSclWeight)
l.scale.lerp(r,g),l.accumulatedSclWeight+=this.weight}else l.scale.copy(r)}return!0}}}(),THREE.Animation.prototype.getNextKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys
for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=r<i.length-1?r:i.length-1:r%=i.length;r<i.length;r++)if(void 0!==i[r][t])return i[r]
return this.data.hierarchy[e].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys
for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][t])return i[r]
return this.data.hierarchy[e].keys[i.length-1]},THREE.KeyFrameAnimation=function(t){this.root=t.node,this.data=THREE.AnimationHandler.init(t),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0
for(var e=0,r=this.hierarchy.length;e<r;e++){var i=this.data.hierarchy[e].keys,n=this.data.hierarchy[e].sids,a=this.hierarchy[e]
if(i.length&&n){for(var o=0;o<n.length;o++){var s=n[o],h=this.getNextKeyWith(s,e,0)
h&&h.apply(s)}a.matrixAutoUpdate=!1,this.data.hierarchy[e].node.updateMatrix(),a.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(t){if(this.currentTime=void 0!==t?t:0,this.isPlaying===!1){this.isPlaying=!0
var e,r,i,n=this.hierarchy.length
for(e=0;e<n;e++){r=this.hierarchy[e],i=this.data.hierarchy[e],void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=r.matrix)
var a=this.data.hierarchy[e].keys
a.length&&(i.animationCache.prevKey=a[0],i.animationCache.nextKey=a[1],this.startTime=Math.min(a[0].time,this.startTime),this.endTime=Math.max(a[a.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this)
for(var t=0;t<this.data.hierarchy.length;t++){var e=this.hierarchy[t],r=this.data.hierarchy[t]
if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix
i.copy(e.matrix),e.matrix=i,delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(t){if(this.isPlaying!==!1){this.currentTime+=t*this.timeScale
var e=this.data.length
this.loop===!0&&this.currentTime>e&&(this.currentTime%=e),this.currentTime=Math.min(this.currentTime,e)
for(var r=0,i=this.hierarchy.length;r<i;r++){var n=this.hierarchy[r],a=this.data.hierarchy[r],o=a.keys,s=a.animationCache
if(o.length){var h=s.prevKey,l=s.nextKey
if(l.time<=this.currentTime){for(;l.time<this.currentTime&&l.index>h.index;)h=l,l=o[h.index+1]
s.prevKey=h,s.nextKey=l}l.time>=this.currentTime?h.interpolate(l,this.currentTime):h.interpolate(l,l.time),this.data.hierarchy[r].node.updateMatrix(),n.matrixWorldNeedsUpdate=!0}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys
for(r%=i.length;r<i.length;r++)if(i[r].hasTarget(t))return i[r]
return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(t,e,r){var i=this.data.hierarchy[e].keys
for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(t))return i[r]
return i[i.length-1]},THREE.MorphAnimation=function(t){this.mesh=t,this.frames=t.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.isPlaying=!1},THREE.MorphAnimation.prototype={play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(){var t=0,e=0
return function(r){if(this.isPlaying!==!1){this.currentTime+=r,this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration)
var i=this.duration/this.frames,n=Math.floor(this.currentTime/i)
n!=e&&(this.mesh.morphTargetInfluences[t]=0,this.mesh.morphTargetInfluences[e]=1,this.mesh.morphTargetInfluences[n]=0,t=e,e=n),this.mesh.morphTargetInfluences[n]=this.currentTime%i/i,this.mesh.morphTargetInfluences[t]=1-this.mesh.morphTargetInfluences[n]}}}()},THREE.BoxGeometry=function(t,e,r,i,n,a){function o(t,e,r,i,n,a,o,h){var l,c,u,f=s.widthSegments,E=s.heightSegments,p=n/2,d=a/2,m=s.vertices.length
"x"===t&&"y"===e||"y"===t&&"x"===e?l="z":"x"===t&&"z"===e||"z"===t&&"x"===e?(l="y",E=s.depthSegments):("z"===t&&"y"===e||"y"===t&&"z"===e)&&(l="x",f=s.depthSegments)
var v=f+1,g=E+1,T=n/f,y=a/E,R=new THREE.Vector3
for(R[l]=o>0?1:-1,u=0;u<g;u++)for(c=0;c<v;c++){var x=new THREE.Vector3
x[t]=(c*T-p)*r,x[e]=(u*y-d)*i,x[l]=o,s.vertices.push(x)}for(u=0;u<E;u++)for(c=0;c<f;c++){var H=c+v*u,b=c+v*(u+1),_=c+1+v*(u+1),w=c+1+v*u,M=new THREE.Vector2(c/f,1-u/E),S=new THREE.Vector2(c/f,1-(u+1)/E),C=new THREE.Vector2((c+1)/f,1-(u+1)/E),A=new THREE.Vector2((c+1)/f,1-u/E),L=new THREE.Face3(H+m,b+m,w+m)
L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([M,S,A]),L=new THREE.Face3(b+m,_+m,w+m),L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,s.faces.push(L),s.faceVertexUvs[0].push([S.clone(),C,A.clone()])}}THREE.Geometry.call(this),this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:a},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=a||1
var s=this,h=t/2,l=e/2,c=r/2
o("z","y",-1,-1,r,e,h,0),o("z","y",1,-1,r,e,-h,1),o("x","z",1,1,t,r,l,2),o("x","z",1,-1,t,r,-l,3),o("x","y",1,-1,t,e,c,4),o("x","y",-1,-1,t,e,-c,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI
var n,a=[],o=new THREE.Vector3,s=new THREE.Vector2(.5,.5)
for(this.vertices.push(o),a.push(s),n=0;n<=e;n++){var h=new THREE.Vector3,l=r+n/e*i
h.x=t*Math.cos(l),h.y=t*Math.sin(l),this.vertices.push(h),a.push(new THREE.Vector2((h.x/t+1)/2,(h.y/t+1)/2))}var c=new THREE.Vector3(0,0,1)
for(n=1;n<=e;n++)this.faces.push(new THREE.Face3(n,n+1,0,[c.clone(),c.clone(),c.clone()])),this.faceVertexUvs[0].push([a[n].clone(),a[n+1].clone(),s.clone()])
this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(t,e,r,i,n,a){return console.warn("THEE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(t,e,r,i,n,a)},THREE.CylinderGeometry=function(t,e,r,i,n,a){THREE.Geometry.call(this),this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:a},t=void 0!==t?t:20,e=void 0!==e?e:20,r=void 0!==r?r:100,i=i||8,n=n||1,a=void 0!==a&&a
var o,s,h=r/2,l=[],c=[]
for(s=0;s<=n;s++){var u=[],f=[],E=s/n,p=E*(e-t)+t
for(o=0;o<=i;o++){var d=o/i,m=new THREE.Vector3
m.x=p*Math.sin(d*Math.PI*2),m.y=-E*r+h,m.z=p*Math.cos(d*Math.PI*2),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(d,1-E))}l.push(u),c.push(f)}var v,g,T=(e-t)/r
for(o=0;o<i;o++)for(0!==t?(v=this.vertices[l[0][o]].clone(),g=this.vertices[l[0][o+1]].clone()):(v=this.vertices[l[1][o]].clone(),g=this.vertices[l[1][o+1]].clone()),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*T).normalize(),g.setY(Math.sqrt(g.x*g.x+g.z*g.z)*T).normalize(),s=0;s<n;s++){var y=l[s][o],R=l[s+1][o],x=l[s+1][o+1],H=l[s][o+1],b=v.clone(),_=v.clone(),w=g.clone(),M=g.clone(),S=c[s][o].clone(),C=c[s+1][o].clone(),A=c[s+1][o+1].clone(),L=c[s][o+1].clone()
this.faces.push(new THREE.Face3(y,R,H,[b,_,M])),this.faceVertexUvs[0].push([S,C,L]),this.faces.push(new THREE.Face3(R,x,H,[_.clone(),w,M.clone()])),this.faceVertexUvs[0].push([C.clone(),A,L.clone()])}if(a===!1&&t>0)for(this.vertices.push(new THREE.Vector3(0,h,0)),o=0;o<i;o++){var y=l[0][o],R=l[0][o+1],x=this.vertices.length-1,b=new THREE.Vector3(0,1,0),_=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),S=c[0][o].clone(),C=c[0][o+1].clone(),A=new THREE.Vector2(C.x,0)
this.faces.push(new THREE.Face3(y,R,x,[b,_,w])),this.faceVertexUvs[0].push([S,C,A])}if(a===!1&&e>0)for(this.vertices.push(new THREE.Vector3(0,-h,0)),o=0;o<i;o++){var y=l[s][o+1],R=l[s][o],x=this.vertices.length-1,b=new THREE.Vector3(0,-1,0),_=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),S=c[s][o+1].clone(),C=c[s][o].clone(),A=new THREE.Vector2(C.x,1)
this.faces.push(new THREE.Face3(y,R,x,[b,_,w])),this.faceVertexUvs[0].push([S,C,A])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(t,e){return"undefined"==typeof t?void(t=[]):(THREE.Geometry.call(this),t=t instanceof Array?t:[t],this.addShapeList(t,e),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++){var n=t[i]
this.addShape(n,e)}},THREE.ExtrudeGeometry.prototype.addShape=function(t,e){function r(t,e,r){return e||console.log("die"),e.clone().multiplyScalar(r).add(t)}function i(t,e,r){var i,n,a=1e-10,o=THREE.Math.sign,s=1,h=t.x-e.x,l=t.y-e.y,c=r.x-t.x,u=r.y-t.y,f=h*h+l*l,E=h*u-l*c
if(Math.abs(E)>a){var p=Math.sqrt(f),d=Math.sqrt(c*c+u*u),m=e.x-l/p,v=e.y+h/p,g=r.x-u/d,T=r.y+c/d,y=((g-m)*u-(T-v)*c)/(h*u-l*c)
i=m+h*y-t.x,n=v+l*y-t.y
var R=i*i+n*n
if(R<=2)return new THREE.Vector2(i,n)
s=Math.sqrt(R/2)}else{var x=!1
h>a?c>a&&(x=!0):h<-a?c<-a&&(x=!0):o(l)==o(u)&&(x=!0),x?(i=-l,n=h,s=Math.sqrt(f)):(i=h,n=l,s=Math.sqrt(f/2))}return new THREE.Vector2(i/s,n/s)}function n(){if(T){var t=0,e=W*t
for(Y=0;Y<j;Y++)G=V[Y],h(G[2]+e,G[1]+e,G[0]+e,!0)
for(t=R+2*g,e=W*t,Y=0;Y<j;Y++)G=V[Y],h(G[0]+e,G[1]+e,G[2]+e,!1)}else{for(Y=0;Y<j;Y++)G=V[Y],h(G[2],G[1],G[0],!0)
for(Y=0;Y<j;Y++)G=V[Y],h(G[0]+W*R,G[1]+W*R,G[2]+W*R,!1)}}function a(){var t=0
for(o(z,t),t+=z.length,S=0,C=D.length;S<C;S++)M=D[S],o(M,t),t+=M.length}function o(t,e){var r,i
for(Y=t.length;--Y>=0;){r=Y,i=Y-1,i<0&&(i=t.length-1)
var n=0,a=R+2*g
for(n=0;n<a;n++){var o=W*n,s=W*(n+1),h=e+r+o,c=e+i+o,u=e+i+s,f=e+r+s
l(h,c,u,f,t,n,a,r,i)}}}function s(t,e,r){A.vertices.push(new THREE.Vector3(t,e,r))}function h(r,i,n,a){r+=L,i+=L,n+=L,A.faces.push(new THREE.Face3(r,i,n,null,null,b))
var o=a?w.generateBottomUV(A,t,e,r,i,n):w.generateTopUV(A,t,e,r,i,n)
A.faceVertexUvs[0].push(o)}function l(r,i,n,a,o,s,h,l,c){r+=L,i+=L,n+=L,a+=L,A.faces.push(new THREE.Face3(r,i,a,null,null,_)),A.faces.push(new THREE.Face3(i,n,a,null,null,_))
var u=w.generateSideWallUV(A,t,o,e,r,i,n,a,s,h,l,c)
A.faceVertexUvs[0].push([u[0],u[1],u[3]]),A.faceVertexUvs[0].push([u[1],u[2],u[3]])}var c,u,f,E,p,d=void 0!==e.amount?e.amount:100,m=void 0!==e.bevelThickness?e.bevelThickness:6,v=void 0!==e.bevelSize?e.bevelSize:m-2,g=void 0!==e.bevelSegments?e.bevelSegments:3,T=void 0===e.bevelEnabled||e.bevelEnabled,y=void 0!==e.curveSegments?e.curveSegments:12,R=void 0!==e.steps?e.steps:1,x=e.extrudePath,H=!1,b=e.material,_=e.extrudeMaterial,w=void 0!==e.UVGenerator?e.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator
x&&(c=x.getSpacedPoints(R),H=!0,T=!1,u=void 0!==e.frames?e.frames:new THREE.TubeGeometry.FrenetFrames(x,R,!1),f=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3),T||(g=0,m=0,v=0)
var M,S,C,A=this,L=this.vertices.length,P=t.extractPoints(y),F=P.shape,D=P.holes,U=!THREE.Shape.Utils.isClockWise(F)
if(U){for(F=F.reverse(),S=0,C=D.length;S<C;S++)M=D[S],THREE.Shape.Utils.isClockWise(M)&&(D[S]=M.reverse())
U=!1}var V=THREE.Shape.Utils.triangulateShape(F,D),z=F
for(S=0,C=D.length;S<C;S++)M=D[S],F=F.concat(M)
for(var B,k,N,O,I,G,W=F.length,j=V.length,X=(z.length,180/Math.PI,[]),Y=0,q=z.length,K=q-1,Z=Y+1;Y<q;Y++,K++,Z++){K===q&&(K=0),Z===q&&(Z=0)
z[Y],z[K],z[Z]
X[Y]=i(z[Y],z[K],z[Z])}var Q,J=[],$=X.concat()
for(S=0,C=D.length;S<C;S++){for(M=D[S],Q=[],Y=0,q=M.length,K=q-1,Z=Y+1;Y<q;Y++,K++,Z++)K===q&&(K=0),Z===q&&(Z=0),Q[Y]=i(M[Y],M[K],M[Z])
J.push(Q),$=$.concat(Q)}for(B=0;B<g;B++){for(N=B/g,O=m*(1-N),k=v*Math.sin(N*Math.PI/2),Y=0,q=z.length;Y<q;Y++)I=r(z[Y],X[Y],k),s(I.x,I.y,-O)
for(S=0,C=D.length;S<C;S++)for(M=D[S],Q=J[S],Y=0,q=M.length;Y<q;Y++)I=r(M[Y],Q[Y],k),s(I.x,I.y,-O)}for(k=v,Y=0;Y<W;Y++)I=T?r(F[Y],$[Y],k):F[Y],H?(E.copy(u.normals[0]).multiplyScalar(I.x),f.copy(u.binormals[0]).multiplyScalar(I.y),p.copy(c[0]).add(E).add(f),s(p.x,p.y,p.z)):s(I.x,I.y,0)
var tt
for(tt=1;tt<=R;tt++)for(Y=0;Y<W;Y++)I=T?r(F[Y],$[Y],k):F[Y],H?(E.copy(u.normals[tt]).multiplyScalar(I.x),f.copy(u.binormals[tt]).multiplyScalar(I.y),p.copy(c[tt]).add(E).add(f),s(p.x,p.y,p.z)):s(I.x,I.y,d/R*tt)
for(B=g-1;B>=0;B--){for(N=B/g,O=m*(1-N),k=v*Math.sin(N*Math.PI/2),Y=0,q=z.length;Y<q;Y++)I=r(z[Y],X[Y],k),s(I.x,I.y,d+O)
for(S=0,C=D.length;S<C;S++)for(M=D[S],Q=J[S],Y=0,q=M.length;Y<q;Y++)I=r(M[Y],Q[Y],k),H?s(I.x,I.y+c[R-1].y,c[R-1].x+O):s(I.x,I.y,d+O)}n(),a()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i,n,a){var o=t.vertices[i].x,s=t.vertices[i].y,h=t.vertices[n].x,l=t.vertices[n].y,c=t.vertices[a].x,u=t.vertices[a].y
return[new THREE.Vector2(o,s),new THREE.Vector2(h,l),new THREE.Vector2(c,u)]},generateBottomUV:function(t,e,r,i,n,a){return this.generateTopUV(t,e,r,i,n,a)},generateSideWallUV:function(t,e,r,i,n,a,o,s,h,l,c,u){var f=t.vertices[n].x,E=t.vertices[n].y,p=t.vertices[n].z,d=t.vertices[a].x,m=t.vertices[a].y,v=t.vertices[a].z,g=t.vertices[o].x,T=t.vertices[o].y,y=t.vertices[o].z,R=t.vertices[s].x,x=t.vertices[s].y,H=t.vertices[s].z
return Math.abs(E-m)<.01?[new THREE.Vector2(f,1-p),new THREE.Vector2(d,1-v),new THREE.Vector2(g,1-y),new THREE.Vector2(R,1-H)]:[new THREE.Vector2(E,1-p),new THREE.Vector2(m,1-v),new THREE.Vector2(T,1-y),new THREE.Vector2(x,1-H)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),t instanceof Array==!1&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e)
return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){void 0===e&&(e={})
var r,i,n,a=void 0!==e.curveSegments?e.curveSegments:12,o=e.material,s=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,h=this.vertices.length,l=t.extractPoints(a),c=l.shape,u=l.holes,f=!THREE.Shape.Utils.isClockWise(c)
if(f){for(c=c.reverse(),r=0,i=u.length;r<i;r++)n=u[r],THREE.Shape.Utils.isClockWise(n)&&(u[r]=n.reverse())
f=!1}var E=THREE.Shape.Utils.triangulateShape(c,u),p=c
for(r=0,i=u.length;r<i;r++)n=u[r],c=c.concat(n)
var d,m,v=c.length,g=E.length
p.length
for(r=0;r<v;r++)d=c[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0))
for(r=0;r<g;r++){m=E[r]
var T=m[0]+h,y=m[1]+h,R=m[2]+h
this.faces.push(new THREE.Face3(T,y,R,null,null,o)),this.faceVertexUvs[0].push(s.generateBottomUV(this,t,e,T,y,R))}},THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),e=e||12,r=r||0,i=i||2*Math.PI
for(var n=1/(t.length-1),a=1/e,o=0,s=e;o<=s;o++)for(var h=r+o*a*i,l=Math.cos(h),c=Math.sin(h),u=0,f=t.length;u<f;u++){var E=t[u],p=new THREE.Vector3
p.x=l*E.x-c*E.y,p.y=c*E.x+l*E.y,p.z=E.z,this.vertices.push(p)}for(var d=t.length,o=0,s=e;o<s;o++)for(var u=0,f=t.length-1;u<f;u++){var m=u+d*o,v=m,g=m+d,l=m+1+d,T=m+1,y=o*a,R=u*n,x=y+a,H=R+n
this.faces.push(new THREE.Face3(v,g,T)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(x,R),new THREE.Vector2(y,H)]),this.faces.push(new THREE.Face3(g,l,T)),this.faceVertexUvs[0].push([new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(y,H)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.parameters={width:t,height:e,widthSegments:r,heightSegments:i}
var n,a,o=t/2,s=e/2,h=r||1,l=i||1,c=h+1,u=l+1,f=t/h,E=e/l,p=new THREE.Vector3(0,0,1)
for(a=0;a<u;a++){var d=a*E-s
for(n=0;n<c;n++){var m=n*f-o
this.vertices.push(new THREE.Vector3(m,-d,0))}}for(a=0;a<l;a++)for(n=0;n<h;n++){var v=n+c*a,g=n+c*(a+1),T=n+1+c*(a+1),y=n+1+c*a,R=new THREE.Vector2(n/h,1-a/l),x=new THREE.Vector2(n/h,1-(a+1)/l),H=new THREE.Vector2((n+1)/h,1-(a+1)/l),b=new THREE.Vector2((n+1)/h,1-a/l),_=new THREE.Face3(v,g,y)
_.normal.copy(p),_.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(_),this.faceVertexUvs[0].push([R,x,b]),_=new THREE.Face3(g,T,y),_.normal.copy(p),_.vertexNormals.push(p.clone(),p.clone(),p.clone()),this.faces.push(_),this.faceVertexUvs[0].push([x.clone(),H,b.clone()])}},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(t,e,r,i,n,a){THREE.Geometry.call(this),t=t||0,e=e||50,n=void 0!==n?n:0,a=void 0!==a?a:2*Math.PI,r=void 0!==r?Math.max(3,r):8,i=void 0!==i?Math.max(1,i):8
var o,s,h=[],l=t,c=(e-t)/i
for(o=0;o<i+1;o++){for(s=0;s<r+1;s++){var u=new THREE.Vector3,f=n+s/r*a
u.x=l*Math.cos(f),u.y=l*Math.sin(f),this.vertices.push(u),h.push(new THREE.Vector2((u.x/e+1)/2,(u.y/e+1)/2))}l+=c}var E=new THREE.Vector3(0,0,1)
for(o=0;o<i;o++){var p=o*(r+1)
for(s=0;s<r;s++){var f=s+p,d=f,m=f+r+1,v=f+r+2
this.faces.push(new THREE.Face3(d,m,v,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[v].clone()]),d=f,m=f+r+2,v=f+1,this.faces.push(new THREE.Face3(d,m,v,[E.clone(),E.clone(),E.clone()])),this.faceVertexUvs[0].push([h[d].clone(),h[m].clone(),h[v].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,l)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(t,e,r,i,n,a,o){THREE.Geometry.call(this),this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:a,thetaLength:o},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI
var s,h,l=[],c=[]
for(h=0;h<=r;h++){var u=[],f=[]
for(s=0;s<=e;s++){var E=s/e,p=h/r,d=new THREE.Vector3
d.x=-t*Math.cos(i+E*n)*Math.sin(a+p*o),d.y=t*Math.cos(a+p*o),d.z=t*Math.sin(i+E*n)*Math.sin(a+p*o),this.vertices.push(d),u.push(this.vertices.length-1),f.push(new THREE.Vector2(E,1-p))}l.push(u),c.push(f)}for(h=0;h<r;h++)for(s=0;s<e;s++){var m=l[h][s+1],v=l[h][s],g=l[h+1][s],T=l[h+1][s+1],y=this.vertices[m].clone().normalize(),R=this.vertices[v].clone().normalize(),x=this.vertices[g].clone().normalize(),H=this.vertices[T].clone().normalize(),b=c[h][s+1].clone(),_=c[h][s].clone(),w=c[h+1][s].clone(),M=c[h+1][s+1].clone()
Math.abs(this.vertices[m].y)===t?(b.x=(b.x+_.x)/2,this.faces.push(new THREE.Face3(m,g,T,[y,x,H])),this.faceVertexUvs[0].push([b,w,M])):Math.abs(this.vertices[g].y)===t?(w.x=(w.x+M.x)/2,this.faces.push(new THREE.Face3(m,v,g,[y,R,x])),this.faceVertexUvs[0].push([b,_,w])):(this.faces.push(new THREE.Face3(m,v,T,[y,R,H])),this.faceVertexUvs[0].push([b,_,M]),this.faces.push(new THREE.Face3(v,g,T,[R.clone(),x,H.clone()])),this.faceVertexUvs[0].push([_.clone(),w,M.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(t,e){e=e||{}
var r=THREE.FontUtils.generateShapes(t,e)
e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,e)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=r||8,i=i||6,n=n||2*Math.PI
for(var a=new THREE.Vector3,o=[],s=[],h=0;h<=r;h++)for(var l=0;l<=i;l++){var c=l/i*n,u=h/r*Math.PI*2
a.x=t*Math.cos(c),a.y=t*Math.sin(c)
var f=new THREE.Vector3
f.x=(t+e*Math.cos(u))*Math.cos(c),f.y=(t+e*Math.cos(u))*Math.sin(c),f.z=e*Math.sin(u),this.vertices.push(f),o.push(new THREE.Vector2(l/i,h/r)),s.push(f.clone().sub(a).normalize())}for(var h=1;h<=r;h++)for(var l=1;l<=i;l++){var E=(i+1)*h+l-1,p=(i+1)*(h-1)+l-1,d=(i+1)*(h-1)+l,m=(i+1)*h+l,v=new THREE.Face3(E,p,m,[s[E].clone(),s[p].clone(),s[m].clone()])
this.faces.push(v),this.faceVertexUvs[0].push([o[E].clone(),o[p].clone(),o[m].clone()]),v=new THREE.Face3(p,d,m,[s[p].clone(),s[d].clone(),s[m].clone()]),this.faces.push(v),this.faceVertexUvs[0].push([o[p].clone(),o[d].clone(),o[m].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(t,e,r,i,n,a,o){function s(t,e,r,i,n){var a=Math.cos(t),o=Math.sin(t),s=e/r*t,h=Math.cos(s),l=i*(2+h)*.5*a,c=i*(2+h)*o*.5,u=n*i*Math.sin(s)*.5
return new THREE.Vector3(l,c,u)}THREE.Geometry.call(this),this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,p:n,q:a,heightScale:o},t=t||100,e=e||40,r=r||64,i=i||8,n=n||2,a=a||3,o=o||1
for(var h=new Array(r),l=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,f=0;f<r;++f){h[f]=new Array(i)
var E=f/r*2*n*Math.PI,p=s(E,a,n,t,o),d=s(E+.01,a,n,t,o)
l.subVectors(d,p),c.addVectors(d,p),u.crossVectors(l,c),c.crossVectors(u,l),u.normalize(),c.normalize()
for(var m=0;m<i;++m){var v=m/i*2*Math.PI,g=-e*Math.cos(v),T=e*Math.sin(v),y=new THREE.Vector3
y.x=p.x+g*c.x+T*u.x,y.y=p.y+g*c.y+T*u.y,y.z=p.z+g*c.z+T*u.z,h[f][m]=this.vertices.push(y)-1}}for(var f=0;f<r;++f)for(var m=0;m<i;++m){var R=(f+1)%r,x=(m+1)%i,H=h[f][m],b=h[R][m],_=h[R][x],w=h[f][x],M=new THREE.Vector2(f/r,m/i),S=new THREE.Vector2((f+1)/r,m/i),C=new THREE.Vector2((f+1)/r,(m+1)/i),A=new THREE.Vector2(f/r,(m+1)/i)
this.faces.push(new THREE.Face3(H,b,w)),this.faceVertexUvs[0].push([M,S,A]),this.faces.push(new THREE.Face3(b,_,w)),this.faceVertexUvs[0].push([S.clone(),C,A.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(t,e,r,i,n){function a(t,e,r){return M.vertices.push(new THREE.Vector3(t,e,r))-1}THREE.Geometry.call(this),this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n},e=e||64,r=r||1,i=i||8,n=n||!1
var o,s,h,l,c,u,f,E,p,d,m,v,g,T,y,R,x,H,b,_,w=[],M=this,S=e+1,C=new THREE.Vector3,A=new THREE.TubeGeometry.FrenetFrames(t,e,n),L=A.tangents,P=A.normals,F=A.binormals
for(this.tangents=L,this.normals=P,this.binormals=F,p=0;p<S;p++)for(w[p]=[],l=p/(S-1),E=t.getPointAt(l),o=L[p],s=P[p],h=F[p],d=0;d<i;d++)c=d/i*2*Math.PI,u=-r*Math.cos(c),f=r*Math.sin(c),C.copy(E),C.x+=u*s.x+f*h.x,C.y+=u*s.y+f*h.y,C.z+=u*s.z+f*h.z,w[p][d]=a(C.x,C.y,C.z)
for(p=0;p<e;p++)for(d=0;d<i;d++)m=n?(p+1)%e:p+1,v=(d+1)%i,g=w[p][d],T=w[m][d],y=w[m][v],R=w[p][v],x=new THREE.Vector2(p/e,d/i),H=new THREE.Vector2((p+1)/e,d/i),b=new THREE.Vector2((p+1)/e,(d+1)/i),_=new THREE.Vector2(p/e,(d+1)/i),this.faces.push(new THREE.Face3(g,T,R)),this.faceVertexUvs[0].push([x,H,_]),this.faces.push(new THREE.Face3(T,y,R)),this.faceVertexUvs[0].push([H.clone(),b,_.clone()])
this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(t,e,r){function i(){E[0]=new THREE.Vector3,p[0]=new THREE.Vector3,a=Number.MAX_VALUE,o=Math.abs(f[0].x),s=Math.abs(f[0].y),h=Math.abs(f[0].z),o<=a&&(a=o,u.set(1,0,0)),s<=a&&(a=s,u.set(0,1,0)),h<=a&&u.set(0,0,1),d.crossVectors(f[0],u).normalize(),E[0].crossVectors(f[0],d),p[0].crossVectors(f[0],E[0])}var n,a,o,s,h,l,c,u=(new THREE.Vector3,new THREE.Vector3),f=(new THREE.Vector3,[]),E=[],p=[],d=new THREE.Vector3,m=new THREE.Matrix4,v=e+1,g=1e-4
for(this.tangents=f,this.normals=E,this.binormals=p,l=0;l<v;l++)c=l/(v-1),f[l]=t.getTangentAt(c),f[l].normalize()
for(i(),l=1;l<v;l++)E[l]=E[l-1].clone(),p[l]=p[l-1].clone(),d.crossVectors(f[l-1],f[l]),d.length()>g&&(d.normalize(),n=Math.acos(THREE.Math.clamp(f[l-1].dot(f[l]),-1,1)),E[l].applyMatrix4(m.makeRotationAxis(d,n))),p[l].crossVectors(f[l],E[l])
if(r)for(n=Math.acos(THREE.Math.clamp(E[0].dot(E[v-1]),-1,1)),n/=v-1,f[0].dot(d.crossVectors(E[0],E[v-1]))>0&&(n=-n),l=1;l<v;l++)E[l].applyMatrix4(m.makeRotationAxis(f[l],n*l)),p[l].crossVectors(f[l],E[l])},THREE.PolyhedronGeometry=function(t,e,r,i){function n(t){var e=t.normalize().clone()
e.index=c.vertices.push(e)-1
var r=s(t)/2/Math.PI+.5,i=h(t)/Math.PI+.5
return e.uv=new THREE.Vector2(r,1-i),e}function a(t,e,r){var i=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()])
c.faces.push(i),T.copy(t).add(e).add(r).divideScalar(3)
var n=s(T)
c.faceVertexUvs[0].push([l(t.uv,t,n),l(e.uv,e,n),l(r.uv,r,n)])}function o(t,e){for(var r=Math.pow(2,e),i=(Math.pow(4,e),n(c.vertices[t.a])),o=n(c.vertices[t.b]),s=n(c.vertices[t.c]),h=[],l=0;l<=r;l++){h[l]=[]
for(var u=n(i.clone().lerp(s,l/r)),f=n(o.clone().lerp(s,l/r)),E=r-l,p=0;p<=E;p++)0==p&&l==r?h[l][p]=u:h[l][p]=n(u.clone().lerp(f,p/E))}for(var l=0;l<r;l++)for(var p=0;p<2*(r-l)-1;p++){var d=Math.floor(p/2)
p%2==0?a(h[l][d+1],h[l+1][d],h[l][d]):a(h[l][d+1],h[l+1][d+1],h[l+1][d])}}function s(t){return Math.atan2(t.z,-t.x)}function h(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}function l(t,e,r){return r<0&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),0===e.x&&0===e.z&&(t=new THREE.Vector2(r/2/Math.PI+.5,t.y)),t.clone()}THREE.Geometry.call(this),r=r||1,i=i||0
for(var c=this,u=0,f=t.length;u<f;u+=3)n(new THREE.Vector3(t[u],t[u+1],t[u+2]))
for(var E=this.vertices,p=[],u=0,d=0,f=e.length;u<f;u+=3,d++){var m=E[e[u]],v=E[e[u+1]],g=E[e[u+2]]
p[d]=new THREE.Face3(m.index,v.index,g.index,[m.clone(),v.clone(),g.clone()])}for(var T=new THREE.Vector3,u=0,f=p.length;u<f;u++)o(p[u],i)
for(var u=0,f=this.faceVertexUvs[0].length;u<f;u++){var y=this.faceVertexUvs[0][u],R=y[0].x,x=y[1].x,H=y[2].x,b=Math.max(R,Math.max(x,H)),_=Math.min(R,Math.min(x,H))
b>.9&&_<.1&&(R<.2&&(y[0].x+=1),x<.2&&(y[1].x+=1),H<.2&&(y[2].x+=1))}for(var u=0,f=this.vertices.length;u<f;u++)this.vertices[u].multiplyScalar(r)
this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(t,e){this.parameters={radius:t,detail:e}
var r=(1+Math.sqrt(5))/2,i=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],n=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]
THREE.PolyhedronGeometry.call(this,i,n,t,e)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(t,e){this.parameters={radius:t,detail:e}
var r=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2]
THREE.PolyhedronGeometry.call(this,r,i,t,e)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(t,e){var r=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1]
THREE.PolyhedronGeometry.call(this,r,i,t,e)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this)
var i,n,a,o,s,h=this.vertices,l=this.faces,c=this.faceVertexUvs[0],u=e+1
for(i=0;i<=r;i++)for(s=i/r,n=0;n<=e;n++)o=n/e,a=t(o,s),h.push(a)
var f,E,p,d,m,v,g,T
for(i=0;i<r;i++)for(n=0;n<e;n++)f=i*u+n,E=i*u+n+1,p=(i+1)*u+n+1,d=(i+1)*u+n,m=new THREE.Vector2(n/e,i/r),v=new THREE.Vector2((n+1)/e,i/r),g=new THREE.Vector2((n+1)/e,(i+1)/r),T=new THREE.Vector2(n/e,(i+1)/r),l.push(new THREE.Face3(f,E,d)),c.push([m,v,T]),l.push(new THREE.Face3(E,p,d)),c.push([v.clone(),g,T.clone()])
this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(t){t=t||1
var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),i=new THREE.BufferGeometry
i.addAttribute("position",new THREE.BufferAttribute(e,3)),i.addAttribute("color",new THREE.BufferAttribute(r,3))
var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors})
THREE.Line.call(this,i,n,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(){var t=new THREE.Geometry
t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0))
var e=new THREE.CylinderGeometry(0,.5,1,5,1)
return e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(r,i,n,a,o,s){THREE.Object3D.call(this),void 0===a&&(a=16776960),void 0===n&&(n=1),void 0===o&&(o=.2*n),void 0===s&&(s=.2*o),this.position.copy(i),this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:a})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:a})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,o,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var t,e=new THREE.Vector3
return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),this.line.scale.set(1,t,1),this.line.updateMatrix(),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new THREE.BufferGeometry
e.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,e,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(t){var e=t.geometry
null===e.boundingBox&&e.computeBoundingBox()
var r=e.boundingBox.min,i=e.boundingBox.max,n=this.geometry.attributes.position.array
n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=r.x,n[4]=i.y,n[5]=i.z,n[6]=r.x,n[7]=i.y,n[8]=i.z,n[9]=r.x,n[10]=r.y,n[11]=i.z,n[12]=r.x,n[13]=r.y,n[14]=i.z,n[15]=i.x,n[16]=r.y,n[17]=i.z,n[18]=i.x,n[19]=r.y,n[20]=i.z,n[21]=i.x,n[22]=i.y,n[23]=i.z,n[24]=i.x,n[25]=i.y,n[26]=r.z,n[27]=r.x,n[28]=i.y,n[29]=r.z,n[30]=r.x,n[31]=i.y,n[32]=r.z,n[33]=r.x,n[34]=r.y,n[35]=r.z,n[36]=r.x,n[37]=r.y,n[38]=r.z,n[39]=i.x,n[40]=r.y,n[41]=r.z,n[42]=i.x,n[43]=r.y,n[44]=r.z,n[45]=i.x,n[46]=i.y,n[47]=r.z,n[48]=i.x,n[49]=i.y,n[50]=i.z,n[51]=i.x,n[52]=i.y,n[53]=r.z,n[54]=r.x,n[55]=i.y,n[56]=i.z,n[57]=r.x,n[58]=i.y,n[59]=r.z,n[60]=r.x,n[61]=r.y,n[62]=i.z,n[63]=r.x,n[64]=r.y,n[65]=r.z,n[66]=i.x,n[67]=r.y,n[68]=i.z,n[69]=i.x,n[70]=r.y,n[71]=r.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.BoundingBoxHelper=function(t,e){var r=void 0!==e?e:8947848
this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){function e(t,e,i){r(t,i),r(e,i)}function r(t,e){i.vertices.push(new THREE.Vector3),i.colors.push(new THREE.Color(e)),void 0===a[t]&&(a[t]=[]),a[t].push(i.vertices.length-1)}var i=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),a={},o=16755200,s=16711680,h=43775,l=16777215,c=3355443
e("n1","n2",o),e("n2","n4",o),e("n4","n3",o),e("n3","n1",o),e("f1","f2",o),e("f2","f4",o),e("f4","f3",o),e("f3","f1",o),e("n1","f1",o),e("n2","f2",o),e("n3","f3",o),e("n4","f4",o),e("p","n1",s),e("p","n2",s),e("p","n3",s),e("p","n4",s),e("u1","u2",h),e("u2","u3",h),e("u3","u1",h),e("c","t",l),e("p","c",c),e("cn1","cn2",c),e("cn3","cn4",c),e("cf1","cf2",c),e("cf3","cf4",c),THREE.Line.call(this,i,n,THREE.LinePieces),this.camera=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Camera,r=new THREE.Projector
return function(){function i(i,a,o,s){t.set(a,o,s),r.unprojectVector(t,e)
var h=n.pointMap[i]
if(void 0!==h)for(var l=0,c=h.length;l<c;l++)n.geometry.vertices[h[l]].copy(t)}var n=this,a=1,o=1
e.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-a,-o,-1),i("n2",a,-o,-1),i("n3",-a,o,-1),i("n4",a,o,-1),i("f1",-a,-o,1),i("f2",a,-o,1),i("f3",-a,o,1),i("f4",a,o,1),i("u1",.7*a,1.1*o,-1),i("u2",.7*-a,1.1*o,-1),i("u3",0,2*o,-1),i("cf1",-a,0,1),i("cf2",a,0,1),i("cf3",0,-o,1),i("cf4",0,o,1),i("cn1",-a,0,-1),i("cn2",a,0,-1),i("cn3",0,-o,-1),i("cn4",0,o,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1
var r=new THREE.Geometry
r.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0))
var i=new THREE.LineBasicMaterial({fog:!1})
i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),r=new THREE.Geometry,r.vertices.push(new THREE.Vector3,new THREE.Vector3),i=new THREE.LineBasicMaterial({fog:!1}),i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3
return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},a=function(t,e){return t-e},o=["a","b","c"],s=new THREE.BufferGeometry,h=t.geometry.clone()
h.mergeVertices(),h.computeFaceNormals()
for(var l=h.vertices,c=h.faces,u=0,f=0,E=c.length;f<E;f++)for(var p=c[f],d=0;d<3;d++){i[0]=p[o[d]],i[1]=p[o[(d+1)%3]],i.sort(a)
var m=i.toString()
void 0===n[m]?(n[m]={vert1:i[0],vert2:i[1],face1:f,face2:void 0},u++):n[m].face2=f}s.addAttribute("position",new THREE.Float32Attribute(2*u*3,3))
var v=s.attributes.position.array,g=0
for(var m in n){var T=n[m]
if(void 0===T.face2||c[T.face1].normal.dot(c[T.face2].normal)<.9999){var y=l[T.vert1]
v[g++]=y.x,v[g++]=y.y,v[g++]=y.z,y=l[T.vert2],v[g++]=y.x,v[g++]=y.y,v[g++]=y.z}}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1
for(var n=void 0!==r?r:16776960,a=void 0!==i?i:1,o=new THREE.Geometry,s=this.object.geometry.faces,h=0,l=s.length;h<l;h++)o.vertices.push(new THREE.Vector3,new THREE.Vector3)
THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.update=function(){var t=this.geometry.vertices,e=this.object,r=e.geometry.vertices,i=e.geometry.faces,n=e.matrixWorld
e.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(n)
for(var a=0,o=0,s=i.length;a<s;a++,o+=2){var h=i[a]
t[o].copy(r[h.a]).add(r[h.b]).add(r[h.c]).divideScalar(3).applyMatrix4(n),t[o+1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(t[o])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors})
this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848)
for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3(-t,0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,-t),new THREE.Vector3(n,0,t))
var a=0===n?this.color1:this.color2
r.colors.push(a,a,a,a)}THREE.Line.call(this,r,i,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e,r,i){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color]
var n=new THREE.SphereGeometry(e,4,2)
n.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2))
for(var a=0,o=8;a<o;a++)n.faces[a].color=this.colors[a<4?0:1]
var s=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0})
this.lightSphere=new THREE.Mesh(n,s),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3
return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld()
var r=new THREE.SphereGeometry(e,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1})
i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrixWorld=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()}
THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}
THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t)
for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++){var i=this.bones[r]
i.parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)))}var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0})
THREE.Line.call(this,e,n,THREE.LinePieces),this.root=t,this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[]
t instanceof THREE.Bone&&e.push(t)
for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]))
return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var a=this.bones[n]
a.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,a.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,a.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrixWorld=t.matrixWorld,this.matrixAutoUpdate=!1
var e=new THREE.CylinderGeometry(0,1,1,8,1,!0)
e.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2))
var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1})
this.cone=new THREE.Mesh(e,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3
return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle)
this.cone.scale.set(i,i,r),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1
for(var n=void 0!==r?r:16711680,a=void 0!==i?i:1,o=new THREE.Geometry,s=(t.geometry.vertices,t.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=s[h],u=0,f=c.vertexNormals.length;u<f;u++)o.vertices.push(new THREE.Vector3,new THREE.Vector3)
THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.update=function(t){var e=new THREE.Vector3
return function(t){var r=["a","b","c","d"]
this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld)
for(var i=this.geometry.vertices,n=this.object.geometry.vertices,a=this.object.geometry.faces,o=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,f=c.vertexNormals.length;u<f;u++){var E=c[r[u]],p=n[E],d=c.vertexNormals[u]
i[s].copy(p).applyMatrix4(o),e.copy(d).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),e.add(i[s]),s+=1,i[s].copy(e),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1
for(var n=void 0!==r?r:255,a=void 0!==i?i:1,o=new THREE.Geometry,s=(t.geometry.vertices,t.geometry.faces),h=0,l=s.length;h<l;h++)for(var c=s[h],u=0,f=c.vertexTangents.length;u<f;u++)o.vertices.push(new THREE.Vector3),o.vertices.push(new THREE.Vector3)
THREE.Line.call(this,o,new THREE.LineBasicMaterial({color:n,linewidth:a}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.update=function(t){var e=new THREE.Vector3
return function(t){var r=["a","b","c","d"]
this.object.updateMatrixWorld(!0)
for(var i=this.geometry.vertices,n=this.object.geometry.vertices,a=this.object.geometry.faces,o=this.object.matrixWorld,s=0,h=0,l=a.length;h<l;h++)for(var c=a[h],u=0,f=c.vertexTangents.length;u<f;u++){var E=c[r[u]],p=n[E],d=c.vertexTangents[u]
i[s].copy(p).applyMatrix4(o),e.copy(d).transformDirection(o).multiplyScalar(this.size),e.add(i[s]),s+=1,i[s].copy(e),s+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){var r=void 0!==e?e:16777215,i=[0,0],n={},a=function(t,e){return t-e},o=["a","b","c"],s=new THREE.BufferGeometry
if(t.geometry instanceof THREE.Geometry){for(var h=t.geometry.vertices,l=t.geometry.faces,c=0,u=new Uint32Array(6*l.length),f=0,E=l.length;f<E;f++)for(var p=l[f],d=0;d<3;d++){i[0]=p[o[d]],i[1]=p[o[(d+1)%3]],i.sort(a)
var m=i.toString()
void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var v=new Float32Array(2*c*3),f=0,E=c;f<E;f++)for(var d=0;d<2;d++){var g=h[u[2*f+d]],T=6*f+3*d
v[T+0]=g.x,v[T+1]=g.y,v[T+2]=g.z}s.addAttribute("position",new THREE.BufferAttribute(v,3))}else if(t.geometry instanceof THREE.BufferGeometry)if(void 0!==t.geometry.attributes.index){for(var h=t.geometry.attributes.position.array,y=t.geometry.attributes.index.array,R=t.geometry.offsets,c=0,u=new Uint32Array(2*y.length),x=0,H=R.length;x<H;++x)for(var b=R[x].start,_=R[x].count,T=R[x].index,f=b,w=b+_;f<w;f+=3)for(var d=0;d<3;d++){i[0]=T+y[f+d],i[1]=T+y[f+(d+1)%3],i.sort(a)
var m=i.toString()
void 0===n[m]&&(u[2*c]=i[0],u[2*c+1]=i[1],n[m]=!0,c++)}for(var v=new Float32Array(2*c*3),f=0,E=c;f<E;f++)for(var d=0;d<2;d++){var T=6*f+3*d,M=3*u[2*f+d]
v[T+0]=h[M],v[T+1]=h[M+1],v[T+2]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(v,3))}else{for(var h=t.geometry.attributes.position.array,c=h.length/3,S=c/3,v=new Float32Array(2*c*3),f=0,E=S;f<E;f++)for(var d=0;d<3;d++){var T=18*f+6*d,C=9*f+3*d
v[T+0]=h[C],v[T+1]=h[C+1],v[T+2]=h[C+2]
var M=9*f+3*((d+1)%3)
v[T+3]=h[M],v[T+4]=h[M+1],v[T+5]=h[M+2]}s.addAttribute("position",new THREE.BufferAttribute(v,3))}THREE.Line.call(this,s,new THREE.LineBasicMaterial({color:r}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.matrixWorld=t.matrixWorld},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(t){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(t,e,r,i,n,a){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y
for(t=0;t<r;t++)e=this.lensFlares[t],e.x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[]
var r=this.geometry.morphTargets.length,i="__default",n=0,a=r-1,o=r/1
this.createAnimation(i,n,a,o),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){var n={startFrame:e,endFrame:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1}
this.animationsMap[t]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,a=0,o=n.morphTargets.length;a<o;a++){var s=n.morphTargets[a],h=s.name.match(r)
if(h&&h.length>1){var l=h[1]
h[2]
i[l]||(i[l]={start:1/0,end:-(1/0)})
var c=i[l]
a<c.start&&(c.start=a),a>c.end&&(c.end=a),e||(e=l)}}for(var l in i){var c=i[l]
this.createAnimation(l,c.start,c.end,t)}this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){var e=this.animationsMap[t]
e&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){var e=this.animationsMap[t]
e&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){var r=this.animationsMap[t]
r&&(r.fps=e,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){var r=this.animationsMap[t]
r&&(r.duration=e,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){var r=this.animationsMap[t]
r&&(r.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){var r=this.animationsMap[t]
r&&(r.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0,r=this.animationsMap[t]
return r&&(e=r.time),e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1,r=this.animationsMap[t]
return r&&(e=r.duration),e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t]
e?(e.time=0,e.active=!0):console.warn("animation["+t+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){var e=this.animationsMap[t]
e&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i=this.animationsList[e]
if(i.active){var n=i.duration/i.length
i.time+=i.direction*t,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration))
var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),o=i.weight
a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*o,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a)
var s=i.time%n/n
i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*o,this.morphTargetInfluences[i.lastFrame]=(1-s)*o}}},THREE.LensFlarePlugin=function(){function t(t,r){var i=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),a=e.createShader(e.VERTEX_SHADER),o="precision "+r+" float;\n"
return e.shaderSource(n,o+t.fragmentShader),e.shaderSource(a,o+t.vertexShader),e.compileShader(n),e.compileShader(a),e.attachShader(i,n),e.attachShader(i,a),e.linkProgram(i),i}var e,r,i,n=[],a={}
this.init=function(n){e=n.context,r=n,i=n.getPrecision(),a.vertices=new Float32Array(16),a.faces=new Uint16Array(6)
var o=0
a.vertices[o++]=-1,a.vertices[o++]=-1,a.vertices[o++]=0,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,o=0,a.faces[o++]=0,a.faces[o++]=1,a.faces[o++]=2,a.faces[o++]=0,a.faces[o++]=2,a.faces[o++]=3,a.vertexBuffer=e.createBuffer(),a.elementBuffer=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,a.vertexBuffer),e.bufferData(e.ARRAY_BUFFER,a.vertices,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a.elementBuffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,a.faces,e.STATIC_DRAW),a.tempTexture=e.createTexture(),a.occlusionTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,a.tempTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.bindTexture(e.TEXTURE_2D,a.occlusionTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(a.hasVertexTexture=!1,a.program=t(THREE.ShaderFlares.lensFlare,i)):(a.hasVertexTexture=!0,a.program=t(THREE.ShaderFlares.lensFlareVertexTexture,i)),a.attributes={},a.uniforms={},a.attributes.vertex=e.getAttribLocation(a.program,"position"),a.attributes.uv=e.getAttribLocation(a.program,"uv"),a.uniforms.renderType=e.getUniformLocation(a.program,"renderType"),a.uniforms.map=e.getUniformLocation(a.program,"map"),a.uniforms.occlusionMap=e.getUniformLocation(a.program,"occlusionMap"),a.uniforms.opacity=e.getUniformLocation(a.program,"opacity"),a.uniforms.color=e.getUniformLocation(a.program,"color"),a.uniforms.scale=e.getUniformLocation(a.program,"scale"),a.uniforms.rotation=e.getUniformLocation(a.program,"rotation"),a.uniforms.screenPosition=e.getUniformLocation(a.program,"screenPosition")},this.render=function(t,i,o,s){if(n.length=0,t.traverseVisible(function(t){t instanceof THREE.LensFlare&&n.push(t)}),0!==n.length){var h=new THREE.Vector3,l=s/o,c=.5*o,u=.5*s,f=16/s,E=new THREE.Vector2(f*l,f),p=new THREE.Vector3(1,1,0),d=new THREE.Vector2(1,1),m=a.uniforms,v=a.attributes
e.useProgram(a.program),e.enableVertexAttribArray(a.attributes.vertex),e.enableVertexAttribArray(a.attributes.uv),e.uniform1i(m.occlusionMap,0),e.uniform1i(m.map,1),e.bindBuffer(e.ARRAY_BUFFER,a.vertexBuffer),e.vertexAttribPointer(v.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(v.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,a.elementBuffer),e.disable(e.CULL_FACE),e.depthMask(!1)
for(var g=0,T=n.length;g<T;g++){f=16/s,E.set(f*l,f)
var y=n[g]
if(h.set(y.matrixWorld.elements[12],y.matrixWorld.elements[13],y.matrixWorld.elements[14]),h.applyMatrix4(i.matrixWorldInverse),h.applyProjection(i.projectionMatrix),p.copy(h),d.x=p.x*c+c,d.y=p.y*u+u,a.hasVertexTexture||d.x>0&&d.x<o&&d.y>0&&d.y<s){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,a.tempTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,d.x-8,d.y-8,16,16,0),e.uniform1i(m.renderType,0),e.uniform2f(m.scale,E.x,E.y),e.uniform3f(m.screenPosition,p.x,p.y,p.z),e.disable(e.BLEND),e.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,a.occlusionTexture),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,d.x-8,d.y-8,16,16,0),e.uniform1i(m.renderType,1),e.disable(e.DEPTH_TEST),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,a.tempTexture),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),y.positionScreen.copy(p),y.customUpdateCallback?y.customUpdateCallback(y):y.updateLensFlares(),e.uniform1i(m.renderType,2),e.enable(e.BLEND)
for(var R=0,x=y.lensFlares.length;R<x;R++){var H=y.lensFlares[R]
H.opacity>.001&&H.scale>.001&&(p.x=H.x,p.y=H.y,p.z=H.z,f=H.size*H.scale/s,E.x=f*l,E.y=f,e.uniform3f(m.screenPosition,p.x,p.y,p.z),e.uniform2f(m.scale,E.x,E.y),e.uniform1f(m.rotation,H.rotation),e.uniform1f(m.opacity,H.opacity),e.uniform3f(m.color,H.color.r,H.color.g,H.color.b),r.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),r.setTexture(H.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}e.enable(e.CULL_FACE),e.enable(e.DEPTH_TEST),e.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id]
if(n&&r.castShadow&&(r.frustumCulled===!1||u.intersectsObject(r)===!0))for(var a=0,o=n.length;a<o;a++){var s=n[a]
r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),m.push(s)}for(var a=0,o=r.children.length;a<o;a++)t(e,r.children[a],i)}}function e(t,e){var r=new THREE.DirectionalLight
r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=t.shadowCameraNear,r.shadowCameraFar=t.shadowCameraFar,r.shadowCameraLeft=t.shadowCameraLeft,r.shadowCameraRight=t.shadowCameraRight,r.shadowCameraBottom=t.shadowCameraBottom,r.shadowCameraTop=t.shadowCameraTop,r.shadowCameraVisible=t.shadowCameraVisible,r.shadowDarkness=t.shadowDarkness,r.shadowBias=t.shadowCascadeBias[e],r.shadowMapWidth=t.shadowCascadeWidth[e],r.shadowMapHeight=t.shadowCascadeHeight[e],r.pointsWorld=[],r.pointsFrustum=[]
for(var i=r.pointsWorld,n=r.pointsFrustum,a=0;a<8;a++)i[a]=new THREE.Vector3,n[a]=new THREE.Vector3
var o=t.shadowCascadeNearZ[e],s=t.shadowCascadeFarZ[e]
return n[0].set(-1,-1,o),n[1].set(1,-1,o),n[2].set(-1,1,o),n[3].set(1,1,o),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function r(t,e){var r=t.shadowCascadeArray[e]
r.position.copy(t.position),r.target.position.copy(t.target.position),r.lookAt(r.target),r.shadowCameraVisible=t.shadowCameraVisible,r.shadowDarkness=t.shadowDarkness,r.shadowBias=t.shadowCascadeBias[e]
var i=t.shadowCascadeNearZ[e],n=t.shadowCascadeFarZ[e],a=r.pointsFrustum
a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=n,a[5].z=n,a[6].z=n,a[7].z=n}function i(t,e){var r=e.shadowCamera,i=e.pointsFrustum,n=e.pointsWorld
E.set(1/0,1/0,1/0),p.set(-(1/0),-(1/0),-(1/0))
for(var a=0;a<8;a++){var o=n[a]
o.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(o,t),o.applyMatrix4(r.matrixWorldInverse),o.x<E.x&&(E.x=o.x),o.x>p.x&&(p.x=o.x),o.y<E.y&&(E.y=o.y),o.y>p.y&&(p.y=o.y),o.z<E.z&&(E.z=o.z),o.z>p.z&&(p.z=o.z)}r.left=E.x,r.right=p.x,r.top=p.y,r.bottom=E.y,r.updateProjectionMatrix()}function n(t){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material}var a,o,s,h,l,c,u=new THREE.Frustum,f=new THREE.Matrix4,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=[]
this.init=function(t){a=t.context,o=t
var e=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(e.uniforms)
s=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r}),h=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,skinning:!0}),c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),s._shadowPass=!0,h._shadowPass=!0,l._shadowPass=!0,c._shadowPass=!0},this.render=function(t,e){o.shadowMapEnabled&&o.shadowMapAutoUpdate&&this.update(t,e)},this.update=function(E,p){var v,g,T,y,R,x,H,b,_,w,M,S,C,A=[],L=0,P=null
for(a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),a.frontFace(a.CCW),o.shadowMapCullFace===THREE.CullFaceFront?a.cullFace(a.FRONT):a.cullFace(a.BACK),o.setDepthTest(!0),v=0,g=E.__lights.length;v<g;v++)if(C=E.__lights[v],C.castShadow)if(C instanceof THREE.DirectionalLight&&C.shadowCascade)for(R=0;R<C.shadowCascadeCount;R++){var F
if(C.shadowCascadeArray[R])F=C.shadowCascadeArray[R]
else{F=e(C,R),F.originalCamera=p
var D=new THREE.Gyroscope
D.position.copy(C.shadowCascadeOffset),D.add(F),D.add(F.target),p.add(D),C.shadowCascadeArray[R]=F,console.log("Created virtualLight",F)}r(C,R),A[L]=F,L++}else A[L]=C,L++
for(v=0,g=A.length;v<g;v++){if(C=A[v],!C.shadowMap){var U=THREE.LinearFilter
o.shadowMapType===THREE.PCFSoftShadowMap&&(U=THREE.NearestFilter)
var V={minFilter:U,magFilter:U,format:THREE.RGBAFormat}
C.shadowMap=new THREE.WebGLRenderTarget(C.shadowMapWidth,C.shadowMapHeight,V),C.shadowMapSize=new THREE.Vector2(C.shadowMapWidth,C.shadowMapHeight),C.shadowMatrix=new THREE.Matrix4}if(!C.shadowCamera){if(C instanceof THREE.SpotLight)C.shadowCamera=new THREE.PerspectiveCamera(C.shadowCameraFov,C.shadowMapWidth/C.shadowMapHeight,C.shadowCameraNear,C.shadowCameraFar)
else{if(!(C instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow")
continue}C.shadowCamera=new THREE.OrthographicCamera(C.shadowCameraLeft,C.shadowCameraRight,C.shadowCameraTop,C.shadowCameraBottom,C.shadowCameraNear,C.shadowCameraFar)}E.add(C.shadowCamera),E.autoUpdate===!0&&E.updateMatrixWorld()}C.shadowCameraVisible&&!C.cameraHelper&&(C.cameraHelper=new THREE.CameraHelper(C.shadowCamera),C.shadowCamera.add(C.cameraHelper)),C.isVirtual&&F.originalCamera==p&&i(p,C),x=C.shadowMap,H=C.shadowMatrix,b=C.shadowCamera,b.position.setFromMatrixPosition(C.matrixWorld),d.setFromMatrixPosition(C.target.matrixWorld),b.lookAt(d),b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),C.cameraHelper&&(C.cameraHelper.visible=C.shadowCameraVisible),C.shadowCameraVisible&&C.cameraHelper.update(),H.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),H.multiply(b.projectionMatrix),H.multiply(b.matrixWorldInverse),f.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),u.setFromMatrix(f),o.setRenderTarget(x),o.clear(),m.length=0,t(E,E,b)
var z,B,k
for(T=0,y=m.length;T<y;T++)M=m[T],S=M.object,_=M.buffer,z=n(S),B=void 0!==S.geometry.morphTargets&&S.geometry.morphTargets.length>0&&z.morphTargets,k=S instanceof THREE.SkinnedMesh&&z.skinning,w=S.customDepthMaterial?S.customDepthMaterial:k?B?c:l:B?h:s,o.setMaterialFaces(z),_ instanceof THREE.BufferGeometry?o.renderBufferDirect(b,E.__lights,P,w,_,S):o.renderBuffer(b,E.__lights,P,w,_,S)
var N=E.__webglObjectsImmediate
for(T=0,y=N.length;T<y;T++)M=N[T],S=M.object,S.visible&&S.castShadow&&(S._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,S.matrixWorld),o.renderImmediateObject(b,E.__lights,P,s,S))}var O=o.getClearColor(),I=o.getClearAlpha()
a.clearColor(O.r,O.g,O.b,I),a.enable(a.BLEND),o.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function t(){var t=r.createProgram(),e=r.createShader(r.VERTEX_SHADER),n=r.createShader(r.FRAGMENT_SHADER)
return r.shaderSource(e,["precision "+i.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),r.shaderSource(n,["precision "+i.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),r.compileShader(e),r.compileShader(n),r.attachShader(t,e),r.attachShader(t,n),r.linkProgram(t),t}function e(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}var r,i,n,a,o,s,h,l,c,u,f=[]
this.init=function(e){r=e.context,i=e,a=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),o=new Uint16Array([0,1,2,0,2,3]),s=r.createBuffer(),h=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,s),r.bufferData(r.ARRAY_BUFFER,a,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h),r.bufferData(r.ELEMENT_ARRAY_BUFFER,o,r.STATIC_DRAW),l=t(),c={position:r.getAttribLocation(l,"position"),uv:r.getAttribLocation(l,"uv")},u={uvOffset:r.getUniformLocation(l,"uvOffset"),uvScale:r.getUniformLocation(l,"uvScale"),rotation:r.getUniformLocation(l,"rotation"),scale:r.getUniformLocation(l,"scale"),color:r.getUniformLocation(l,"color"),map:r.getUniformLocation(l,"map"),opacity:r.getUniformLocation(l,"opacity"),modelViewMatrix:r.getUniformLocation(l,"modelViewMatrix"),projectionMatrix:r.getUniformLocation(l,"projectionMatrix"),fogType:r.getUniformLocation(l,"fogType"),fogDensity:r.getUniformLocation(l,"fogDensity"),fogNear:r.getUniformLocation(l,"fogNear"),fogFar:r.getUniformLocation(l,"fogFar"),fogColor:r.getUniformLocation(l,"fogColor"),alphaTest:r.getUniformLocation(l,"alphaTest")}
var f=document.createElement("canvas")
f.width=8,f.height=8
var E=f.getContext("2d")
E.fillStyle="white",E.fillRect(0,0,8,8),n=new THREE.Texture(f),n.needsUpdate=!0},this.render=function(t,a,o,E){if(f.length=0,t.traverseVisible(function(t){t instanceof THREE.Sprite&&f.push(t)}),0!==f.length){r.useProgram(l),r.enableVertexAttribArray(c.position),r.enableVertexAttribArray(c.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,s),r.vertexAttribPointer(c.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(c.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,h),r.uniformMatrix4fv(u.projectionMatrix,!1,a.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(u.map,0)
var p=0,d=0,m=t.fog
m?(r.uniform3f(u.fogColor,m.color.r,m.color.g,m.color.b),m instanceof THREE.Fog?(r.uniform1f(u.fogNear,m.near),r.uniform1f(u.fogFar,m.far),r.uniform1i(u.fogType,1),p=1,d=1):m instanceof THREE.FogExp2&&(r.uniform1f(u.fogDensity,m.density),r.uniform1i(u.fogType,2),p=2,d=2)):(r.uniform1i(u.fogType,0),p=0,d=0)
for(var v=0,g=f.length;v<g;v++){var T=f[v],y=T.material
T._modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,T.matrixWorld),T.z=-T._modelViewMatrix.elements[14]}f.sort(e)
for(var R=[],v=0,g=f.length;v<g;v++){var T=f[v],y=T.material
r.uniform1f(u.alphaTest,y.alphaTest),r.uniformMatrix4fv(u.modelViewMatrix,!1,T._modelViewMatrix.elements),R[0]=T.scale.x,R[1]=T.scale.y
var x=0
t.fog&&y.fog&&(x=d),p!==x&&(r.uniform1i(u.fogType,x),p=x),null!==y.map?(r.uniform2f(u.uvOffset,y.map.offset.x,y.map.offset.y),r.uniform2f(u.uvScale,y.map.repeat.x,y.map.repeat.y)):(r.uniform2f(u.uvOffset,0,0),r.uniform2f(u.uvScale,1,1)),r.uniform1f(u.opacity,y.opacity),r.uniform3f(u.color,y.color.r,y.color.g,y.color.b),r.uniform1f(u.rotation,y.rotation),r.uniform2fv(u.scale,R),i.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),i.setDepthTest(y.depthTest),i.setDepthWrite(y.depthWrite),y.map&&y.map.image&&y.map.image.width?i.setTexture(y.map,0):i.setTexture(n,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0)}r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function t(e,r,i){if(r.visible){var n=e.__webglObjects[r.id]
if(n&&(r.frustumCulled===!1||h.intersectsObject(r)===!0))for(var a=0,o=n.length;a<o;a++){var s=n[a]
r._modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld),c.push(s)}for(var a=0,o=r.children.length;a<o;a++)t(e,r.children[a],i)}}function e(t){return t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material}this.enabled=!1,this.renderTarget=null
var r,i,n,a,o,s,h=new THREE.Frustum,l=new THREE.Matrix4,c=[]
this.init=function(t){r=t.context,i=t
var e=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(e.uniforms)
n=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h}),a=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,skinning:!0}),s=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:h,morphTargets:!0,skinning:!0}),n._shadowPass=!0,a._shadowPass=!0,o._shadowPass=!0,s._shadowPass=!0},this.render=function(t,e){this.enabled&&this.update(t,e)},this.update=function(u,f){var E,p,d,m,v,g,T,y=null
r.clearColor(1,1,1,1),r.disable(r.BLEND),i.setDepthTest(!0),u.autoUpdate===!0&&u.updateMatrixWorld(),f.matrixWorldInverse.getInverse(f.matrixWorld),l.multiplyMatrices(f.projectionMatrix,f.matrixWorldInverse),h.setFromMatrix(l),i.setRenderTarget(this.renderTarget),i.clear(),c.length=0,t(u,u,f)
var R,x,H
for(E=0,p=c.length;E<p;E++)v=c[E],g=v.object,d=v.buffer,g instanceof THREE.PointCloud&&!g.customDepthMaterial||(R=e(g),R&&i.setMaterialFaces(g.material),x=void 0!==g.geometry.morphTargets&&g.geometry.morphTargets.length>0&&R.morphTargets,H=g instanceof THREE.SkinnedMesh&&R.skinning,m=g.customDepthMaterial?g.customDepthMaterial:H?x?s:o:x?a:n,d instanceof THREE.BufferGeometry?i.renderBufferDirect(f,u.__lights,y,m,d,g):i.renderBuffer(f,u.__lights,y,m,d,g))
for(T=u.__webglObjectsImmediate,E=0,p=T.length;E<p;E++)v=T[E],g=v.object,g.visible&&(g._modelViewMatrix.multiplyMatrices(f.matrixWorldInverse,g.matrixWorld),i.renderImmediateObject(f,u.__lights,y,n,g))
var b=i.getClearColor(),_=i.getClearAlpha()
r.clearColor(b.r,b.g,b.b,_),r.enable(r.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}}
