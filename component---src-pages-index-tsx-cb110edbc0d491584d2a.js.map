{"version":3,"sources":["webpack:///./src/components/content-article.tsx","webpack:///./src/components/post-excerpt.tsx","webpack:///./src/pages/index.tsx"],"names":["ContentArticle","styled","article","StyledPostExcerpt","div","Thumbnail","thumbnail","staticThumbnail","StyledThumbnail","fluid","childImageSharp","StyledStaticThumbnail","src","thumbnailStyles","Img","img","PostExcerpt","node","title","excerpt","description","frontmatter","to","fields","slug","dangerouslySetInnerHTML","__html","pageQuery","Index","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","keywords","className","map","key"],"mappings":"+YAEO,IAAMA,E,UAAiBC,EAAOC,QAAV,M,2dCsC3B,IAAMC,EAAoBF,IAAOG,IAAV,KAYjBC,EAAkC,SAAC,GAAiC,IAAhCC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,gBACnD,OAAID,EAAkB,kBAACE,EAAD,CAAiBC,MAAOH,EAAUI,gBAAgBD,QACpEF,EAAwB,kBAACI,EAAD,CAAuBC,IAAKL,IACjD,MAEHM,EAAkB,qHASlBL,EAAkBP,YAAOa,IAAPb,CAAH,IACjBY,GAEEF,EAAwBV,IAAOc,IAAV,IACvBF,GAgBWG,IAbiC,SAAC,GAA+B,IAA9BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAChDC,EADwE,EAAjBC,aAC9BH,EAAKE,QACpC,OACE,kBAAChB,EAAD,KACE,kBAACE,EAAD,CAAWC,UAAWW,EAAKI,YAAYf,UAAWC,gBAAiBU,EAAKI,YAAYd,kBACpF,4BACE,kBAAC,OAAD,CAAMe,GAAIL,EAAKM,OAAOC,MAAON,IAE/B,uBAAGO,wBAAyB,CAACC,OAAQP,Q,kCCjF3C,0HAyCaQ,EAAY,aAoCVC,UAjEoB,SAAC,GAAW,IAAVC,EAAU,EAAVA,KAC7BC,EAAYD,EAAKE,KAAKC,aAAad,MACnCe,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQjB,MAAOY,GACb,kBAAC,IAAD,CAAMZ,MAAM,YAAYkB,SAAU,CAAC,OAAD,iCAClC,kBAAC,IAAD,CAAgBC,UAAU,QACvBJ,EAAMK,KAAI,YAAY,IAAVrB,EAAU,EAAVA,KACLC,EAAQD,EAAKI,YAAYH,OAASD,EAAKM,OAAOC,KAC9CJ,EAAcH,EAAKI,YAAYD,YACrC,OAAO,kBAAC,IAAD,CAAamB,IAAKtB,EAAKM,OAAOC,KAAMP,KAAMA,EAAMC,MAAOA,EAAOE,YAAaA","file":"component---src-pages-index-tsx-cb110edbc0d491584d2a.js","sourcesContent":["import {styled} from '../styles/theme'\n\nexport const ContentArticle = styled.article`\n  margin-left: 13vw;\n  width: 560px;\n\n  @media (max-width: 760px) {\n    margin-left: 2vw;\n    margin-right: 2vw;\n    width: 94vw;\n    min-width: 300px;\n  }\n`\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport {styled} from '../styles/theme'\n\ninterface PostPreview {\n  readonly node: {\n    readonly excerpt: string\n    readonly fields: {\n      readonly slug: string\n    }\n    readonly frontmatter: {\n      readonly date: string\n      readonly title: string\n      readonly description: string\n      readonly thumbnail: {\n        readonly childImageSharp: {\n          fluid: any\n        }\n      }\n      readonly staticThumbnail: string\n    }\n  }\n}\n\ninterface PostExcerptProps {\n  title: string\n  PostPreview\n}\n\ninterface ThumbProps {\n  readonly thumbnail: {\n    readonly childImageSharp: {\n      fluid: any\n    }\n  }\n  readonly staticThumbnail: string\n}\n\nconst StyledPostExcerpt = styled.div`\n  margin-bottom: 3em;\n  overflow: auto;\n\n  h3 {\n    a,\n    a:visited {\n      color: hsl(230, 50%, 45%);\n    }\n  }\n`\n\nconst Thumbnail: React.FC<ThumbProps> = ({thumbnail, staticThumbnail}) => {\n  if (thumbnail) return <StyledThumbnail fluid={thumbnail.childImageSharp.fluid} />\n  if (staticThumbnail) return <StyledStaticThumbnail src={staticThumbnail} />\n  return null\n}\nconst thumbnailStyles = `\n  width: 256px;\n  float: right;\n  margin-left: 1em;\n\n  @media (max-width: 760px) {\n    width: 150px;\n  }\n`\nconst StyledThumbnail = styled(Img)`\n  ${thumbnailStyles}\n`\nconst StyledStaticThumbnail = styled.img`\n  ${thumbnailStyles}\n`\n\nconst PostExcerpt: React.FC<PostExcerptProps> = ({node, title, description}) => {\n  const excerpt = description || node.excerpt\n  return (\n    <StyledPostExcerpt>\n      <Thumbnail thumbnail={node.frontmatter.thumbnail} staticThumbnail={node.frontmatter.staticThumbnail} />\n      <h3>\n        <Link to={node.fields.slug}>{title}</Link>\n      </h3>\n      <p dangerouslySetInnerHTML={{__html: excerpt}} />\n    </StyledPostExcerpt>\n  )\n}\n\nexport default PostExcerpt\n","import React from 'react'\nimport {graphql} from 'gatsby'\n\nimport Head from '../components/head'\nimport Layout from '../components/layout'\nimport PostExcerpt from '../components/post-excerpt.tsx'\nimport {ContentArticle} from '../components/content-article'\n\ninterface PageProps {\n  readonly data: PageQueryData\n}\n\nconst Index: React.FC<PageProps> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"All posts\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n      <ContentArticle className=\"body\">\n        {posts.map(({node}) => {\n          const title = node.frontmatter.title || node.fields.slug\n          const description = node.frontmatter.description\n          return <PostExcerpt key={node.fields.slug} node={node} title={title} description={description} />\n        })}\n      </ContentArticle>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    edges: PostPreview[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {published: {ne: false}}}\n      sort: {fields: [frontmatter___date], order: DESC}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 256) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            staticThumbnail\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n"],"sourceRoot":""}