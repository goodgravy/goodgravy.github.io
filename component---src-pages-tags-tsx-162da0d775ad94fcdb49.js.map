{"version":3,"sources":["webpack:///./src/components/content-article.tsx","webpack:///./src/pages/tags.tsx"],"names":["ContentArticle","styled","article","pageQuery","Tags","data","siteTitle","site","siteMetadata","title","group","allMarkdownRemark","keywords","className","sort","tag1","tag2","totalCount","map","tag","key","fieldValue","to"],"mappings":"+YAEO,IAAMA,E,UAAiBC,EAAOC,QAAV,M,sKCsDdC,EAAY,aAgBVC,UA7De,SAAC,GAAW,IAAVC,EAAU,EAAVA,KACxBC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,mBAAqBN,EAAKM,kBAAkBD,MAE/D,OACE,kBAAC,IAAD,CAAQD,MAAOH,GACb,kBAAC,IAAD,CAAMG,MAAM,WAAWG,SAAU,CAAC,OAAD,gCACjC,kBAAC,IAAD,CAAgBC,UAAU,QACxB,wBAAIA,UAAU,eAAd,YACCH,GACCA,EACGI,MAAK,SAACC,EAAMC,GAAP,OAAgBA,EAAKC,WAAaF,EAAKE,cAC5CC,KACC,SAACC,GAAD,OACEA,GACE,yBAAKC,IAAKD,EAAIE,YACZ,4BACE,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KAA+BF,EAAIE,aAE7C,+BACGF,EAAIF,WADP,QAEsB,IAAnBE,EAAIF,WAAmB,GAAK","file":"component---src-pages-tags-tsx-162da0d775ad94fcdb49.js","sourcesContent":["import {styled} from '../styles/theme'\n\nexport const ContentArticle = styled.article`\n  margin-left: 13vw;\n  width: 560px;\n\n  @media (max-width: 760px) {\n    margin-left: 2vw;\n    margin-right: 2vw;\n    width: 94vw;\n    min-width: 300px;\n  }\n`\n","import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Head from '../components/head'\nimport {ContentArticle} from '../components/content-article'\n\ninterface Props {\n  readonly data: PageQueryData\n}\n\nconst Tags: React.FC<Props> = ({data}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n\n  return (\n    <Layout title={siteTitle}>\n      <Head title=\"All tags\" keywords={[`blog`, `goodgravy`, `jmsbrdy`, `tags`]} />\n      <ContentArticle className=\"body\">\n        <h1 className=\"page-header\">All tags</h1>\n        {group &&\n          group\n            .sort((tag1, tag2) => tag2.totalCount - tag1.totalCount)\n            .map(\n              (tag) =>\n                tag && (\n                  <div key={tag.fieldValue}>\n                    <h3>\n                      <Link to={`/tags/${tag.fieldValue}/`}>{tag.fieldValue}</Link>\n                    </h3>\n                    <small>\n                      {tag.totalCount} post\n                      {tag.totalCount === 1 ? '' : 's'}\n                    </small>\n                  </div>\n                ),\n            )}\n      </ContentArticle>\n    </Layout>\n  )\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    group: {\n      fieldValue: string\n      totalCount: number\n    }[]\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {published: {ne: false}}}) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags\n"],"sourceRoot":""}