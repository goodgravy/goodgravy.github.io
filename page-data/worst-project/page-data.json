{"componentChunkName":"component---src-templates-post-tsx","path":"/worst-project/","result":{"data":{"site":{"siteMetadata":{"title":"jmsbrdy"}},"markdownRemark":{"id":"8ae77680-977d-5045-bde9-cb184baf785c","excerpt":"I was recently asked: what’s the worst project you ever worked on? After a quick scan through my mental graveyard of half-finished, half-assed\nideas too embarrassing for me to dignify with a link here, I settled upon my\nfirst job out of university. The company I was hired as a Software Engineer by…","html":"<p>I was recently asked:</p>\n<blockquote>\n<p>what’s the worst project you ever worked on?</p>\n</blockquote>\n<p>After a quick scan through my mental graveyard of half-finished, half-assed\nideas too embarrassing for me to dignify with a link here, I settled upon my\nfirst job out of university.</p>\n<h2 id=\"the-company\" style=\"position:relative;\"><a href=\"#the-company\" aria-label=\"the company permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The company</h2>\n<p>I was hired as a Software Engineer by IBM, to work out of their main UK\ndevelopment laboratory, <a href=\"http://en.wikipedia.org/wiki/Hursley_House\">Hursley\nPark</a>, home of the mighty <strong>CICS</strong>,\n<strong>WebSphere MQ</strong> and <strong>MessageBroker</strong> products.</p>\n<p>These are the gold standard in messaging and transaction processing backends\nthat do the heavy-lifting behind the scenes of lots of Big Enterprise Systems.</p>\n<h2 id=\"the-role\" style=\"position:relative;\"><a href=\"#the-role\" aria-label=\"the role permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The role</h2>\n<p>I was part of the <em>WebSphere MQ build team</em>. We were responsible for taking the\nbig MQ codebase and compiling it on all the different supported platforms.\nLinux on several architectures, Windows, AIX, HP-UX, iSeries, zSeries, …</p>\n<p>The main challenge of the role was reliably managing jobs in wildly heterogeneous\nenvironments and getting useful information back if something went wrong.</p>\n<p>The team had originally used a bunch of cron-style jobs on each build machine,\nwhich – a couple of times a day – would pull the code, compile it, and make the\nresults available on a network share.</p>\n<h2 id=\"the-project\" style=\"position:relative;\"><a href=\"#the-project\" aria-label=\"the project permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The project</h2>\n<p>By the time I arrived, however, the cron jobs had been replaced by <strong>JEM</strong>: the Job\nExecution Manager.</p>\n<p>JEM was a central server, communicating with agents on each build machine. It\nmeant that builds could be started on arbitrary machines, at arbitrary times,\nwith arbitrary changesets; it also gated the jobs so that build machines didn’t\nget swamped with several at once.</p>\n<p>JEM was kind of A Big Deal and – if the scuttlebutt was to be believed – had\nlaunched the guy behind it onto a promotion hyper-fast track.</p>\n<h2 id=\"the-problem\" style=\"position:relative;\"><a href=\"#the-problem\" aria-label=\"the problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The problem</h2>\n<p>Despite JEM only being two or three years old at that point, it had already\nbecome something of a black box to everyone on the team, as the creators had moved\non to other roles:</p>\n<ul>\n<li>“Turn if off and on again” was always the first (and normally only) strategy.\nThere was no point trying to capture information about the broken state,\nbecause no one could take action on it anyway.</li>\n<li>We couldn’t add support for new build architectures because the details of\nthe communication protocol were only “documented” in the (poorly-written)\ncode.</li>\n<li>The engineers were rightly clamouring for Continuous Integration, but\nchanging the dynamics of JEM to support it was such an intimidating project\nwe couldn’t even begin to consider it.</li>\n</ul>\n<h2 id=\"why-is-this-the-worst\" style=\"position:relative;\"><a href=\"#why-is-this-the-worst\" aria-label=\"why is this the worst permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why is this the worst?</h2>\n<p>Every developer is familiar\nwith <a href=\"http://en.wikipedia.org/wiki/Not_invented_here\">Not Invented Here</a>, and\nhas probably been responsible for it at some point. I know I have!</p>\n<p>But let’s look at the requirements for JEM:</p>\n<ul>\n<li>jobs to be orchestrated from a central server</li>\n<li>reliable communication required between server and clients</li>\n<li>clients required on all the architectures MQ could run on</li>\n<li>build requests to be queued until client is available to process them</li>\n</ul>\n<p>Does that remind you of anything?</p>\n<p>How about <a href=\"http://www-03.ibm.com/software/products/us/en/wmq/\">WebSphere MQ</a>?</p>\n<p>A team of <em>four people</em> was required to administer and manage JEM, when the\nvery thing it was building had been the perfect solution all along. It should\nhave been <a href=\"http://en.wikipedia.org/wiki/Self-hosting\">self-hosting</a>!</p>\n<h2 id=\"summary\" style=\"position:relative;\"><a href=\"#summary\" aria-label=\"summary permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Summary</h2>\n<p>To roll your own solution when a suitable alternative already exists is a poor\nshow, but understandable and very common.</p>\n<p>Still rolling your own solution when the alternative is well-known to\nyou and you can use it for free – and with effectively unlimited support from the\nworld’s top experts – is inexcusable.</p>\n<p><strong>Still</strong> rolling your own solution when the tangible output of your daily work\n<em>is itself the perfect solution</em> (which you can use for free, with unlimited\nsupport)… that’s the worst project I ever worked on.</p>","frontmatter":{"title":"The worst project I ever worked on","description":"I was recently asked: what's the worst project you ever worked on? I settled upon my first job out of university – taking \"Not Invented Here\" syndrome to a whole new level.","keywords":["IBM","websphere","mq","hursley","hursley park","job","compilation"],"coverImage":null}}},"pageContext":{"slug":"/worst-project/"}}}