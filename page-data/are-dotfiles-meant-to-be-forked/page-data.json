{"componentChunkName":"component---src-templates-post-tsx","path":"/are-dotfiles-meant-to-be-forked/","result":{"data":{"site":{"siteMetadata":{"title":"jmsbrdy"}},"markdownRemark":{"id":"28dff1bb-0e51-52b1-9728-31690dfbb4bb","excerpt":"Tl;dr: I don’t think so, so I created Full Stop as a way for us to share dotfile tooling while staying agnostic about the content.","html":"<p><strong>Tl;dr</strong>: I don’t think so, so I created <a href=\"https://github.com/goodgravy/full-stop/\">Full Stop</a> as a way for us to share dotfile <strong>tooling</strong> while staying agnostic about the <strong>content</strong>.</p>\n<!-- excerpt -->\n<p>In <a href=\"https://zachholman.com/2010/08/dotfiles-are-meant-to-be-forked/\">“Dotfiles Are Meant to Be\nForked”</a>, Zach\nHolman points out that we <em>all</em> benefit through sharing the efficiency-boosting\ntips, tricks, and tools many of us have in our\n<a href=\"https://dotfiles.github.io/\">dotfiles</a>, and I completely agree.</p>\n<p>However, I think it’s important to draw a distinction between the <strong>tooling</strong>\naround dotfiles, and the <strong>content</strong> of the dotfiles themselves.</p>\n<p>The <strong>tooling</strong> – which handles the grunt-work of applying the dotfiles\nconfiguration to a computer – should be quite consistent between all of us.\nThere’s not much personal preference or variation here: code-sharing makes\nsense for our tooling.</p>\n<p>Sharing is crucially important for the <strong>content</strong> of the dotfiles, too. I\nalways seem to be grabbing snippets of configuration to tweak the way my editor\nworks, or how my terminal looks.</p>\n<p><em>However, forking isn’t the right sharing mechanism for dotfiles content.</em></p>\n<p>To be fair, I think what Zach was saying is that we should fork each others’\ndotfiles as a starting point, and not expect to merge from the upstream (or\nfrom anywhere else) from that point onwards.</p>\n<p>Unfortunately, with that approach we don’t benefit from upstream changes we\n<em>are</em> interested in, like the\n<a href=\"https://github.com/Homebrew/homebrew-bundle\">Brewfile</a> support added to\n<code class=\"language-text\">holman/dotfiles</code>. Both your fork and the upstream have been independently\ngorging on dotfiles tidbits from across the Internet with epicurean abandon,\nand the divergent commit history means it’s non-trivial to pull those sorts of\nimprovements downstream. They may as well be completely separate repos!</p>\n<h2 id=\"whats-the-alternative\" style=\"position:relative;\"><a href=\"#whats-the-alternative\" aria-label=\"whats the alternative permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What’s the alternative?</h2>\n<p>I had been using a fork of\n<a href=\"https://github.com/holman/dotfiles\"><code class=\"language-text\">holman/dotfiles</code></a> for a while to track\nand share my configuration over time and space. It worked pretty well, but\nthere were two main problems with it:</p>\n<ol>\n<li>The repo comes with a <em>lot</em> of bundled configuration: Vim, Ruby, Atom,\nNode, Xcode, Go, … The recommended approach is to fork the repo, but that\nmeans from the first commit you’re encumbered with a bunch of stuff you\ndon’t necessarily care for.</li>\n<li>The tooling which manages the configuration is mixed directly into the\nconfiguration files themselves. There are bi-directional dependencies and\nit’s really hard to see where one ends and another begins. It’s almost\nimpossible to benefit from tooling improvements that exist upstream because\nyou need to deal with all of the unwanted configuration updates that have\nalso happened upstream.</li>\n</ol>\n<p>As a result, I created <a href=\"https://github.com/goodgravy/full-stop/\">Full Stop</a>.</p>\n<p>Full Stop is a small framework on which to build your dotfiles. It defines a\nsimple structure and set of rules to follow in your dotfiles, and expects to be\nembedded in your dotfiles repo either as a submodule or a subtree.</p>\n<p>When you build your dotfiles on top of Full Stop, your environment\ncustomisations are kept safe in single, shared, and version-controlled place.\nAll Full Stop does is apply these customisations wherever you need them.</p>\n<h2 id=\"how-is-full-stop-different\" style=\"position:relative;\"><a href=\"#how-is-full-stop-different\" aria-label=\"how is full stop different permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How is Full Stop different?</h2>\n<p>Full Stop tries to draw a line between the content of your dotfiles (which you\nown, and you alone), and the plumbing which hooks up that configuration to take\neffect on a system.</p>\n<p>Even if all of our personal configurations are completely different, we should be\nable to use the same tooling to apply it to a computer. This is the goal of\nFull Stop.</p>\n<p>As for the actual content of your dotfiles: sure, grab someone else’s to get\nstarted with. <a href=\"https://github.com/goodgravy/dotfiles/archive/master.zip\">Grab\nmine</a>! But go ahead\nand also grab whatever useful nuggets you come across and include those too.\nOur dotfiles should be a wildly heterogeneous grab bag of snippets from here,\nthere, and everywhere that constantly shift over time.</p>\n<p>Let’s use code-sharing where it makes sense – for the tooling – and just\ncopy-paste snippets for the rest.</p>\n<h2 id=\"interested\" style=\"position:relative;\"><a href=\"#interested\" aria-label=\"interested permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interested?</h2>\n<p>See the <a href=\"https://github.com/goodgravy/full-stop/\">Full Stop docs</a>.</p>","frontmatter":{"title":"Are dotfiles meant to be forked?","description":null,"keywords":["tech","code","dotfiles","open source"],"coverImage":null}}},"pageContext":{"slug":"/are-dotfiles-meant-to-be-forked/"}}}