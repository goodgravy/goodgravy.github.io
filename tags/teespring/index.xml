<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Teespring on jmsbrdy.com</title>
    <link>https://jmsbrdy.com/tags/teespring/</link>
    <description>Recent content in Teespring on jmsbrdy.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 29 Mar 2018 06:21:34 -0700</lastBuildDate>
    
	<atom:link href="https://jmsbrdy.com/tags/teespring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>InnoDB and Table-level Locking</title>
      <link>https://jmsbrdy.com/innodb-and-table-level-locking/</link>
      <pubDate>Thu, 29 Mar 2018 06:21:34 -0700</pubDate>
      
      <guid>https://jmsbrdy.com/innodb-and-table-level-locking/</guid>
      <description>&lt;p&gt;One of the main reasons InnoDB is the go-to choice for our MySQL tables is that it supports row-level locking&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This means that as we&amp;rsquo;re reading from and writing to a table, we don&amp;rsquo;t need to wait for &lt;strong&gt;all&lt;/strong&gt; the other processes to finish up their work before we can get access to that table.&lt;/p&gt;

&lt;p&gt;For larger tables, this ability to have multiple processes working on the same table at the same time is almost essential to get any level of decent performance, for most workloads.&lt;/p&gt;

&lt;p&gt;However, we recently ran into a problem where – because of a detail of how InnoDB and MySQL work – we ended up doing table-level locking rather than row-level, with disastrous results.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Take Home Tests</title>
      <link>https://jmsbrdy.com/take-home-tests/</link>
      <pubDate>Wed, 24 Jan 2018 15:57:19 +0100</pubDate>
      
      <guid>https://jmsbrdy.com/take-home-tests/</guid>
      <description>&lt;p&gt;I recently came across &lt;a href=&#34;https://www.reddit.com/r/cscareerquestions/comments/7rdogv/dont_do_the_long_take_home_assignments_like/&#34;&gt;a discussion on Reddit&lt;/a&gt; concerning take-home tests as part of an interview process. Is it was acceptable for companies to ask candidates to work on a problem in their own time, so that their submitted solution helps decide whether to move forwards to an on-site interview?&lt;/p&gt;

&lt;p&gt;The level of antipathy towards take-home tests in that discussion was an enormous surprise. The majority of commenters were not just against the idea, but &lt;strong&gt;virulently&lt;/strong&gt; so, railing against it as another example of unreasonable demands made on candidates. Most people viewed these tests as a waste of time, rude, disrespectful, or a combination of all three. I think there was &lt;a href=&#34;https://www.reddit.com/r/cscareerquestions/comments/7rdogv/dont_do_the_long_take_home_assignments_like/dsw9cmk/&#34;&gt;only one person&lt;/a&gt; whose opinion wasn&amp;rsquo;t negative, and even that was ambivalent at best.&lt;/p&gt;

&lt;p&gt;I have been asked to do take-home tests in the past, and did see that if poorly conceived and executed they can be a bad experience for the candidate. However, if they&amp;rsquo;re approached in a thoughtful and careful way, they&amp;rsquo;re one of the best tools for effective interviewing. Here&amp;rsquo;s what I think does—and doesn&amp;rsquo;t—work.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Prototype: Virtual Reality e-commerce</title>
      <link>https://jmsbrdy.com/prototype-virtual-reality-e-commerce/</link>
      <pubDate>Sat, 06 Jun 2015 14:06:44 +0100</pubDate>
      
      <guid>https://jmsbrdy.com/prototype-virtual-reality-e-commerce/</guid>
      <description>&lt;p&gt;At &lt;a href=&#34;https://teespring.com/&#34;&gt;Teespring&lt;/a&gt; we have quarterly hackathons. We all
throw suggestions into a melting-pot of ideas in the run-up to the event, with
the most promising, most interesting, and most popular suggestions graduating
to be hacked upon by a small team for a couple of days.
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>